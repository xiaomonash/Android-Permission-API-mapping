<android.media.Spatializer: int getDesiredHeadTrackingMode()>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.telephony.ims.ImsMmTelManager: void setRttCapabilitySetting(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.media.Spatializer: boolean isAvailableForDevice(AudioDeviceAttributes)>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.hardware.display.ColorDisplayManager: boolean setNightDisplayColorTemperature(int)>|android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS
<android.security.keystore.recovery.RecoveryController: void setRecoverySecretTypes(int[])>|android.permission.RECOVER_KEYSTORE
<android.media.AudioManager: int getMaxVolumeIndexForAttributes(AudioAttributes)>|android.permission.MODIFY_AUDIO_ROUTING
<android.hardware.fingerprint.FingerprintManager: void detectFingerprint(CancellationSignal,FingerprintDetectionCallback,int)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.telephony.TelephonyManager: boolean isTetheringApnRequired()>|android.permission.MODIFY_PHONE_STATE
<android.hardware.camera2.CameraManager: void injectCamera(String,String,String,Executor,InjectionStatusCallback)>|android.permission.CAMERA_INJECT_EXTERNAL_CAMERA
<android.provider.DeviceConfig: boolean deleteProperty(String,String)>|android.permission.WRITE_DEVICE_CONFIG
<android.os.image.DynamicSystemManager.Session: boolean setAshmem(ParcelFileDescriptor,long)>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.hardware.display.ColorDisplayManager: boolean setSaturationLevel(int)>|android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS
<android.os.SystemUpdateManager: void updateSystemUpdateInfo(PersistableBundle)>|android.permission.RECOVERY
<android.hardware.biometrics.BiometricManager.Strings: CharSequence getSettingName()>|android.permission.USE_BIOMETRIC
<android.service.voice.AlwaysOnHotwordDetector: int getParameter(int)>|android.permission.RECORD_AUDIO|android.permission.CAPTURE_AUDIO_HOTWORD
<com.android.server.inputmethod.InputMethodManagerService.ShellCommandImpl: int onCommand(String)>|android.permission.DUMP|android.permission.INTERACT_ACROSS_USERS_FULL|android.permission.WRITE_SECURE_SETTINGS
<android.app.GameManager: int[] getAvailableGameModes(String)>|android.permission.MANAGE_GAME_MODE
<android.content.rollback.RollbackManager: void blockRollbackManager(long)>|android.permission.TEST_MANAGE_ROLLBACKS
<android.location.LocationManager: void flushGnssBatch()>|android.permission.LOCATION_HARDWARE
<android.content.pm.PackageManager: PackageInfo getPackageInfoAsUser(String,PackageInfoFlags,int)>|android.permission.INTERACT_ACROSS_USERS
<android.content.pm.PackageInstaller: void uninstall(VersionedPackage,int,IntentSender)>|android.permission.DELETE_PACKAGES|android.permission.REQUEST_DELETE_PACKAGES
<com.android.server.pm.DexOptHelper: void performPackageDexOptUpgradeIfNeeded()>|android.permission.READ_DEVICE_CONFIG
<android.app.AppOpsManager: void setMode(String,int,String,int)>|android.permission.MANAGE_APP_OPS_MODES
<android.telephony.euicc.EuiccManager: boolean isSupportedCountry(String)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.os.UserManager: boolean isUserEphemeral(int)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.hardware.location.ContextHubManager: ContextHubInfo getContextHubInfo(int)>|android.permission.ACCESS_CONTEXT_HUB
<android.os.PowerManager: void userActivity(long,int,int)>|android.permission.DEVICE_POWER|android.permission.USER_ACTIVITY
<android.app.VrManager: boolean isPersistentVrModeEnabled()>|android.permission.RESTRICTED_VR_ACCESS|android.permission.ACCESS_VR_STATE
<android.os.PowerWhitelistManager: void whitelistAppTemporarily(String,long,int,String)>|android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST
<android.os.RecoverySystem: int rebootAndApply(Context,String,boolean)>|android.permission.RECOVERY|android.permission.REBOOT
<android.location.LocationManager: void setLocationEnabledForUser(boolean,UserHandle)>|android.permission.WRITE_SECURE_SETTINGS
<android.os.image.DynamicSystemClient: void unbind()>|android.permission.INSTALL_DYNAMIC_SYSTEM
<android.os.UserManager: boolean canAddMoreUsers(String)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.hardware.location.ContextHubManager: ContextHubClient createClient(Context,ContextHubInfo,Executor,ContextHubClientCallback)>|android.permission.ACCESS_CONTEXT_HUB
<android.net.NetworkScoreManager: void registerNetworkScoreCallback(int,int,Executor,NetworkScoreCallback)>|android.permission.REQUEST_NETWORK_SCORES
<android.hardware.usb.UsbManager: int getGadgetHalVersion()>|android.permission.MANAGE_USB
<android.hardware.lights.SystemLightsManager: LightState getLightState(Light)>|android.permission.CONTROL_DEVICE_LIGHTS
<android.permission.PermissionManager: void revokeRuntimePermission(String,String,UserHandle,String)>|android.permission.REVOKE_RUNTIME_PERMISSIONS
<android.app.ActivityOptions: void setLaunchTaskId(int)>|android.permission.START_TASKS_FROM_RECENTS
<android.telecom.TelecomManager: TelecomAnalytics dumpAnalytics()>|android.permission.DUMP
<android.os.image.DynamicSystemManager: boolean isInstalled()>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.telephony.SubscriptionManager: void setUiccApplicationsEnabled(int,boolean)>|android.permission.MODIFY_PHONE_STATE
<android.app.WallpaperManager: ParcelFileDescriptor getWallpaperFile(int)>|android.permission.READ_EXTERNAL_STORAGE
<android.hardware.camera2.CameraManager: void openCamera(String,Executor,StateCallback)>|android.permission.CAMERA
<android.permission.PermissionManager: List<PermissionGroupUsage> getIndicatorAppOpUsageData()>|android.permission.GET_APP_OPS_STATS
<android.telephony.ims.ImsMmTelManager: void setVoWiFiRoamingModeSetting(int)>|android.permission.MODIFY_PHONE_STATE
<android.os.IncidentManager: List<PendingReport> getPendingReports()>|android.permission.APPROVE_INCIDENT_REPORTS
<android.media.AudioTrack.TunerConfiguration: int getContentId()>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.TelephonyManager: long getAllowedNetworkTypesBitmask()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: int getCallState(int)>|android.permission.READ_PHONE_STATE
<android.telephony.ims.ImsMmTelManager: void setVtSettingEnabled(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.permission.PermissionControllerService: void onGetHibernationEligibility(String,IntConsumer)>|android.permission.MANAGE_APP_HIBERNATION
<android.os.UserManager: UserInfo createGuest(Context)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<com.android.server.wm.WindowManagerService: void removeKeyguardLockedStateListener(IKeyguardLockedStateListener)>|android.permission.SUBSCRIBE_TO_KEYGUARD_LOCKED_STATE
<android.permission.PermissionManager: boolean addAllowlistedRestrictedPermission(String,String,int)>|android.permission.WHITELIST_RESTRICTED_PERMISSIONS
<android.telephony.TelephonyManager: boolean isApplicationOnUicc(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.content.pm.PackageManager: boolean isAutoRevokeWhitelisted(String)>|android.permission.WHITELIST_AUTO_REVOKE_PERMISSIONS
<android.telephony.TelephonyManager: List<String> getPackagesWithCarrierPrivileges()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.media.tv.TvInputManager: void removeBlockedRating(TvContentRating)>|android.permission.MODIFY_PARENTAL_CONTROLS
<android.telephony.TelephonyCallback.ActiveDataSubscriptionIdListener: void onActiveDataSubscriptionIdChanged(int)>|android.permission.READ_PHONE_STATE
<android.telephony.ims.SipDelegateManager: void destroySipDelegate(SipDelegateConnection,int)>|android.permission.PERFORM_IMS_SINGLE_REGISTRATION
<android.hardware.biometrics.BiometricTestSession: void finishEnroll(int)>|android.permission.TEST_BIOMETRIC
<android.telephony.TelephonyManager: void setSimSlotMapping(Collection<UiccSlotMapping>)>|android.permission.MODIFY_PHONE_STATE
<android.companion.virtual.audio.VirtualAudioSession: void releaseAudioStreams()>|android.permission.MODIFY_AUDIO_ROUTING
<android.view.View: void setUnrestrictedPreferKeepClearRects(List<Rect>)>|android.permission.SET_UNRESTRICTED_KEEP_CLEAR_AREAS
<android.print.PrintManager: void addPrintServicesChangeListener(PrintServicesChangeListener,Handler)>|android.permission.READ_PRINT_SERVICES
<android.location.LocationManager: boolean registerGnssStatusCallback(Callback)>|android.permission.ACCESS_FINE_LOCATION
<android.hardware.biometrics.BiometricManager: int canAuthenticate(int,int)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.app.ActivityOptions: ActivityOptions makeRemoteAnimation(RemoteAnimationAdapter)>|android.permission.CONTROL_REMOTE_APP_TRANSITION_ANIMATIONS
<android.telephony.TelephonyManager: void answerRingingCall()>|android.permission.MODIFY_PHONE_STATE
<android.content.pm.PackageManager: String[] getUnsuspendablePackages(String[])>|android.permission.SUSPEND_APPS
<android.provider.DeviceConfig: String getProperty(String,String)>|android.permission.READ_DEVICE_CONFIG
<android.content.Context: void sendOrderedBroadcastAsUser(Intent,UserHandle,String,int,BroadcastReceiver,Handler,int,String,Bundle)>|android.permission.INTERACT_ACROSS_USERS
<android.provider.DeviceConfig: boolean setProperty(String,String,String,boolean)>|android.permission.WRITE_DEVICE_CONFIG
<android.app.admin.DevicePolicyManager: int getNearbyNotificationStreamingPolicy()>|android.permission.READ_NEARBY_STREAMING_POLICY
<android.content.Context: int startActivitiesAsUser(Intent[],Bundle,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.telephony.ims.ImsMmTelManager: void setAdvancedCallingSettingEnabled(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.fingerprint.FingerprintManager: void removeAll(int,RemovalCallback)>|android.permission.MANAGE_FINGERPRINT
<android.app.contentsuggestions.ContentSuggestionsManager: void setTemporaryService(int,String,int)>|android.permission.MANAGE_CONTENT_SUGGESTIONS
<android.location.LocationManager: boolean addNmeaListener(OnNmeaMessageListener)>|android.permission.ACCESS_FINE_LOCATION
<android.os.PowerWhitelistManager: long whitelistAppTemporarilyForEvent(String,int,int,String)>|android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST
<android.os.UserManager: int getUserSwitchability(UserHandle)>|android.permission.READ_PHONE_STATE|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.hardware.biometrics.BiometricManager.Strings: CharSequence getPromptMessage()>|android.permission.USE_BIOMETRIC
<android.os.PowerWhitelistManager: void removeFromWhitelist(String)>|android.permission.DEVICE_POWER
<android.media.session.MediaSessionManager: void addOnMediaKeyEventDispatchedListener(Executor,OnMediaKeyEventDispatchedListener)>|android.permission.MEDIA_CONTENT_CONTROL
<android.telephony.SubscriptionManager: String getPhoneNumber(int)>|android.permission.READ_PHONE_NUMBERS|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission."carrier privileges"
<android.net.NetworkPolicyManager: void registerSubscriptionCallback(SubscriptionCallback)>|android.permission.OBSERVE_NETWORK_POLICY
<android.telephony.euicc.EuiccManager: int getOtaStatus()>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.telephony.SubscriptionManager: ParcelUuid createSubscriptionGroup(List<Integer>)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.SubscriptionManager: void addSubscriptionsIntoGroup(List<Integer>,ParcelUuid)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.usb.UsbManager: boolean enableUsbData(UsbPort,boolean,int,IUsbOperationInternal)>|android.permission.MANAGE_USB
<android.telephony.TelephonyManager: String getDeviceSoftwareVersion(int)>|android.permission.READ_PHONE_STATE
<android.media.tv.TvInputManager: ParcelFileDescriptor openDvbDevice(DvbDeviceInfo,int)>|android.permission.DVB_DEVICE
<android.location.LocationManager: Location getLastKnownLocation(String)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.content.ContentResolver: Bundle getCache(Uri)>|android.permission.CACHE_CONTENT
<android.media.tv.tuner.Tuner: SharedFilter openSharedFilter(Context,String,Executor,SharedFilterCallback)>|android.permission.ACCESS_TV_SHARED_FILTER
<android.telephony.ims.ImsRcsManager: void addOnAvailabilityChangedListener(Executor,OnAvailabilityChangedListener)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: int getSimCardState(int,int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.window.TaskOrganizer: WindowContainerToken getImeTarget(int)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.os.UserManager: boolean isSameProfileGroup(UserHandle,UserHandle)>|android.permission.MANAGE_USERS|android.permission.QUERY_USERS
<android.app.AlarmManager: void setExact(int,long,PendingIntent)>|android.permission.SCHEDULE_EXACT_ALARM
<android.security.keystore.recovery.RecoveryController: void removeKey(String)>|android.permission.RECOVER_KEYSTORE
<android.os.UserManager: int removeUserWhenPossible(UserHandle,boolean)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.hardware.fingerprint.FingerprintManager: void generateChallenge(int,GenerateChallengeCallback)>|android.permission.MANAGE_FINGERPRINT
<android.app.backup.BackupManager: void excludeKeysFromRestore(String,List<String>)>|android.permission.BACKUP
<android.telephony.TelephonyManager: CellNetworkScanResult getAvailableNetworks()>|android.permission.MODIFY_PHONE_STATE|android.permission.ACCESS_COARSE_LOCATION
<android.telephony.TelephonyManager: void setVoiceActivationState(int)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()>|android.permission.USE_FINGERPRINT
<android.telecom.TelecomManager: List<PhoneAccountHandle> getPhoneAccountsSupportingScheme(String)>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PHONE_STATE
<android.hardware.hdmi.HdmiControlManager: int getHdmiCecVersion()>|android.permission.HDMI_CEC
<android.nfc.NfcAdapter: boolean enable()>|android.permission.WRITE_SECURE_SETTINGS
<android.app.usage.UsageStatsManager: void clearBroadcastEvents()>|android.permission.ACCESS_BROADCAST_RESPONSE_STATS
<android.window.DisplayAreaOrganizer: List<DisplayAreaAppearedInfo> registerOrganizer(int)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.hardware.hdmi.HdmiControlManager: int getTvWakeOnOneTouchPlay()>|android.permission.HDMI_CEC
<android.telephony.TelephonyManager: int getVoiceNetworkType()>|android.permission.READ_PHONE_STATE|android.permission.READ_BASIC_PHONE_STATE
<android.telephony.TelephonyManager: String getGroupIdLevel1()>|android.permission.READ_PHONE_STATE
<android.hardware.display.DisplayManager: boolean shouldAlwaysRespectAppRequestedMode()>|android.permission.OVERRIDE_DISPLAY_MODE_REQUESTS
<android.media.MediaRouter2: void startScan()>|android.permission.MEDIA_CONTENT_CONTROL
<android.app.backup.BackupManager: String[] listAllTransports()>|android.permission.BACKUP
<android.app.backup.BackupManager: void updateTransportAttributes(ComponentName,String,Intent,String,Intent,CharSequence)>|android.permission.BACKUP
<android.content.Context: void sendStickyOrderedBroadcast(Intent,BroadcastReceiver,Handler,int,String,Bundle)>|android.permission.BROADCAST_STICKY
<com.android.server.graphics.fonts.FontManagerService: FontConfig getFontConfig()>|android.permission.UPDATE_FONTS
<android.app.usage.UsageStatsManager: void registerUsageSessionObserver(int,String[],Duration,Duration,PendingIntent,PendingIntent)>|android.permission.OBSERVE_APP_USAGE
<android.telecom.TelecomManager: void setUserSelectedOutgoingPhoneAccount(PhoneAccountHandle)>|android.permission.MODIFY_PHONE_STATE
<android.net.vcn.VcnManager: void addVcnNetworkPolicyChangeListener(Executor,VcnNetworkPolicyChangeListener)>|android.permission.NETWORK_FACTORY
<android.content.Context: void sendOrderedBroadcastAsUser(Intent,UserHandle,String,int,Bundle,BroadcastReceiver,Handler,int,String,Bundle)>|android.permission.INTERACT_ACROSS_USERS
<android.telecom.TelecomManager: boolean handleMmi(String,PhoneAccountHandle)>|android.permission.MODIFY_PHONE_STATE
<android.location.LastLocationRequest.Builder: Builder setAdasGnssBypass(boolean)>|android.permission.LOCATION_BYPASS
<android.hardware.input.VirtualTouchscreen: void sendTouchEvent(VirtualTouchEvent)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.os.PowerManager: boolean isLowPowerStandbySupported()>|android.permission.MANAGE_LOW_POWER_STANDBY|android.permission.DEVICE_POWER
<android.media.AudioManager: void setHfpSamplingRate(int)>|android.permission.BLUETOOTH_STACK
<android.telephony.CarrierConfigManager: void overrideConfig(int,PersistableBundle)>|android.permission.MODIFY_PHONE_STATE
<android.app.AppOpsManager: void setMode(int,int,String,int)>|android.permission.MANAGE_APP_OPS_MODES
<android.net.VpnManager: boolean setAppExclusionList(int,String,List<String>)>|android.permission.NETWORK_SETTINGS|android.permission.NetworkStack.PERMISSION_MAINLINE_NETWORK_STACK|android.permission.NETWORK_STACK
<android.os.Vibrator: void vibrate(long)>|android.permission.VIBRATE
<android.permission.PermissionManager: int checkPermissionForDataDeliveryFromDataSource(String,AttributionSource,String)>|android.permission.UPDATE_APP_OPS_STATS
<android.telephony.ims.RcsUceAdapter: void requestAvailability(Uri,Executor,CapabilitiesCallback)>|android.permission.ACCESS_RCS_USER_CAPABILITY_EXCHANGE|android.permission.READ_CONTACTS
<android.location.LocationManager: List<String> getProviderPackages(String)>|android.permission.READ_DEVICE_CONFIG
<android.permission.PermissionManager: int getRuntimePermissionsVersion()>|android.permission.ADJUST_RUNTIME_PERMISSIONS_POLICY|android.permission.UPGRADE_RUNTIME_PERMISSIONS
<android.app.backup.BackupManager: String getDestinationString(String)>|android.permission.BACKUP
<android.telephony.SubscriptionManager: boolean canDisablePhysicalSubscription()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: boolean resetRadioConfig()>|android.permission.MODIFY_PHONE_STATE
<android.provider.Settings.Global: boolean putString(ContentResolver,String,String,String,boolean,boolean)>|android.permission.MODIFY_SETTINGS_OVERRIDEABLE_BY_RESTORE
<android.app.AppOpsManager: void resetAllModes()>|android.permission.MANAGE_APP_OPS_MODES
<android.telephony.TelephonyManager: boolean setNetworkSelectionModeManual(String,boolean)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: UiccSlotInfo[] getUiccSlotsInfo()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.ActivityManager: boolean switchUser(UserHandle)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.telephony.SubscriptionManager: void removeSubscriptionsFromGroup(List<Integer>,ParcelUuid)>|android.permission.MODIFY_PHONE_STATE
<android.security.keystore.recovery.RecoveryController: RecoveryController getInstance(Context)>|android.permission.RECOVER_KEYSTORE
<android.app.UiModeManager: void setNightModeCustomType(int)>|android.permission.MODIFY_DAY_NIGHT_MODE
<android.telephony.PhoneStateListener: void onPreciseDataConnectionStateChanged(PreciseDataConnectionState)>|android.permission.READ_PRECISE_PHONE_STATE
<android.view.inputmethod.InputMethodManager: List<InputMethodInfo> getEnabledInputMethodListAsUser(int)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.telephony.ims.ImsRcsManager: boolean isCapable(int,int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.biometrics.BiometricManager: String getUiPackage()>|android.permission.TEST_BIOMETRIC
<android.media.AudioManager: void addOnPreferredDevicesForStrategyChangedListener(Executor,OnPreferredDevicesForStrategyChangedListener)>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.TelephonyManager: boolean isDataEnabledForReason(int)>|android.permission.ACCESS_NETWORK_STATE|android.permission.READ_PHONE_STATE|android.permission.MODIFY_PHONE_STATE|android.permission.READ_BASIC_PHONE_STATE
<android.provider.Settings.Config: boolean putString(ContentResolver,String,String,String,boolean)>|android.permission.WRITE_DEVICE_CONFIG
<android.content.pm.PackageInstaller.Session: void removeFile(int,String)>|android.permission.USE_INSTALLER_V2
<android.telephony.SmsManager: List<SmsMessage> getMessagesFromIcc()>|android.permission.ACCESS_MESSAGES_ON_ICC
<android.app.backup.BackupManager: void backupNow()>|android.permission.BACKUP
<android.app.ActivityManager: int getCurrentUser()>|android.permission."android.permission.INTERACT_ACROSS_USERS"|android.permission."android.permission.INTERACT_ACROSS_USERS_FULL"
<android.telephony.TelephonyManager: int getRadioPowerState()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PHONE_STATE
<android.provider.Settings.Config: void registerMonitorCallback(ContentResolver,RemoteCallback)>|android.permission.MONITOR_DEVICE_CONFIG_ACCESS
<android.hardware.biometrics.BiometricManager: void registerEnabledOnKeyguardCallback(IBiometricEnabledOnKeyguardCallback)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.hardware.biometrics.BiometricPrompt: void authenticate(CryptoObject,CancellationSignal,Executor,AuthenticationCallback)>|android.permission.USE_BIOMETRIC
<android.content.pm.PackageManager: boolean updateIntentVerificationStatusAsUser(String,int,int)>|android.permission.SET_PREFERRED_APPLICATIONS
<android.telephony.TelephonyCallback.CallAttributesListener: void onCallAttributesChanged(CallAttributes)>|android.permission.READ_PRECISE_PHONE_STATE
<android.app.AppOpsManager: void clearHistory()>|android.permission.MANAGE_APPOPS
<android.hardware.display.DisplayManager: BrightnessConfiguration getDefaultBrightnessConfiguration()>|android.permission.CONFIGURE_DISPLAY_BRIGHTNESS
<android.app.AppOpsManager: void offsetHistory(long)>|android.permission.MANAGE_APPOPS
<android.hardware.SensorPrivacyManager: void removeSensorPrivacyListener(int,OnSensorPrivacyChangedListener)>|android.permission.OBSERVE_SENSOR_PRIVACY
<android.app.usage.UsageStatsManager: long getLastTimeAnyComponentUsed(String)>|android.permission.INTERACT_ACROSS_USERS|android.permission.PACKAGE_USAGE_STATS
<android.app.WallpaperManager: boolean wallpaperSupportsWcg(int)>|android.permission.READ_EXTERNAL_STORAGE
<android.hardware.hdmi.HdmiControlManager: boolean shouldHandleTvPowerKey()>|android.permission.HDMI_CEC
<com.android.server.content.ContentService: Bundle getCache(String,Uri,int)>|android.permission.CACHE_CONTENT
<com.android.internal.location.GpsNetInitiatedHandler.EmergencyCallListener: void onCallStateChanged(int)>|android.permission.READ_PHONE_STATE
<android.window.DisplayAreaOrganizer: void deleteTaskDisplayArea(WindowContainerToken)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.media.tv.TvInputManager: void releaseTvInputHardware(int,Hardware)>|android.permission.TV_INPUT_HARDWARE
<android.os.BatteryStatsManager: void resetBattery(boolean)>|android.permission.DEVICE_POWER
<android.os.PowerManager: boolean isAmbientDisplaySuppressedForToken(String)>|android.permission.READ_DREAM_STATE
<android.hardware.face.FaceManager: void revokeChallenge(int,int,long)>|android.permission.MANAGE_BIOMETRIC
<android.telecom.TelecomManager: int getCallState()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PHONE_STATE
<android.foo.IColorService: void redAndBlue()>|android.permission.RED|android.permission.BLUE
<android.telephony.SmsManager: int getPremiumSmsConsent(String)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.location.LocationManager: void requestLocationUpdates(long,float,Criteria,PendingIntent)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.app.StatusBarManager: void updateMediaTapToTransferReceiverDisplay(int,MediaRoute2Info,Icon,CharSequence)>|android.permission.MEDIA_CONTENT_CONTROL
<android.os.UserManager: boolean someUserHasAccount(String,String)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.app.ActivityManager: void removeHomeVisibilityListener(HomeVisibilityListener)>|android.permission.SET_ACTIVITY_WATCHER
<android.telephony.SubscriptionManager: List<SubscriptionInfo> getSubscriptionsInGroup(ParcelUuid)>|android.permission.READ_PHONE_STATE
<android.os.BatteryStatsManager: void reportFullWifiLockReleasedFromSource(WorkSource)>|android.permission.UPDATE_DEVICE_STATS
<android.app.Activity: void unregisterRemoteAnimations()>|android.permission.CONTROL_REMOTE_APP_TRANSITION_ANIMATIONS
<android.view.WindowManager: Region getCurrentImeTouchRegion()>|android.permission.RESTRICTED_VR_ACCESS
<android.content.pm.PackageManager: List<ResolveInfo> queryBroadcastReceiversAsUser(Intent,int,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.os.UserManager: boolean isUserSwitcherEnabled(boolean)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.app.ActivityManager: int getUidProcessState(int)>|android.permission.PACKAGE_USAGE_STATS|android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.app.GameManagerService: int[] getAvailableGameModes(String)>|android.permission.MANAGE_GAME_MODE
<android.app.contentsuggestions.ContentSuggestionsManager: void setDefaultServiceEnabled(int,boolean)>|android.permission.MANAGE_CONTENT_SUGGESTIONS
<android.net.NetworkPolicyManager: void notifyStatsProviderWarningReached()>|android.permission.NetworkStack.PERMISSION_MAINLINE_NETWORK_STACK|android.permission.NETWORK_STACK
<android.telephony.SubscriptionManager: int[] getCompleteActiveSubscriptionIdList()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: String getLine1AlphaTag(int)>|android.permission.READ_PHONE_STATE
<android.app.ActivityManager: String getSwitchingToUserMessage()>|android.permission.MANAGE_USERS
<android.app.VrManager: void setAndBindVrCompositor(ComponentName)>|android.permission.RESTRICTED_VR_ACCESS
<android.os.UserManager: int getCredentialOwnerProfile(int)>|android.permission.MANAGE_USERS
<android.media.Spatializer: boolean hasHeadTracker(AudioDeviceAttributes)>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.app.admin.DevicePolicyManager: List<String> getPermittedInputMethods()>|android.permission.INTERACT_ACROSS_USERS_FULL|android.permission.MANAGE_USERS
<android.media.Spatializer: void clearOnHeadToSoundstagePoseUpdatedListener()>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.telephony.TelephonyManager: String getManualNetworkSelectionPlmn()>|android.permission.READ_PRECISE_PHONE_STATE
<android.telephony.euicc.EuiccManager: void updateSubscriptionNickname(int,String,PendingIntent)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.companion.CompanionDeviceManager: void notifyDeviceDisappeared(int)>|android.permission.REQUEST_COMPANION_SELF_MANAGED
<android.hardware.input.InputManager: void addKeyboardLayoutForInputDevice(InputDeviceIdentifier,String)>|android.permission.SET_KEYBOARD_LAYOUT
<android.telephony.SubscriptionManager: int getPreferredDataSubscriptionId()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.AppOpsManager: void getHistoricalOpsFromDiskRaw(HistoricalOpsRequest,Executor,Consumer<HistoricalOps>)>|android.permission.MANAGE_APPOPS
<android.media.tv.tuner.Tuner: boolean hasUnusedFrontend(int)>|android.permission.TUNER_RESOURCE_ACCESS
<android.telephony.ServiceState: String getVoiceOperatorAlphaLong()>|android.permission.ACCESS_FINE_LOCATION|android.permission.ACCESS_COARSE_LOCATION
<android.content.pm.PackageManager: List<ResolveInfo> queryBroadcastReceiversAsUser(Intent,ResolveInfoFlags,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.app.KeyguardManager: void exitKeyguardSecurely(OnKeyguardExitResult)>|android.permission.DISABLE_KEYGUARD
<android.media.AudioManager: void muteAwaitConnection(int[],AudioDeviceAttributes,long,TimeUnit)>|android.permission.MODIFY_AUDIO_ROUTING
<android.app.wallpapereffectsgeneration.WallpaperEffectsGenerationManager: void generateCinematicEffect(CinematicEffectRequest,Executor,CinematicEffectListener)>|android.permission.MANAGE_WALLPAPER_EFFECTS_GENERATION
<android.security.keystore.recovery.RecoveryController: Key generateKey(String,byte[])>|android.permission.RECOVER_KEYSTORE
<android.app.Activity: void startActivityForResultAsUser(Intent,int,UserHandle)>|android.permission.INTERACT_ACROSS_USERS|android.permission.INTERACT_ACROSS_USERS_FULL
<android.telephony.SmsManager: boolean setSmscAddress(String)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.hdmi.HdmiControlManager: void toggleAndFollowTvPower()>|android.permission.HDMI_CEC
<android.os.image.DynamicSystemManager: boolean setEnable(boolean,boolean)>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.app.PendingIntent: boolean intentFilterEquals(PendingIntent)>|android.permission.GET_INTENT_SENDER_INTENT
<android.media.tv.TvInputManager: List<String> getAvailableExtensionInterfaceNames(String)>|android.permission.TIS_EXTENSION_INTERFACE
<android.media.soundtrigger.SoundTriggerManager: int getParameter(UUID,int)>|android.permission.MANAGE_SOUND_TRIGGER
<android.media.session.MediaSessionManager: void setOnMediaKeyListener(OnMediaKeyListener,Handler)>|android.permission.SET_MEDIA_KEY_LISTENER
<android.os.VibratorManager: boolean setAlwaysOnEffect(int,String,int,CombinedVibration,VibrationAttributes)>|android.permission.VIBRATE_ALWAYS_ON
<android.telephony.TelephonyManager: String getCdmaMdn()>|android.permission.MODIFY_PHONE_STATE
<android.content.pm.PackageManager: void addOnPermissionsChangeListener(OnPermissionsChangedListener)>|android.permission.OBSERVE_GRANT_REVOKE_PERMISSIONS
<android.os.UserManager: boolean removeUser(int)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.telephony.TelephonyManager: void registerCarrierPrivilegesCallback(int,Executor,CarrierPrivilegesCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.media.AudioManager: int requestAudioFocus(OnAudioFocusChangeListener,AudioAttributes,int,int,AudioPolicy)>|android.permission.MODIFY_PHONE_STATE|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.ims.ProvisioningManager: boolean getRcsProvisioningStatusForCapability(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.UserManager: boolean isAdminUser()>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.provider.Settings.Secure: boolean putString(ContentResolver,String,String,String,boolean)>|android.permission.WRITE_SECURE_SETTINGS
<android.os.Vibrator: void cancel(int)>|android.permission.VIBRATE
<android.content.pm.PackageManager: void setSyntheticAppDetailsActivityEnabled(String,boolean)>|android.permission.CHANGE_COMPONENT_ENABLED_STATE
<android.telephony.ServiceState: int getCdmaSystemId()>|android.permission.ACCESS_FINE_LOCATION|android.permission.ACCESS_COARSE_LOCATION
<android.companion.virtual.audio.VirtualAudioDevice: AudioCapture startAudioCapture(AudioFormat)>|android.permission.MODIFY_AUDIO_ROUTING
<android.content.pm.PackageManager: void verifyIntentFilter(int,int,List<String>)>|android.permission.INTENT_FILTER_VERIFICATION_AGENT
<android.permission.PermissionControllerService: void onGetUnusedAppCount(IntConsumer)>|android.permission.MANAGE_APP_HIBERNATION
<android.hardware.usb.UsbPort: UsbPortStatus getStatus()>|android.permission.MANAGE_USB
<android.app.ActivityManager: int getUidImportance(int)>|android.permission.PACKAGE_USAGE_STATS
<android.hardware.location.ContextHubManager: int unloadNanoApp(int)>|android.permission.ACCESS_CONTEXT_HUB
<com.android.server.accessibility.AccessibilityManagerService: void setSystemAudioCaptioningUiEnabled(boolean,int)>|android.permission.SET_SYSTEM_AUDIO_CAPTION
<android.app.admin.DevicePolicyManager: void forceRemoveActiveAdmin(ComponentName,int)>|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.app.KeyguardManager: void requestDismissKeyguard(Activity,CharSequence,KeyguardDismissCallback)>|android.permission.SHOW_KEYGUARD_MESSAGE
<android.hardware.display.DisplayManager: BrightnessConfiguration getBrightnessConfigurationForDisplay(String)>|android.permission.CONFIGURE_DISPLAY_BRIGHTNESS
<android.hardware.input.VirtualTouchscreen: void close()>|android.permission.CREATE_VIRTUAL_DEVICE
<android.telephony.TelephonyManager: void setSimPowerStateForSlot(int,int)>|android.permission.MODIFY_PHONE_STATE
<android.os.image.DynamicSystemManager.Session: boolean getAvbPublicKey(AvbPublicKey)>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.telephony.TelephonyManager: boolean doesSwitchMultiSimConfigTriggerReboot()>|android.permission.READ_PHONE_STATE
<android.content.pm.PackageManager: List<InstantAppInfo> getInstantApps()>|android.permission.ACCESS_INSTANT_APPS
<android.telephony.TelephonyManager: int getDataActivationState(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.content.pm.PackageManager: void setComponentEnabledSettings(List<ComponentEnabledSetting>)>|android.permission.CHANGE_COMPONENT_ENABLED_STATE
<android.app.WallpaperManager: Drawable getDrawable()>|android.permission.READ_EXTERNAL_STORAGE
<android.app.AlarmManager: void setExact(int,long,String,Executor,WorkSource,OnAlarmListener)>|android.permission.UPDATE_DEVICE_STATS|android.permission.SCHEDULE_EXACT_ALARM
<android.telephony.TelephonyManager: boolean enableModemForSlot(int,boolean)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.ims.RegistrationManager: void registerImsRegistrationCallback(Executor,RegistrationCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.UserManager: UserInfo createProfileForUser(String,String,int,int,String[])>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.app.ActivityManager: void addHomeVisibilityListener(Executor,HomeVisibilityListener)>|android.permission.SET_ACTIVITY_WATCHER
<android.telephony.ims.ImsMmTelManager: void setVoWiFiRoamingSettingEnabled(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.PhoneStateListener: void onCallAttributesChanged(CallAttributes)>|android.permission.READ_PRECISE_PHONE_STATE
<android.os.RecoverySystem: void rebootWipeAb(Context,File,String)>|android.permission.RECOVERY|android.permission.REBOOT
<android.security.keystore.recovery.RecoveryController: void setSnapshotCreatedPendingIntent(PendingIntent)>|android.permission.RECOVER_KEYSTORE
<android.content.pm.dex.ArtManager: void snapshotRuntimeProfile(int,String,String,Executor,SnapshotRuntimeProfileCallback)>|android.permission.READ_RUNTIME_PROFILES|android.permission.PACKAGE_USAGE_STATS
<android.content.ContextParams: Set<String> getRenouncedPermissions()>|android.permission.RENOUNCE_PERMISSIONS
<android.hardware.display.DisplayManager: void setBrightnessConfigurationForDisplay(BrightnessConfiguration,String)>|android.permission.CONFIGURE_DISPLAY_BRIGHTNESS
<android.hardware.display.ColorDisplayManager: int getTransformCapabilities()>|android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS
<android.app.admin.DevicePolicyManager: void clearSystemUpdatePolicyFreezePeriodRecord()>|android.permission.CLEAR_FREEZE_PERIOD
<android.os.UserManager: PersistableBundle getSeedAccountOptions()>|android.permission.MANAGE_USERS
<android.hardware.usb.UsbManager: void enableContaminantDetection(UsbPort,boolean)>|android.permission.MANAGE_USB
<android.hardware.input.InputManager: void setBlockUntrustedTouchesMode(Context,int)>|android.permission.WRITE_SECURE_SETTINGS
<android.telephony.TelephonyManager: int sendThermalMitigationRequest(ThermalMitigationRequest)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.SubscriptionManager: void restoreSimSpecificSettingsForIccIdFromBackup(String)>|android.permission.MODIFY_PHONE_STATE
<android.content.pm.verify.domain.DomainVerificationManager: void setDomainVerificationLinkHandlingAllowed(String,boolean)>|android.permission.UPDATE_DOMAIN_VERIFICATION_USER_SELECTION
<android.media.RingtoneManager: void ensureDefaultRingtones(Context)>|android.permission.WRITE_SETTINGS
<android.content.Context: void startActivityAsUser(Intent,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.telephony.TelephonyManager: boolean supplyPin(String)>|android.permission.MODIFY_PHONE_STATE
<android.os.IncidentManager: IncidentReport getIncidentReport(Uri)>|android.permission.DUMP|android.permission.PACKAGE_USAGE_STATS
<android.os.UserManager: int getRemainingCreatableProfileCount(String)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.security.keystore.recovery.RecoveryController: Key importKey(String,byte[])>|android.permission.RECOVER_KEYSTORE
<android.os.PowerWhitelistManager: void whitelistAppTemporarily(String,long)>|android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST
<android.telecom.CallScreeningService.CallResponse.Builder: Builder setShouldScreenCallViaAudioProcessing(boolean)>|android.permission.CAPTURE_AUDIO_OUTPUT
<android.hardware.fingerprint.FingerprintManager: void rename(int,int,String)>|android.permission.MANAGE_FINGERPRINT
<android.telephony.ims.SipDelegateManager: void registerImsStateCallback(Executor,ImsStateCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.PERFORM_IMS_SINGLE_REGISTRATION
<android.os.BatteryStatsManager: void reportBleScanResults(WorkSource,int)>|android.permission.UPDATE_DEVICE_STATS
<android.net.NetworkScoreManager: List<NetworkScorerAppData> getAllValidScorers()>|android.permission.REQUEST_NETWORK_SCORES
<android.app.admin.DevicePolicyManager: int logoutUser()>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.hardware.hdmi.HdmiControlManager: void addHotplugEventListener(HotplugEventListener)>|android.permission.HDMI_CEC
<android.os.UserManager: boolean isUserRunning(UserHandle)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.companion.CompanionDeviceManager: void associate(AssociationRequest,Callback,Handler)>|android.permission.REQUEST_COMPANION_PROFILE_WATCH|android.permission.REQUEST_COMPANION_PROFILE_COMPUTER|android.permission.REQUEST_COMPANION_PROFILE_APP_STREAMING|android.permission.REQUEST_COMPANION_PROFILE_AUTOMOTIVE_PROJECTION
<android.telephony.TelephonyManager: PhoneAccountHandle getPhoneAccountHandle()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.content.AttributionSource.Builder: Builder setRenouncedPermissions(Set<String>)>|android.permission.RENOUNCE_PERMISSIONS
<android.telephony.ims.ImsMmTelManager: int getVoWiFiModeSetting()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.media.AudioManager: void setMultiAudioFocusEnabled(boolean)>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.TelephonyManager: int isMultiSimSupported()>|android.permission.READ_PHONE_STATE
<android.telephony.ims.ImsRcsManager: void getRegistrationTransportType(Executor,Consumer<Integer>)>|android.permission.READ_PRECISE_PHONE_STATE
<android.telephony.TelephonyManager: int getSimCardState(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.view.InputDevice: void enable()>|android.permission.DISABLE_INPUT_DEVICE
<android.os.BatteryManager: boolean setChargingStateUpdateDelayMillis(int)>|android.permission.permission.POWER_SAVER
<android.provider.Settings.Secure: boolean putString(ContentResolver,String,String,boolean)>|android.permission.MODIFY_SETTINGS_OVERRIDEABLE_BY_RESTORE
<android.security.attestationverification.AttestationVerificationManager: int verifyToken(AttestationProfile,int,Bundle,VerificationToken,Duration)>|android.permission.USE_ATTESTATION_VERIFICATION_SERVICE
<android.telecom.TelecomManager: void placeCall(Uri,Bundle)>|android.permission.CALL_PHONE|android.permission.MANAGE_OWN_CALLS
<android.media.AudioDeviceVolumeManager: void removeOnDeviceVolumeBehaviorChangedListener(OnDeviceVolumeBehaviorChangedListener)>|android.permission.MODIFY_AUDIO_ROUTING|android.permission.QUERY_AUDIO_STATE
<android.os.RecoverySystem: void clearPrepareForUnattendedUpdate(Context)>|android.permission.RECOVERY|android.permission.REBOOT
<android.app.admin.DevicePolicyManager: Set<String> getAllCrossProfilePackages()>|android.permission.permission.INTERACT_ACROSS_USERS_FULL|android.permission.permission.INTERACT_ACROSS_USERS|android.permission.permission.INTERACT_ACROSS_PROFILES
<android.media.tv.TvView: void unblockContent(TvContentRating)>|android.permission.MODIFY_PARENTAL_CONTROLS
<android.os.BatteryStatsManager: WakeLockStats getWakeLockStats()>|android.permission.BATTERY_STATS
<android.nfc.NfcAdapter: boolean enableNdefPush()>|android.permission.WRITE_SECURE_SETTINGS
<android.media.AudioManager: void setWiredDeviceConnectionState(int,int,String,String)>|android.permission.MODIFY_AUDIO_ROUTING
<android.app.backup.BackupManager: void cancelBackups()>|android.permission.BACKUP
<android.media.Spatializer: void setOnHeadToSoundstagePoseUpdatedListener(Executor,OnHeadToSoundstagePoseUpdatedListener)>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.app.StatusBarManager: DisableInfo getDisableInfo()>|android.permission.STATUS_BAR
<android.hardware.hdmi.HdmiControlManager: void setTvWakeOnOneTouchPlay(int)>|android.permission.HDMI_CEC
<android.content.pm.PackageInstaller: void uninstall(String,IntentSender)>|android.permission.DELETE_PACKAGES|android.permission.REQUEST_DELETE_PACKAGES
<android.view.translation.UiTranslationManager: void finishTranslation(ActivityId)>|android.permission.MANAGE_UI_TRANSLATION
<android.window.WindowOrganizer: IBinder startTransition(int,IBinder,WindowContainerTransaction)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.os.Vibrator: void vibrate(long[],int)>|android.permission.VIBRATE
<android.telephony.TelephonyManager: String getSubscriberId()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.UserManager: boolean isUserOfType(String)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.app.DreamManager: void setDreamOverlay(ComponentName)>|android.permission.WRITE_DREAM_STATE
<android.companion.CompanionDeviceManager: void startObservingDevicePresence(String)>|android.permission.REQUEST_OBSERVE_COMPANION_DEVICE_PRESENCE
<android.telephony.ims.SipDelegateManager: void createSipDelegate(DelegateRequest,Executor,DelegateConnectionStateCallback,DelegateConnectionMessageCallback)>|android.permission.PERFORM_IMS_SINGLE_REGISTRATION
<android.content.Context: Intent registerReceiverAsUser(BroadcastReceiver,UserHandle,IntentFilter,String,Handler)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.hardware.hdmi.HdmiControlManager: int getSadPresenceInQuery(String)>|android.permission.HDMI_CEC
<android.app.admin.DevicePolicyManager: ComponentName getDeviceOwnerComponentOnAnyUser()>|android.permission.MANAGE_USERS|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.telephony.TelephonyManager: int getVoiceActivationState()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.permission.PermissionManager: boolean setAutoRevokeExempted(String,boolean)>|android.permission.WHITELIST_AUTO_REVOKE_PERMISSIONS
<android.os.BatteryStatsManager: BatteryUsageStats getBatteryUsageStats()>|android.permission.BATTERY_STATS
<android.os.PowerManager: void dream(long)>|android.permission.READ_DREAM_STATE|android.permission.WRITE_DREAM_STATE
<android.net.vcn.VcnManager: void removeVcnNetworkPolicyChangeListener(VcnNetworkPolicyChangeListener)>|android.permission.NETWORK_FACTORY
<com.android.server.app.GameManagerService: void setGameServiceProvider(String)>|android.permission.SET_GAME_SERVICE
<android.os.UserManager: UserInfo createProfileForUserEvenWhenDisallowed(String,String,int,int,String[])>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.security.keystore.recovery.RecoveryController: Key getKey(String)>|android.permission.RECOVER_KEYSTORE
<android.net.VpnManager: List<String> getVpnLockdownAllowlist(int)>|android.permission.CONTROL_ALWAYS_ON_VPN
<android.location.LocationManager: boolean registerGnssStatusCallback(Callback,Handler)>|android.permission.ACCESS_FINE_LOCATION
<android.nfc.NfcAdapter: boolean isControllerAlwaysOnSupported()>|android.permission.NFC_SET_CONTROLLER_ALWAYS_ON
<android.hardware.biometrics.BiometricTestSession: void acceptAuthentication(int)>|android.permission.TEST_BIOMETRIC
<android.telephony.euicc.EuiccManager: void setUnsupportedCountries(List<String>)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<com.android.server.power.PowerManagerService.BinderService: void setLowPowerStandbyActiveDuringMaintenance(boolean)>|android.permission.MANAGE_LOW_POWER_STANDBY|android.permission.DEVICE_POWER
<android.telecom.TelecomManager: String getDefaultDialerPackage(UserHandle)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.usage.UsageStatsManager: void registerAppUsageObserver(int,String[],long,TimeUnit,PendingIntent)>|android.permission.OBSERVE_APP_USAGE
<android.companion.virtual.audio.VirtualAudioSession: void createAudioStreams(int[])>|android.permission.MODIFY_AUDIO_ROUTING
<android.app.admin.DevicePolicyManager: void notifyPendingSystemUpdate(long,boolean)>|android.permission.NOTIFY_PENDING_SYSTEM_UPDATE
<android.permission.PermissionControllerManager: void countPermissionApps(List<String>,int,OnCountPermissionAppsResultCallback,Handler)>|android.permission.GET_RUNTIME_PERMISSIONS
<android.os.BatteryStatsManager: BatteryUsageStats getBatteryUsageStats(BatteryUsageStatsQuery)>|android.permission.BATTERY_STATS
<android.telephony.SmsManager: void setPremiumSmsConsent(String,int)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.ims.ProvisioningManager: void notifyRcsAutoConfigurationReceived(byte[],boolean)>|android.permission.MODIFY_PHONE_STATE
<android.os.UserManager: String getSeedAccountName()>|android.permission.MANAGE_USERS
<android.telephony.SmsManager: void sendMultipartTextMessageWithoutPersisting(String,String,List<String>,List<PendingIntent>,List<PendingIntent>)>|android.permission.MODIFY_PHONE_STATE
<android.media.AudioManager: int dispatchAudioFocusChange(AudioFocusInfo,int,AudioPolicy)>|android.permission.MODIFY_AUDIO_ROUTING
<android.hardware.radio.RadioManager: void addAnnouncementListener(Set<Integer>,OnListUpdatedListener)>|android.permission.ACCESS_BROADCAST_RADIO
<android.app.KeyguardManager: boolean removeWeakEscrowToken(long,UserHandle)>|android.permission.MANAGE_WEAK_ESCROW_TOKEN
<android.media.Spatializer: void recenterHeadTracker()>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.hardware.biometrics.BiometricTestSession: void rejectAuthentication(int)>|android.permission.TEST_BIOMETRIC
<android.telephony.ims.RcsUceAdapter: void requestCapabilities(Collection<Uri>,Executor,CapabilitiesCallback)>|android.permission.ACCESS_RCS_USER_CAPABILITY_EXCHANGE|android.permission.READ_CONTACTS
<android.media.Spatializer: void removeCompatibleAudioDevice(AudioDeviceAttributes)>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.hardware.hdmi.HdmiControlManager: void setSadPresenceInQuery(String,int)>|android.permission.HDMI_CEC
<android.os.RecoverySystem: void cancelScheduledUpdate(Context)>|android.permission.RECOVERY
<android.telephony.SubscriptionManager: int getActiveSubscriptionInfoCount()>|android.permission.READ_PHONE_STATE
<android.telephony.ims.RcsUceAdapter: void removeOnPublishStateChangedListener(OnPublishStateChangedListener)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.ActivityTaskManager: void detachNavigationBarFromApp(IBinder)>|android.permission.CONTROL_REMOTE_APP_TRANSITION_ANIMATIONS
<android.telephony.ims.ImsMmTelManager: void registerImsRegistrationCallback(Executor,RegistrationCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.permission.PermissionControllerManager: void applyStagedRuntimePermissionBackup(String,UserHandle,Executor,Consumer<Boolean>)>|android.permission.GRANT_RUNTIME_PERMISSIONS|android.permission.RESTORE_RUNTIME_PERMISSIONS
<android.telephony.ServiceState: String getVoiceOperatorAlphaShort()>|android.permission.ACCESS_FINE_LOCATION|android.permission.ACCESS_COARSE_LOCATION
<android.app.usage.UsageStatsManager: void setEstimatedLaunchTimeMillis(String,long)>|android.permission.CHANGE_APP_LAUNCH_TIME_ESTIMATE
<android.hardware.display.DisplayManager: void clearGlobalUserPreferredDisplayMode()>|android.permission.MODIFY_USER_PREFERRED_DISPLAY_MODE
<android.media.Spatializer: void addOnHeadTrackingModeChangedListener(Executor,OnHeadTrackingModeChangedListener)>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.hardware.biometrics.BiometricManager: boolean hasEnrolledBiometrics(int)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.telecom.TelecomManager: boolean handleMmi(String)>|android.permission.MODIFY_PHONE_STATE
<android.app.admin.DevicePolicyManager: boolean packageHasActiveAdmins(String)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.os.PowerManager: boolean setAdaptivePowerSaveEnabled(boolean)>|android.permission.DEVICE_POWER|android.permission.POWER_SAVER
<android.app.ActivityTaskManager: void clearLaunchParamsForPackages(List<String>)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.app.WallpaperManager: void setStream(InputStream)>|android.permission.SET_WALLPAPER
<android.view.inputmethod.InputMethodManager: List<InputMethodInfo> getInputMethodListAsUser(int,int)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.media.tv.TvInputManager: List<TvInputHardwareInfo> getHardwareList()>|android.permission.TV_INPUT_HARDWARE
<android.app.ActivityManager: boolean stopUser(int,boolean)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.hardware.hdmi.HdmiControlManager: void addHdmiControlStatusChangeListener(Executor,HdmiControlStatusChangeListener)>|android.permission.HDMI_CEC
<android.telephony.ims.ImsMmTelManager: void getRegistrationState(Executor,Consumer<Integer>)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.ServiceState: String getOperatorAlphaShort()>|android.permission.ACCESS_FINE_LOCATION|android.permission.ACCESS_COARSE_LOCATION
<android.telephony.TelephonyManager: boolean matchesCurrentSimOperator(String,int,String)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.permission.PermissionManager: boolean removeAllowlistedRestrictedPermission(String,String,int)>|android.permission.WHITELIST_RESTRICTED_PERMISSIONS
<android.telephony.euicc.EuiccManager: void switchToSubscription(int,int,PendingIntent)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.telephony.TelephonyManager: boolean isVisualVoicemailEnabled(PhoneAccountHandle)>|android.permission.READ_PHONE_STATE
<android.app.DreamManager: boolean isDreaming()>|android.permission.READ_DREAM_STATE
<android.hardware.biometrics.BiometricPrompt.Builder: Builder setAllowBackgroundAuthentication(boolean)>|android.permission.TEST_BIOMETRIC|android.permission.USE_BIOMETRIC_INTERNAL
<android.content.pm.PackageManager: IBinder getHoldLockToken()>|android.permission.INJECT_EVENTS
<android.view.Display: void requestColorMode(int)>|android.permission.CONFIGURE_DISPLAY_COLOR_MODE
<android.view.translation.UiTranslationManager: void startTranslation(TranslationSpec,TranslationSpec,List<AutofillId>,ActivityId,UiTranslationSpec)>|android.permission.MANAGE_UI_TRANSLATION
<android.app.DreamManager: void stopDream()>|android.permission.WRITE_DREAM_STATE
<android.location.LocationManager: void requestLocationUpdates(String,LocationRequest,Executor,LocationListener)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.content.pm.PackageManager: int getIntentVerificationStatusAsUser(String,int)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.hardware.hdmi.HdmiControlManager: List<String> getUserCecSettings()>|android.permission.HDMI_CEC
<android.os.image.DynamicSystemManager: Pair<Integer, Session> createPartition(String,long,boolean)>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.app.admin.DevicePolicyManager: long forceSecurityLogs()>|android.permission.FORCE_DEVICE_POLICY_MANAGER_LOGS
<android.app.ActivityTaskManager: void moveTaskToRootTask(int,int,boolean)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.net.vcn.VcnManager: void setVcnConfig(ParcelUuid,VcnConfig)>|android.permission."carrier privileges"
<android.os.PowerExemptionManager: long addToTemporaryAllowListForEvent(String,int,String,int)>|android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST
<android.os.BatteryStatsManager: void setChargerAcOnline(boolean,boolean)>|android.permission.DEVICE_POWER
<android.app.admin.DevicePolicyManager: int getUserProvisioningState()>|android.permission.MANAGE_USERS|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.net.PacProxyManager: void removePacProxyInstalledListener(PacProxyInstalledListener)>|android.permission.NETWORK_STACK|android.permission.NetworkStack.PERMISSION_MAINLINE_NETWORK_STACK|android.permission.NETWORK_SETTINGS
<android.hardware.SensorPrivacyManager: boolean isSensorPrivacyEnabled(int)>|android.permission.OBSERVE_SENSOR_PRIVACY
<android.telephony.TelephonyCallback.OutgoingEmergencySmsListener: void onOutgoingEmergencySms(EmergencyNumber,int)>|android.permission.READ_ACTIVE_EMERGENCY_SESSION
<android.telecom.TelecomManager: void cancelMissedCallsNotification()>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: void setCallForwarding(CallForwardingInfo,Executor,Consumer<Integer>)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.CarrierConfigManager: PersistableBundle getConfigForSubId(int)>|android.permission.READ_PHONE_STATE
<android.nfc.NfcAdapter: void unregisterControllerAlwaysOnListener(ControllerAlwaysOnListener)>|android.permission.NFC_SET_CONTROLLER_ALWAYS_ON
<android.telephony.TelephonyManager: int getCallStateForSlot(int)>|android.permission.READ_PHONE_STATE
<android.hardware.display.ColorDisplayManager: boolean isDeviceColorManaged()>|android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS
<android.media.AudioDeviceVolumeManager: void setDeviceAbsoluteVolumeBehavior(AudioDeviceAttributes,VolumeInfo,Executor,OnAudioDeviceVolumeChangedListener,boolean)>|android.permission.MODIFY_AUDIO_ROUTING|android.permission.BLUETOOTH_PRIVILEGED
<android.os.PowerExemptionManager: void addToPermanentAllowList(String)>|android.permission.DEVICE_POWER
<android.view.translation.UiTranslationManager: void resumeTranslation(ActivityId)>|android.permission.MANAGE_UI_TRANSLATION
<android.app.UiModeManager: boolean setNightModeActivated(boolean)>|android.permission.MODIFY_DAY_NIGHT_MODE
<android.telephony.TelephonyManager: int getPreferredOpportunisticDataSubscription()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PHONE_STATE
<android.content.pm.PackageManager: void revokeRuntimePermission(String,String,UserHandle,String)>|android.permission.REVOKE_RUNTIME_PERMISSIONS
<android.media.AudioManager: boolean isPstnCallAudioInterceptable()>|android.permission.CALL_AUDIO_INTERCEPTION
<android.telephony.TelephonyManager: String getMsisdn(int)>|android.permission.READ_PHONE_STATE|android.permission.READ_SMS|android.permission.READ_PHONE_NUMBERS
<android.hardware.usb.UsbManager: int getUsbHalVersion()>|android.permission.MANAGE_USB
<android.telephony.ims.ImsMmTelManager: void setCrossSimCallingEnabled(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.os.SystemConfigManager: int[] getSystemPermissionUids(String)>|android.permission.GET_RUNTIME_PERMISSIONS
<android.net.VpnService: void prepareAndAuthorize(Context)>|android.permission.CONTROL_VPN
<android.telephony.TelephonyManager: int getCdmaEriIconIndex(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: boolean isApnMetered(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: Map<Integer, Integer> getLogicalToPhysicalSlotMapping()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.ActivityManager: void moveTaskToFront(int,int,Bundle)>|android.permission.REORDER_TASKS
<android.view.accessibility.AccessibilityManager: void notifyAccessibilityButtonClicked(int)>|android.permission.STATUS_BAR_SERVICE
<android.os.UserManager: int[] getProfileIds(int,boolean)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.media.AudioManager: void setWiredDeviceConnectionState(AudioDeviceAttributes,int)>|android.permission.MODIFY_AUDIO_ROUTING
<android.service.persistentdata.PersistentDataBlockManager: void setOemUnlockEnabled(boolean)>|android.permission.OEM_UNLOCK_STATE
<android.window.TaskOrganizer: RunningTaskInfo> getChildTasks(WindowContainerToken,int[])>|android.permission.MANAGE_ACTIVITY_TASKS
<android.app.DreamManager: void startDream(ComponentName)>|android.permission.WRITE_DREAM_STATE
<android.window.TaskOrganizer: ITaskOrganizerController getController()>|android.permission.MANAGE_ACTIVITY_TASKS
<android.hardware.camera2.CameraManager: void openCamera(String,int,Executor,StateCallback)>|android.permission.SYSTEM_CAMERA|android.permission.CAMERA
<android.window.WindowOrganizer: int finishTransition(IBinder,WindowContainerTransaction,WindowContainerTransactionCallback)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.telephony.TelephonyManager: boolean getEmergencyCallbackMode()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.net.VpnManager: void factoryReset()>|android.permission.NETWORK_SETTINGS
<android.app.admin.DevicePolicyManager: String getDeviceOwner()>|android.permission.MANAGE_USERS
<android.media.AudioManager: List<AudioDeviceAttributes> getPreferredDevicesForStrategy(AudioProductStrategy)>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.SmsManager: boolean copyMessageToIcc(byte[],byte[],int)>|android.permission.ACCESS_MESSAGES_ON_ICC
<android.app.GameManager: int getGameMode(String)>|android.permission.MANAGE_GAME_MODE
<android.telephony.PhoneStateListener: void onCellLocationChanged(CellLocation)>|android.permission.ACCESS_FINE_LOCATION
<android.permission.PermissionControllerManager: void getPermissionUsages(boolean,long,Executor,OnPermissionUsageResultCallback)>|android.permission.GET_RUNTIME_PERMISSIONS
<android.net.vcn.VcnManager: VcnNetworkPolicyResult applyVcnNetworkPolicy(NetworkCapabilities,LinkProperties)>|android.permission.NETWORK_FACTORY
<android.app.WallpaperManager: boolean setWallpaperComponent(ComponentName,int)>|android.permission.SET_WALLPAPER_COMPONENT
<android.telephony.TelephonyManager: String getLine1AlphaTag()>|android.permission.READ_PHONE_STATE
<android.app.AlarmManager: void setTimeZone(String)>|android.permission.SET_TIME_ZONE
<android.media.tv.TvInputManager: int getClientPid(String)>|android.permission.TUNER_RESOURCE_ACCESS
<android.view.InputDevice: void disable()>|android.permission.DISABLE_INPUT_DEVICE
<android.hardware.usb.UsbManager: void setCurrentFunctions(long)>|android.permission.MANAGE_USB
<android.hardware.display.ColorDisplayManager: boolean setNightDisplayAutoMode(int)>|android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS
<android.content.pm.PackageManager: void revokeRuntimePermission(String,String,UserHandle)>|android.permission.REVOKE_RUNTIME_PERMISSIONS
<android.media.MediaPlayer: void setOnRtpRxNoticeListener(Context,Executor,OnRtpRxNoticeListener)>|android.permission.BIND_IMS_SERVICE
<android.content.pm.PackageManager: void removeOnPermissionsChangeListener(OnPermissionsChangedListener)>|android.permission.OBSERVE_GRANT_REVOKE_PERMISSIONS
<android.app.StatusBarManager: void unregisterNearbyMediaDevicesProvider(NearbyMediaDevicesProvider)>|android.permission.MEDIA_CONTENT_CONTROL
<android.telecom.TelecomManager: boolean isVoiceMailNumber(PhoneAccountHandle,String)>|android.permission.READ_PHONE_STATE
<android.service.persistentdata.PersistentDataBlockManager: String getPersistentDataPackageName()>|android.permission.ACCESS_PDB_STATE
<android.app.admin.DevicePolicyManager: void finalizeWorkProfileProvisioning(UserHandle,Account)>|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.media.AudioManager: void registerMuteAwaitConnectionCallback(Executor,MuteAwaitConnectionCallback)>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.TelephonyManager: void setMobileDataPolicyEnabled(int,boolean)>|android.permission.MODIFY_PHONE_STATE
<android.service.games.GameService: void createGameSession(int)>|android.permission.MANAGE_GAME_ACTIVITY
<android.media.AudioManager: void setTestDeviceConnectionState(AudioDeviceAttributes,boolean)>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.TelephonyCallback.VoiceActivationStateListener: void onVoiceActivationStateChanged(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.WallpaperManager: void setResource(int)>|android.permission.SET_WALLPAPER
<android.content.Context: boolean bindServiceAsUser(Intent,ServiceConnection,int,UserHandle)>|android.permission.INTERACT_ACROSS_USERS|android.permission.INTERACT_ACROSS_USERS_FULL|android.permission.INTERACT_ACROSS_PROFILES
<android.content.pm.PackageManager: void deletePackage(String,IPackageDeleteObserver,int)>|android.permission.DELETE_PACKAGES
<android.content.pm.PackageManager: void setKeepUninstalledPackages(List<String>)>|android.permission.KEEP_UNINSTALLED_PACKAGES
<android.app.contentsuggestions.ContentSuggestionsManager: void resetTemporaryService(int)>|android.permission.MANAGE_CONTENT_SUGGESTIONS
<android.app.backup.BackupManager: String getCurrentTransport()>|android.permission.BACKUP
<android.app.usage.UsageStatsManager: void whitelistAppTemporarily(String,long,UserHandle)>|android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST
<android.media.AudioTrack.TunerConfiguration: int getSyncId()>|android.permission.MODIFY_AUDIO_ROUTING
<android.os.PowerManager: void suppressAmbientDisplay(String,boolean)>|android.permission.WRITE_DREAM_STATE
<android.telephony.ims.ProvisioningManager: void triggerRcsReconfiguration()>|android.permission.PERFORM_IMS_SINGLE_REGISTRATION
<android.location.LocationManager: boolean isProviderPackage(String,String)>|android.permission.READ_DEVICE_CONFIG
<android.telephony.ims.ImsMmTelManager: boolean isCrossSimCallingEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.app.admin.DevicePolicyManager: List<String> getPermittedAccessibilityServices(int)>|android.permission.MANAGE_USERS|android.permission.QUERY_ADMIN_POLICY
<android.app.AppOpsManager: void startWatchingStarted(int[],OnOpStartedListener)>|android.permission.WATCH_APPOPS
<android.telephony.TelephonyManager: int getCdmaEriIconMode(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.CarrierConfigManager: void updateConfigForPhoneId(int,String)>|android.permission.MODIFY_PHONE_STATE
<android.location.LastLocationRequest.Builder: Builder setHiddenFromAppOps(boolean)>|android.permission.UPDATE_APP_OPS_STATS
<android.telephony.ims.ImsMmTelManager: boolean isVoWiFiSettingEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.app.AlarmManager: void set(int,long,long,long,OnAlarmListener,Handler,WorkSource)>|android.permission.UPDATE_DEVICE_STATS
<android.telephony.SubscriptionManager: void setPreferredDataSubscriptionId(int,boolean,Executor,Consumer<Integer>)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.SubscriptionManager: void setDefaultSmsSubId(int)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: int getVoiceMessageCount(int)>|android.permission.READ_PHONE_STATE
<android.app.WallpaperManager: Drawable getFastDrawable()>|android.permission.READ_EXTERNAL_STORAGE
<android.os.UserManager: boolean isUserAdmin(int)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.hardware.face.FaceManager: void removeAll(int,RemovalCallback)>|android.permission.MANAGE_BIOMETRIC
<android.telephony.TelephonyManager: boolean enableDataConnectivity()>|android.permission.MODIFY_PHONE_STATE
<com.android.server.app.GameManagerService: void updateUseAngle(String,int)>|android.permission.WRITE_SECURE_SETTINGS
<android.telephony.TelephonyManager: List<NeighboringCellInfo> getNeighboringCellInfo()>|android.permission.ACCESS_COARSE_LOCATION
<android.telephony.TelephonyManager: int getNetworkType()>|android.permission.READ_PHONE_STATE
<android.app.compat.CompatChanges: boolean isChangeEnabled(long,int)>|android.permission.READ_COMPAT_CHANGE_CONFIG|android.permission.LOG_COMPAT_CHANGE
<android.companion.CompanionDeviceManager: void removeOnAssociationsChangedListener(OnAssociationsChangedListener)>|android.permission.MANAGE_COMPANION_DEVICES
<android.telephony.SubscriptionManager: boolean setOpportunistic(boolean,int)>|android.permission.MODIFY_PHONE_STATE
<android.telecom.TelecomManager: String getVoiceMailNumber(PhoneAccountHandle)>|android.permission.READ_PHONE_STATE
<android.content.pm.LauncherApps: PendingIntent getMainActivityLaunchIntent(ComponentName,Bundle,UserHandle)>|android.permission.START_TASKS_FROM_RECENTS
<android.app.admin.DevicePolicyManager: void setDpcDownloaded(boolean)>|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.security.keystore.recovery.RecoveryController: void initRecoveryService(String,byte[],byte[])>|android.permission.RECOVER_KEYSTORE
<android.permission.PermissionControllerManager: void getPrivilegesDescriptionStringForProfile(String,Executor,Consumer<CharSequence>)>|android.permission.MANAGE_COMPANION_DEVICES
<android.view.accessibility.AccessibilityManager: void performAccessibilityShortcut(String)>|android.permission.MANAGE_ACCESSIBILITY
<android.nfc.cardemulation.CardEmulation: List<String> getAidsForPreferredPaymentService()>|android.permission.NFC_PREFERRED_PAYMENT_INFO
<android.window.DisplayAreaOrganizer: void unregisterOrganizer()>|android.permission.MANAGE_ACTIVITY_TASKS
<android.app.backup.BackupManager: String selectBackupTransport(String)>|android.permission.BACKUP
<android.telephony.euicc.EuiccManager: void switchToSubscription(int,PendingIntent)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.telephony.SubscriptionManager: SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int)>|android.permission.READ_PHONE_STATE
<android.telephony.SubscriptionManager: void setDefaultDataSubId(int)>|android.permission.MODIFY_PHONE_STATE
<android.telecom.TelecomManager: PhoneAccountHandle getDefaultOutgoingPhoneAccount(String)>|android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: void setDataActivationState(int,int)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: ComponentName getDefaultRespondViaMessageApplication()>|android.permission.INTERACT_ACROSS_USERS
<android.telephony.TelephonyManager: boolean isDataEnabledForApn(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.trust.TrustManager: void setDeviceLockedForUser(int,boolean)>|android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<android.window.TaskOrganizer: void createRootTask(int,int,IBinder)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.media.Spatializer: List<Integer> getSupportedHeadTrackingModes()>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.telecom.TelecomManager: List<PhoneAccountHandle> getOwnSelfManagedPhoneAccounts()>|android.permission.MANAGE_OWN_CALLS
<android.app.ambientcontext.AmbientContextManager: void unregisterObserver()>|android.permission.ACCESS_AMBIENT_CONTEXT_EVENT
<com.android.server.app.GameManagerService: void setGameMode(String,int,int)>|android.permission.MANAGE_GAME_MODE
<android.companion.virtual.VirtualDeviceManager.VirtualDevice: void setShowPointerIcon(boolean)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.os.BatteryStatsManager: void reportWifiScanStoppedFromSource(WorkSource)>|android.permission.UPDATE_DEVICE_STATS
<android.app.UiModeManager: boolean requestProjection(int)>|android.permission.TOGGLE_AUTOMOTIVE_PROJECTION
<android.media.Spatializer: void addCompatibleAudioDevice(AudioDeviceAttributes)>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.telephony.TelephonyManager: boolean isIccLockEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.media.tv.TvInputManager: void notifyPreviewProgramBrowsableDisabled(String,long)>|android.permission.NOTIFY_TV_INPUTS
<android.os.UserManager: void evictCredentialEncryptionKey(int)>|android.permission.MANAGE_USERS
<android.telephony.TelephonyManager: boolean isIdle()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: CellLocation getCellLocation()>|android.permission.ACCESS_FINE_LOCATION
<android.app.backup.BackupManager: Intent getConfigurationIntent(String)>|android.permission.BACKUP
<android.telephony.TelephonyManager: String iccTransmitApduBasicChannelBySlot(int,int,int,int,int,int,String)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.input.InputManager: boolean injectInputEvent(InputEvent,int)>|android.permission.INJECT_EVENTS
<android.nfc.NfcAdapter: boolean setControllerAlwaysOn(boolean)>|android.permission.NFC_SET_CONTROLLER_ALWAYS_ON
<android.os.image.DynamicSystemManager: boolean abort()>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.media.tv.TvInputManager: IBinder getExtensionInterface(String,String)>|android.permission.TIS_EXTENSION_INTERFACE
<android.telephony.TelephonyCallback.OutgoingEmergencyCallListener: void onOutgoingEmergencyCall(EmergencyNumber,int)>|android.permission.READ_ACTIVE_EMERGENCY_SESSION
<android.provider.DeviceConfig: Properties getProperties(String,String)>|android.permission.READ_DEVICE_CONFIG
<android.app.DreamManager: void setActiveDream(ComponentName)>|android.permission.WRITE_DREAM_STATE
<android.location.LocationRequest.Builder: Builder setLocationSettingsIgnored(boolean)>|android.permission.LOCATION_BYPASS
<android.location.LocationManager: Location getLastKnownLocation(String,LastLocationRequest)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyManager: String getMobileProvisioningUrl()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.service.games.GameSession: void takeScreenshot(Executor,ScreenshotCallback)>|android.permission.MANAGE_GAME_ACTIVITY
<android.content.pm.PackageManager: List<ResolveInfo> queryIntentActivitiesAsUser(Intent,ResolveInfoFlags,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.telephony.ims.ImsMmTelManager: boolean isVtSettingEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.app.admin.DevicePolicyManager: Set<String> getCrossProfileCalendarPackages()>|android.permission.permission.INTERACT_ACROSS_USERS_FULL|android.permission.permission.INTERACT_ACROSS_USERS
<android.app.ActivityManager: String getSwitchingFromUserMessage()>|android.permission.MANAGE_USERS
<android.service.voice.SoftwareHotwordDetector: boolean stopRecognition()>|android.permission.RECORD_AUDIO
<android.os.BatteryStatsManager: void reportFullWifiLockAcquiredFromSource(WorkSource)>|android.permission.UPDATE_DEVICE_STATS
<android.telephony.TelephonyCallback.CellInfoListener: void onCellInfoChanged(List<CellInfo>)>|android.permission.READ_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<android.telephony.ims.ProvisioningManager: void registerFeatureProvisioningChangedCallback(Executor,FeatureProvisioningCallback)>|android.permission.READ_PRECISE_PHONE_STATE
<android.telecom.PhoneAccount.Builder: Builder setGroupId(String)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.display.DisplayManager: List<AmbientBrightnessDayStats> getAmbientBrightnessStats()>|android.permission.ACCESS_AMBIENT_LIGHT_STATS
<android.hardware.location.ContextHubManager: int loadNanoApp(int,NanoApp)>|android.permission.ACCESS_CONTEXT_HUB
<android.debug.AdbManager: boolean isAdbWifiSupported()>|android.permission.MANAGE_DEBUGGING
<android.hardware.hdmi.HdmiControlManager: void addHdmiControlStatusChangeListener(HdmiControlStatusChangeListener)>|android.permission.HDMI_CEC
<android.hardware.fingerprint.FingerprintManager: List<SensorProperties> getSensorProperties()>|android.permission.TEST_BIOMETRIC
<android.media.tv.TvInputManager: List<TvStreamConfig> getAvailableTvStreamConfigList(String)>|android.permission.CAPTURE_TV_INPUT
<android.telephony.TelephonyManager: long getSupportedRadioAccessFamily()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: String getDeviceId()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.PowerManager: void rebootSafeMode()>|android.permission.permission.REBOOT
<android.media.soundtrigger.SoundTriggerManager: int startRecognition(UUID,Bundle,ComponentName,RecognitionConfig)>|android.permission.MANAGE_SOUND_TRIGGER
<android.hardware.biometrics.BiometricManager: int canAuthenticate()>|android.permission.USE_BIOMETRIC
<android.telecom.Connection: void setConnectionStartElapsedRealtimeMillis(long)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: String getDeviceId(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.SubscriptionManager: void setDefaultVoiceSubscriptionId(int)>|android.permission.MODIFY_PHONE_STATE
<android.app.LocaleManager: LocaleList getApplicationLocales(String)>|android.permission.READ_APP_SPECIFIC_LOCALES
<android.os.PowerManager: boolean setDynamicPowerSaveHint(boolean,int)>|android.permission.permission.POWER_SAVER
<android.media.AudioManager: void setHfpVolume(int)>|android.permission.BLUETOOTH_STACK
<android.os.UserManager: UserInfo getPrimaryUser()>|android.permission.MANAGE_USERS
<android.os.PowerWhitelistManager: long whitelistAppTemporarilyForEvent(String,int,String)>|android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST
<android.hardware.display.DisplayManager: List<BrightnessChangeEvent> getBrightnessEvents()>|android.permission.BRIGHTNESS_SLIDER_USAGE
<android.media.AudioManager: int[] getSupportedSystemUsages()>|android.permission.MODIFY_AUDIO_ROUTING
<android.os.BatteryStatsManager: void reportWifiMulticastDisabled(WorkSource)>|android.permission.UPDATE_DEVICE_STATS
<com.android.server.WallpaperUpdateReceiver: boolean isUserSetWallpaper(WallpaperManager,Context)>|android.permission.READ_WALLPAPER_INTERNAL
<android.location.LocationManager: boolean unregisterGnssBatchedLocationCallback(BatchedLocationCallback)>|android.permission.LOCATION_HARDWARE
<android.os.UserManager: boolean isUserRunning(int)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.os.UserManager: boolean someUserHasSeedAccount(String,String)>|android.permission.MANAGE_USERS
<android.telephony.TelephonyManager: int getDataActivationState()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.window.TaskOrganizer: void setIsIgnoreOrientationRequestDisabled(boolean)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.app.admin.DevicePolicyManager: long forceNetworkLogs()>|android.permission.FORCE_DEVICE_POLICY_MANAGER_LOGS
<android.os.RecoverySystem: void processPackage(Context,File,ProgressListener,Handler)>|android.permission.RECOVERY
<android.telephony.TelephonyManager: String getCdmaMdn(int)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.biometrics.BiometricManager: void resetLockoutTimeBound(IBinder,String,int,int,byte[])>|android.permission.USE_BIOMETRIC_INTERNAL
<android.app.backup.BackupManager: CharSequence getDataManagementIntentLabel(String)>|android.permission.BACKUP
<android.telephony.TelephonyManager: List<CarrierIdentifier> getAllowedCarriers(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.IncidentManager: void requestAuthorization(int,String,int,AuthListener)>|android.permission.REQUEST_INCIDENT_REPORT_APPROVAL
<android.view.translation.UiTranslationManager: void startTranslation(TranslationSpec,TranslationSpec,List<AutofillId>,ActivityId)>|android.permission.MANAGE_UI_TRANSLATION
<android.media.AudioManager: int abandonAudioFocusForTest(AudioFocusRequest,String)>|android.permission."android.permission.QUERY_AUDIO_STATE"
<android.app.ActivityManager: int getUidProcessCapabilities(int)>|android.permission.PACKAGE_USAGE_STATS|android.permission.INTERACT_ACROSS_USERS_FULL
<android.os.UserManager: List<UserInfo> getProfiles(int)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.telephony.TelephonyManager: List<String> getCarrierPackageNamesForIntentAndPhone(Intent,int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.StatusBarManager: void setExpansionDisabledForSimNetworkLock(boolean)>|android.permission.STATUS_BAR
<android.location.LocationManager: void setAdasGnssLocationEnabled(boolean)>|android.permission.LOCATION_BYPASS
<android.telephony.SubscriptionManager: boolean isSubscriptionEnabled(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.view.WindowManager.LayoutParams: void setSystemApplicationOverlay(boolean)>|android.permission.permission.SYSTEM_APPLICATION_OVERLAY
<android.os.BatteryStatsManager: void reportBleScanStarted(WorkSource,boolean)>|android.permission.UPDATE_DEVICE_STATS
<android.os.VibratorManager: void cancel(int)>|android.permission.VIBRATE
<android.os.UserManager: UserInfo getUserInfo(int)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.media.AudioManager: AudioTrack getCallUplinkInjectionAudioTrack(AudioFormat)>|android.permission.CALL_AUDIO_INTERCEPTION
<android.location.LocationManager: void requestSingleUpdate(String,LocationListener,Looper)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.companion.CompanionDeviceManager: void dispatchMessage(int,int,byte[])>|android.permission.DELIVER_COMPANION_MESSAGES
<android.content.Context: ComponentName startForegroundServiceAsUser(Intent,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.app.ActivityTaskManager: boolean removeTask(int)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.telephony.TelephonyManager: boolean setNetworkSelectionModeManual(OperatorInfo,boolean)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.biometrics.BiometricPrompt: void authenticate(CancellationSignal,Executor,AuthenticationCallback)>|android.permission.USE_BIOMETRIC
<android.hardware.hdmi.HdmiControlManager: void setSystemAudioControl(int)>|android.permission.HDMI_CEC
<android.telecom.Connection: void onCallFilteringCompleted(CallFilteringCompletionInfo)>|android.permission.READ_CONTACTS
<android.hardware.fingerprint.FingerprintManager: void authenticate(CryptoObject,CancellationSignal,AuthenticationCallback,Handler,int)>|android.permission.USE_BIOMETRIC|android.permission.USE_FINGERPRINT
<android.app.StatusBarManager: void registerNearbyMediaDevicesProvider(NearbyMediaDevicesProvider)>|android.permission.MEDIA_CONTENT_CONTROL
<android.telephony.ServiceState: String getVoiceOperatorNumeric()>|android.permission.ACCESS_FINE_LOCATION|android.permission.ACCESS_COARSE_LOCATION
<android.telephony.TelephonyManager: void setVoiceServiceStateOverride(boolean)>|android.permission.BIND_TELECOM_CONNECTION_SERVICE
<android.permission.PermissionManager: int getPermissionFlags(String,String,UserHandle)>|android.permission.GRANT_RUNTIME_PERMISSIONS|android.permission.REVOKE_RUNTIME_PERMISSIONS|android.permission.GET_RUNTIME_PERMISSIONS
<android.telephony.TelephonyCallback.DataEnabledListener: void onDataEnabledChanged(boolean,int)>|android.permission.READ_PRECISE_PHONE_STATE
<android.permission.PermissionControllerService: String getPrivilegesDescriptionStringForProfile(String)>|android.permission.MANAGE_COMPANION_DEVICES
<android.os.UserManager: boolean canAddMoreManagedProfiles(int,boolean)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<com.android.server.location.LocationManagerService: boolean isAutomotiveGnssSuspended()>|android.permission.CONTROL_AUTOMOTIVE_GNSS
<android.companion.virtual.VirtualDeviceManager.VirtualDevice: VirtualAudioDevice createVirtualAudioDevice(VirtualDisplay,Executor,AudioConfigurationChangeCallback)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.app.usage.UsageStatsManager: void setAppStandbyBucket(String,int)>|android.permission.CHANGE_APP_IDLE_STATE
<android.content.om.OverlayManager: void setEnabledExclusiveInCategory(String,UserHandle)>|android.permission."android.permission.INTERACT_ACROSS_USERS"|android.permission."android.permission.INTERACT_ACROSS_USERS_FULL"
<com.android.settingslib.bluetooth.LocalBluetoothManager: LocalBluetoothManager create(Context,Handler,UserHandle)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.telecom.TelecomManager: boolean setDefaultDialer(String)>|android.permission.MODIFY_PHONE_STATE|android.permission.WRITE_SECURE_SETTINGS
<android.hardware.fingerprint.FingerprintManager: void setSidefpsController(ISidefpsController)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.app.BroadcastOptions: void setTemporaryAppWhitelistDuration(long)>|android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST|android.permission.START_ACTIVITIES_FROM_BACKGROUND|android.permission.START_FOREGROUND_SERVICES_FROM_BACKGROUND
<android.app.admin.DevicePolicyManager: UserHandle getLogoutUser()>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.telephony.TelephonyManager: boolean isRinging()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PHONE_STATE
<android.content.pm.PackageManager: List<PackageInfo> getInstalledPackagesAsUser(int,int)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.media.AudioManager: int getMinVolumeIndexForAttributes(AudioAttributes)>|android.permission.MODIFY_AUDIO_ROUTING
<android.app.admin.DevicePolicyManager: boolean setActiveProfileOwner(ComponentName,String)>|android.permission.MANAGE_DEVICE_ADMINS
<android.location.LocationManager: void requestLocationUpdates(long,float,Criteria,LocationListener,Looper)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.content.pm.PackageManager: PackageInfo getPackageInfoAsUser(String,int,int)>|android.permission.INTERACT_ACROSS_USERS
<android.telephony.TelephonyManager: void setCdmaRoamingMode(int)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.fingerprint.FingerprintManager: void remove(Fingerprint,int,RemovalCallback)>|android.permission.MANAGE_FINGERPRINT
<android.os.BatteryStatsManager: void reportMobileRadioPowerState(boolean,int)>|android.permission.UPDATE_DEVICE_STATS
<android.telephony.TelephonyManager: boolean isOpportunisticNetworkEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.biometrics.BiometricPrompt: boolean shouldUseDefaultTitle()>|android.permission.USE_BIOMETRIC_INTERNAL
<android.telephony.ims.ImsMmTelManager: void isSupported(int,int,Executor,Consumer<Boolean>)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: long getAllowedNetworkTypesForReason(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.devicestate.DeviceStateManager: void requestState(DeviceStateRequest,Executor,Callback)>|android.permission.CONTROL_DEVICE_STATE
<android.telephony.ServiceState: String getOperatorNumeric()>|android.permission.ACCESS_FINE_LOCATION|android.permission.ACCESS_COARSE_LOCATION
<android.service.games.GameSession: void startActivityFromGameSessionForResult(Intent,Bundle,Executor,GameSessionActivityCallback)>|android.permission.MANAGE_GAME_ACTIVITY
<android.net.PacProxyManager: void addPacProxyInstalledListener(Executor,PacProxyInstalledListener)>|android.permission.NETWORK_STACK|android.permission.NetworkStack.PERMISSION_MAINLINE_NETWORK_STACK|android.permission.NETWORK_SETTINGS
<android.service.persistentdata.PersistentDataBlockManager: int getFlashLockState()>|android.permission.READ_OEM_UNLOCK_STATE|android.permission.OEM_UNLOCK_STATE
<android.telecom.Connection: void setConnectTimeMillis(long)>|android.permission.MODIFY_PHONE_STATE
<android.media.tv.TvInputManager: Hardware acquireTvInputHardware(int,TvInputInfo,HardwareCallback)>|android.permission.TV_INPUT_HARDWARE
<android.companion.virtual.audio.VirtualAudioSession: void onAppsNeedingAudioRoutingChanged(int[])>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.CarrierConfigManager: PersistableBundle getConfig()>|android.permission.READ_PHONE_STATE
<com.android.server.wm.WindowManagerService: void registerTaskFpsCallback(int,ITaskFpsCallback)>|android.permission.ACCESS_FPS_COUNTER
<android.media.MediaRouter2: void setRouteVolume(MediaRoute2Info,int)>|android.permission.MEDIA_CONTENT_CONTROL
<android.hardware.hdmi.HdmiControlManager: void addHdmiCecEnabledChangeListener(CecSettingChangeListener)>|android.permission.HDMI_CEC
<android.telephony.TelephonyManager: void setDataEnabled(int,boolean)>|android.permission.MODIFY_PHONE_STATE
<android.media.tv.TvView: void setMain()>|android.permission.CHANGE_HDMI_CEC_ACTIVE_SOURCE
<android.media.soundtrigger.SoundTriggerManager: int unloadSoundModel(UUID)>|android.permission.MANAGE_SOUND_TRIGGER
<com.android.server.os.BugreportManagerServiceImpl: void cancelBugreport(int,String)>|android.permission.DUMP
<android.app.UiModeManager: int getNightModeCustomType()>|android.permission.MODIFY_DAY_NIGHT_MODE
<android.companion.AssociationRequest.Builder: Builder setForceConfirmation(boolean)>|android.permission.REQUEST_COMPANION_SELF_MANAGED
<android.app.usage.UsageStatsManager: void unregisterAppUsageLimitObserver(int)>|android.permission.SUSPEND_APPS|android.permission.OBSERVE_APP_USAGE
<android.nfc.NfcAdapter: boolean disableNdefPush()>|android.permission.WRITE_SECURE_SETTINGS
<android.telephony.TelephonyManager: void notifyOtaEmergencyNumberDbInstalled()>|android.permission.MODIFY_PHONE_STATE
<android.telephony.euicc.EuiccManager: void deleteSubscription(int,PendingIntent)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.app.Notification.MediaStyle: MediaStyle setRemotePlaybackInfo(CharSequence,int,PendingIntent)>|android.permission.MEDIA_CONTENT_CONTROL
<android.telephony.TelephonyManager: boolean isNrDualConnectivityEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyCallback.PreciseCallStateListener: void onPreciseCallStateChanged(PreciseCallState)>|android.permission.READ_PRECISE_PHONE_STATE
<android.os.UserManager: void setDefaultGuestRestrictions(Bundle)>|android.permission.MANAGE_USERS
<android.telephony.TelephonyManager: void setDataEnabledForReason(int,boolean)>|android.permission.MODIFY_PHONE_STATE
<android.content.Context: void sendStickyBroadcast(Intent,Bundle)>|android.permission.BROADCAST_STICKY
<android.graphics.fonts.FontManager: FontConfig getFontConfig()>|android.permission.UPDATE_FONTS
<android.provider.ContactsContract.SimContacts: void addSimAccount(ContentResolver,String,String,int,int)>|android.permission."android.contacts.permission.MANAGE_SIM_ACCOUNTS"
<android.location.LocationManager: boolean registerGnssMeasurementsCallback(GnssRequest,Executor,Callback)>|android.permission.ACCESS_FINE_LOCATION
<android.os.BatteryStatsManager: void reportWifiRadioPowerState(boolean,int)>|android.permission.UPDATE_DEVICE_STATS
<android.telephony.ims.ProvisioningManager: int setProvisioningStringValue(int,String)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.soundtrigger.SoundTrigger: SoundTriggerModule attachModuleAsOriginator(int,StatusListener,Handler,Identity)>|android.permission.RECORD_AUDIO|android.permission.CAPTURE_AUDIO_HOTWORD
<android.telephony.TelephonyManager: void setCarrierDataEnabled(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.display.DisplayManager: void setGlobalUserPreferredDisplayMode(Mode)>|android.permission.MODIFY_USER_PREFERRED_DISPLAY_MODE
<android.app.ActivityManager: void killBackgroundProcesses(String)>|android.permission.KILL_BACKGROUND_PROCESSES
<android.os.image.DynamicSystemClient: void bind()>|android.permission.INSTALL_DYNAMIC_SYSTEM
<android.hardware.input.VirtualMouse: PointF getCursorPosition()>|android.permission.CREATE_VIRTUAL_DEVICE
<android.os.UserManager: int getUserRestrictionSource(String,UserHandle)>|android.permission.MANAGE_USERS|android.permission.QUERY_USERS
<android.app.AppOpsManager: void setUidMode(String,int,int)>|android.permission.MANAGE_APP_OPS_MODES
<android.telephony.SubscriptionManager: byte[] getAllSimSpecificSettingsForBackup()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.content.pm.PackageInstaller.SessionParams: void setStaged()>|android.permission.INSTALL_PACKAGES
<com.android.server.app.GameManagerService: boolean isAngleEnabled(String,int)>|android.permission.MANAGE_GAME_MODE
<android.telephony.PhoneStateListener: void onRadioPowerStateChanged(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.BatteryStatsManager: void suspendBatteryInput()>|android.permission.DEVICE_POWER
<android.telephony.TelephonyManager: String getDeviceSoftwareVersion()>|android.permission.READ_PHONE_STATE|android.permission.READ_BASIC_PHONE_STATE
<android.hardware.hdmi.HdmiControlManager: void addHdmiCecEnabledChangeListener(Executor,CecSettingChangeListener)>|android.permission.HDMI_CEC
<android.companion.CompanionDeviceManager: boolean canPairWithoutPrompt(String,String,UserHandle)>|android.permission.MANAGE_COMPANION_DEVICES
<android.hardware.hdmi.HdmiControlManager: void setPowerStateChangeOnActiveSourceLost(String)>|android.permission.HDMI_CEC
<android.app.usage.UsageStatsManager: void onCarrierPrivilegedAppsChanged()>|android.permission.BIND_CARRIER_SERVICES
<android.app.KeyguardManager: void addKeyguardLockedStateListener(Executor,KeyguardLockedStateListener)>|android.permission.SUBSCRIBE_TO_KEYGUARD_LOCKED_STATE
<android.hardware.hdmi.HdmiControlManager: int getTvSendStandbyOnSleep()>|android.permission.HDMI_CEC
<android.hardware.fingerprint.FingerprintManager: void setUdfpsOverlayController(IUdfpsOverlayController)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.telephony.ims.ImsRcsManager: void registerImsStateCallback(Executor,ImsStateCallback)>|android.permission.READ_PRECISE_PHONE_STATE|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.ACCESS_RCS_USER_CAPABILITY_EXCHANGE
<android.app.ActivityTaskManager: void stopSystemLockTaskMode()>|android.permission.MANAGE_ACTIVITY_TASKS
<android.telephony.ims.ProvisioningManager: int setProvisioningIntValue(int,int)>|android.permission.MODIFY_PHONE_STATE
<android.app.usage.UsageStatsManager: int getAppStandbyBucket(String)>|android.permission.PACKAGE_USAGE_STATS
<android.telephony.TelephonyManager: void sendUssdRequest(String,UssdResponseCallback,Handler)>|android.permission.CALL_PHONE
<com.android.server.app.GameManagerService: void setGameModeConfigOverride(String,int,int,String,String)>|android.permission.MANAGE_GAME_MODE
<android.app.time.TimeManager: TimeZoneCapabilitiesAndConfig getTimeZoneCapabilitiesAndConfig()>|android.permission.MANAGE_TIME_AND_ZONE_DETECTION
<android.app.admin.DevicePolicyManager: void setUserProvisioningState(int,UserHandle)>|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.os.UserManager: boolean isRestrictedProfile(UserHandle)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.permission.PermissionControllerManager: void setRuntimePermissionGrantStateByDeviceAdmin(String,AdminPermissionControlParams,Executor,Consumer<Boolean>)>|android.permission.GRANT_RUNTIME_PERMISSIONS|android.permission.REVOKE_RUNTIME_PERMISSIONS|android.permission.ADJUST_RUNTIME_PERMISSIONS_POLICY
<android.os.IncidentManager: void deleteIncidentReports(Uri)>|android.permission.DUMP|android.permission.PACKAGE_USAGE_STATS
<android.os.PowerManager: boolean isAmbientDisplayAvailable()>|android.permission.READ_DREAM_STATE
<android.app.ActivityManager: void removeOnUidImportanceListener(OnUidImportanceListener)>|android.permission.PACKAGE_USAGE_STATS
<android.location.LocationManager: void requestSingleUpdate(String,PendingIntent)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyCallback.CallForwardingIndicatorListener: void onCallForwardingIndicatorChanged(boolean)>|android.permission.READ_PHONE_STATE
<android.media.AudioManager: void removeOnPreferredDevicesForCapturePresetChangedListener(OnPreferredDevicesForCapturePresetChangedListener)>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.SubscriptionManager: void setDeviceToDeviceStatusSharingContacts(int,List<Uri>)>|android.permission.MODIFY_PHONE_STATE
<android.view.Display: BrightnessInfo getBrightnessInfo()>|android.permission.CONTROL_DISPLAY_BRIGHTNESS
<android.location.LocationManager: boolean addGpsStatusListener(Listener)>|android.permission.ACCESS_FINE_LOCATION
<android.os.BatteryStatsManager: void reportWifiSupplicantStateChanged(int,boolean)>|android.permission.UPDATE_DEVICE_STATS
<android.service.voice.HotwordDetector: boolean startRecognition()>|android.permission.RECORD_AUDIO|android.permission.CAPTURE_AUDIO_HOTWORD
<android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints(int)>|android.permission.USE_FINGERPRINT|android.permission.INTERACT_ACROSS_USERS
<android.app.ActivityTaskManager: void startSystemLockTaskMode(int)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.app.admin.DevicePolicyManager: void setDeviceProvisioningConfigApplied()>|android.permission.MANAGE_USERS
<android.app.admin.DevicePolicyManager: void acknowledgeNewUserDisclaimer()>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.os.UserManager: UserInfo getProfileParent(int)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.telephony.TelephonyManager: ServiceState getServiceState(int)>|android.permission.READ_PHONE_STATE|android.permission.ACCESS_COARSE_LOCATION
<android.net.NetworkPolicyManager: int getMultipathPreference(Network)>|android.permission.NetworkStack.PERMISSION_MAINLINE_NETWORK_STACK
<android.telephony.PhoneStateListener: void onCallStateChanged(int,String)>|android.permission.READ_PHONE_STATE
<android.app.KeyguardManager: boolean getPrivateNotificationsAllowed()>|android.permission.CONTROL_KEYGUARD_SECURE_NOTIFICATIONS
<android.media.soundtrigger.SoundTriggerManager: int loadSoundModel(SoundModel)>|android.permission.MANAGE_SOUND_TRIGGER
<android.window.TaskOrganizer: List<TaskAppearedInfo> registerOrganizer()>|android.permission.MANAGE_ACTIVITY_TASKS
<android.os.UserManager: UserInfo createProfileForUser(String,String,int,int)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.os.RecoverySystem: void prepareForUnattendedUpdate(Context,String,IntentSender)>|android.permission.RECOVERY|android.permission.REBOOT
<android.hardware.fingerprint.FingerprintManager: void onUiReady(long,int)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.view.accessibility.AccessibilityManager: void performAccessibilityShortcut()>|android.permission.MANAGE_ACCESSIBILITY
<android.os.VibratorManager: void vibrate(CombinedVibration,VibrationAttributes)>|android.permission.VIBRATE
<android.os.Vibrator: void vibrate(VibrationEffect)>|android.permission.VIBRATE
<android.os.UserManager: void setUserIcon(Bitmap)>|android.permission.MANAGE_USERS
<android.telephony.TelephonyManager: int getCallStateForSubscription()>|android.permission.READ_PHONE_STATE
<android.window.WindowOrganizer: int applySyncTransaction(WindowContainerTransaction,WindowContainerTransactionCallback)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.hardware.face.FaceManager: List<FaceSensorPropertiesInternal> getSensorPropertiesInternal()>|android.permission.USE_BIOMETRIC_INTERNAL
<android.telephony.TelephonyManager: List<String> getEquivalentHomePlmns()>|android.permission.READ_PHONE_STATE
<android.os.image.DynamicSystemManager: boolean closePartition()>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.location.LocationManager: void requestLocationUpdates(String,long,float,LocationListener)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.app.usage.UsageStatsManager: List<BroadcastResponseStats> queryBroadcastResponseStats(String,long)>|android.permission.ACCESS_BROADCAST_RESPONSE_STATS
<android.content.pm.PackageManager: void deletePackageAsUser(String,IPackageDeleteObserver,int,int)>|android.permission.DELETE_PACKAGES|android.permission.INTERACT_ACROSS_USERS_FULL
<android.hardware.hdmi.HdmiControlManager: int getSystemAudioModeMuting()>|android.permission.HDMI_CEC
<android.os.PowerExemptionManager: void addToPermanentAllowList(List<String>)>|android.permission.DEVICE_POWER
<android.app.AlarmManager: void setExact(int,long,String,OnAlarmListener,Handler)>|android.permission.SCHEDULE_EXACT_ALARM
<android.telephony.TelephonyManager: int setNrDualConnectivityState(int)>|android.permission.MODIFY_PHONE_STATE
<com.android.server.timedetector.GnssTimeUpdateService: boolean startGnssListening()>|android.permission.SET_TIME
<android.hardware.face.FaceManager: boolean hasEnrolledTemplates()>|android.permission.USE_BIOMETRIC_INTERNAL
<android.media.session.MediaSessionManager: void setOnVolumeKeyLongPressListener(OnVolumeKeyLongPressListener,Handler)>|android.permission.SET_VOLUME_KEY_LONG_PRESS_LISTENER
<android.telephony.ims.ProvisioningManager: int getProvisioningIntValue(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.location.ContextHubManager: ContextHubClient createClient(Context,ContextHubInfo,PendingIntent,long)>|android.permission.ACCESS_CONTEXT_HUB
<android.net.NetworkPolicyManager: boolean isUidRestrictedOnMeteredNetworks(int)>|android.permission.OBSERVE_NETWORK_POLICY
<android.telephony.TelephonyManager: PersistableBundle getCarrierConfig()>|android.permission.READ_PHONE_STATE
<android.os.UserManager: boolean isUserUnlockingOrUnlocked(UserHandle)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.hardware.fingerprint.FingerprintManager: void authenticate(CryptoObject,CancellationSignal,AuthenticationCallback,Handler,int,int,int)>|android.permission.USE_BIOMETRIC|android.permission.USE_FINGERPRINT
<android.location.LocationManager: boolean registerGnssMeasurementsCallback(GnssMeasurementRequest,Executor,Callback)>|android.permission.ACCESS_FINE_LOCATION
<android.os.UserManager: List<UserInfo> getUsers()>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.telephony.TelephonyManager: boolean isPotentialEmergencyNumber(String)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.location.ContextHubManager: int sendMessage(int,int,ContextHubMessage)>|android.permission.ACCESS_CONTEXT_HUB
<android.telephony.PhoneStateListener: void onCallDisconnectCauseChanged(int,int)>|android.permission.READ_PRECISE_PHONE_STATE
<android.content.pm.PackageManager: String[] setPackagesSuspended(String[],boolean,PersistableBundle,PersistableBundle,SuspendDialogInfo)>|android.permission.SUSPEND_APPS
<android.media.soundtrigger.SoundTriggerDetector: boolean stopRecognition()>|android.permission.MANAGE_SOUND_TRIGGER
<android.telephony.TelephonyManager: boolean isManualNetworkSelectionAllowed()>|android.permission.READ_PRECISE_PHONE_STATE|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.content.pm.PackageManager: void setApplicationEnabledSetting(String,int,int)>|android.permission.CHANGE_COMPONENT_ENABLED_STATE
<android.hardware.usb.UsbManager: void enableLimitPowerTransfer(UsbPort,boolean,int,IUsbOperationInternal)>|android.permission.MANAGE_USB
<android.app.StatusBarManager: void collapsePanels()>|android.permission.STATUS_BAR
<android.permission.PermissionManager: void addOnPermissionsChangeListener(OnPermissionsChangedListener)>|android.permission.OBSERVE_GRANT_REVOKE_PERMISSIONS
<android.hardware.usb.UsbManager: long getCurrentFunctions()>|android.permission.MANAGE_USB
<android.telephony.TelephonyManager: void setSimPowerStateForSlot(int,int,Executor,Consumer<Integer>)>|android.permission.MODIFY_PHONE_STATE
<android.provider.ContactsContract.SimContacts: void removeSimAccounts(ContentResolver,int)>|android.permission."android.contacts.permission.MANAGE_SIM_ACCOUNTS"
<android.service.voice.VoiceInteractionService: KeyphraseModelManager createKeyphraseModelManager()>|android.permission.MANAGE_VOICE_KEYPHRASES
<android.telephony.TelephonyManager: void setCallComposerStatus(int)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.SensorPrivacyManager: void addAllSensorPrivacyListener(OnAllSensorPrivacyChangedListener)>|android.permission.OBSERVE_SENSOR_PRIVACY
<android.hardware.hdmi.HdmiControlManager: void setHdmiCecVersion(int)>|android.permission.HDMI_CEC
<android.content.Context: void startActivityAsUser(Intent,Bundle,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.provider.Settings.Config: boolean deleteString(ContentResolver,String,String)>|android.permission.WRITE_DEVICE_CONFIG
<android.app.AppOpsManager: void setRestriction(int,int,int,String[])>|android.permission.MANAGE_APP_OPS_MODES
<android.media.soundtrigger.SoundTriggerManager: boolean isRecognitionActive(UUID)>|android.permission.MANAGE_SOUND_TRIGGER
<android.location.LocationManager: GpsStatus getGpsStatus(GpsStatus)>|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyManager: void setNetworkSelectionModeAutomatic()>|android.permission.MODIFY_PHONE_STATE
<android.telephony.ims.ProvisioningManager: void setRcsClientConfiguration(RcsClientConfiguration)>|android.permission.PERFORM_IMS_SINGLE_REGISTRATION
<android.os.UserManager: int[] getProfileIdsWithDisabled(int)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.telephony.TelephonyManager: void setVoiceActivationState(int,int)>|android.permission.MODIFY_PHONE_STATE
<android.media.AudioManager: AudioRecord getCallDownlinkExtractionAudioRecord(AudioFormat)>|android.permission.CALL_AUDIO_INTERCEPTION
<android.hardware.SensorPrivacyManager: void removeSensorPrivacyListener(OnSensorPrivacyChangedListener)>|android.permission.OBSERVE_SENSOR_PRIVACY
<android.service.voice.VoiceInteractionService: HotwordDetector createHotwordDetector(PersistableBundle,SharedMemory,Callback)>|android.permission.MANAGE_HOTWORD_DETECTION
<android.content.pm.PackageManager: int getPermissionFlags(String,String,UserHandle)>|android.permission.GRANT_RUNTIME_PERMISSIONS|android.permission.REVOKE_RUNTIME_PERMISSIONS|android.permission.GET_RUNTIME_PERMISSIONS
<android.telephony.TelephonyManager: int checkCarrierPrivilegesForPackageAnyPhone(String)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.apphibernation.AppHibernationManager: boolean isHibernatingForUser(String)>|android.permission.MANAGE_APP_HIBERNATION
<android.os.IncidentManager: void denyReport(Uri)>|android.permission.APPROVE_INCIDENT_REPORTS
<android.os.UserManager: List<UserInfo> getUsers(boolean)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<com.android.internal.location.GpsNetInitiatedHandler.EmergencyCallListener: void onOutgoingEmergencyCall(EmergencyNumber,int)>|android.permission.READ_ACTIVE_EMERGENCY_SESSION
<android.hardware.fingerprint.FingerprintManager: void onPointerUp(long,int)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.app.GameManager: boolean isAngleEnabled(String)>|android.permission.MANAGE_GAME_MODE
<android.hardware.hdmi.HdmiControlManager: void setStandbyMode(boolean)>|android.permission.HDMI_CEC
<android.os.storage.StorageManager: int getExternalStorageMountMode(int,String)>|android.permission.WRITE_MEDIA_STORAGE
<android.telephony.TelephonyManager: int getLteOnCdmaMode(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.apphibernation.AppHibernationManager: Map<String, HibernationStats> getHibernationStatsForUser(Set<String>)>|android.permission.MANAGE_APP_HIBERNATION
<android.telecom.TelecomManager: boolean isTtySupported()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PHONE_STATE
<android.security.keystore.recovery.RecoveryController: boolean isRecoverableKeyStoreEnabled(Context)>|android.permission.RECOVER_KEYSTORE
<android.security.keystore.recovery.RecoverySession: RecoverySession newInstance(RecoveryController)>|android.permission.RECOVER_KEYSTORE
<android.service.oemlock.OemLockManager: boolean isOemUnlockAllowedByCarrier()>|android.permission.MANAGE_CARRIER_OEM_UNLOCK_STATE
<android.app.KeyguardManager: boolean isValidLockPasswordComplexity(int,byte[],int)>|android.permission.SET_INITIAL_LOCK
<android.app.ActivityManager: int getPackageImportance(String)>|android.permission.PACKAGE_USAGE_STATS
<android.app.VrManager: void unregisterVrStateCallback(VrStateCallback)>|android.permission.RESTRICTED_VR_ACCESS|android.permission.ACCESS_VR_STATE
<android.os.BatteryStatsManager: void reportBleScanReset()>|android.permission.UPDATE_DEVICE_STATS
<android.telephony.TelephonyManager: String getVisualVoicemailPackageName()>|android.permission.READ_PHONE_STATE
<android.hardware.SensorPrivacyManager: void setSensorPrivacyForProfileGroup(int,int,boolean,int)>|android.permission.MANAGE_SENSOR_PRIVACY
<android.telephony.SmsManager: int checkSmsShortCodeDestination(String,String)>|android.permission.READ_PHONE_STATE
<android.os.UserManager: boolean requestQuietModeEnabled(boolean,UserHandle)>|android.permission.MANAGE_USERS|android.permission.MODIFY_QUIET_MODE
<android.media.session.MediaSessionManager: void removeOnMediaKeyEventDispatchedListener(OnMediaKeyEventDispatchedListener)>|android.permission.MEDIA_CONTENT_CONTROL
<android.telephony.TelephonyManager: int setVoNrEnabled(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.media.AudioManager: int getVolumeIndexForAttributes(AudioAttributes)>|android.permission.MODIFY_AUDIO_ROUTING
<android.app.ActivityOptions: ActivityOptions makeRemoteTransition(RemoteTransition)>|android.permission.CONTROL_REMOTE_APP_TRANSITION_ANIMATIONS
<android.hardware.biometrics.BiometricManager: void invalidateAuthenticatorIds(int,int,IInvalidationCallback)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.media.soundtrigger.SoundTriggerManager: int stopRecognition(UUID)>|android.permission.MANAGE_SOUND_TRIGGER
<android.telephony.ServiceState: String getOperatorAlphaLong()>|android.permission.ACCESS_FINE_LOCATION|android.permission.ACCESS_COARSE_LOCATION
<android.telephony.TelephonyManager: String getVoiceMailAlphaTag()>|android.permission.READ_PHONE_STATE
<android.hardware.lights.SystemLightsManager.SystemLightsSession: void requestLights(LightsRequest)>|android.permission.CONTROL_DEVICE_LIGHTS
<android.telephony.TelephonyManager: void setRemovableEsimAsDefaultEuicc(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: void refreshUiccProfile()>|android.permission.MODIFY_PHONE_STATE
<android.media.soundtrigger.SoundTriggerDetector: boolean startRecognition(int)>|android.permission.MANAGE_SOUND_TRIGGER
<android.permission.PermissionManager: void setRuntimePermissionsVersion(int)>|android.permission.ADJUST_RUNTIME_PERMISSIONS_POLICY|android.permission.UPGRADE_RUNTIME_PERMISSIONS
<android.content.pm.dex.ArtManager: boolean isRuntimeProfilingEnabled(int)>|android.permission.READ_RUNTIME_PROFILES|android.permission.PACKAGE_USAGE_STATS
<android.telephony.ims.ImsMmTelManager: int getVoWiFiRoamingModeSetting()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.admin.DevicePolicyManager: int getNearbyAppStreamingPolicy()>|android.permission.READ_NEARBY_STREAMING_POLICY
<android.os.image.DynamicSystemManager.Session: boolean submitFromAshmem(int)>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.telephony.TelephonyManager: void resetIms(int)>|android.permission.MODIFY_PHONE_STATE
<android.os.UserManager: Bundle getUserRestrictions(UserHandle)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.nfc.NfcAdapter: boolean enableSecureNfc(boolean)>|android.permission.WRITE_SECURE_SETTINGS
<android.service.voice.SoftwareHotwordDetector: boolean startRecognition()>|android.permission.RECORD_AUDIO
<android.media.AudioRecord: MediaSyncEvent shareAudioHistory(String,long)>|android.permission.CAPTURE_AUDIO_HOTWORD
<android.permission.PermissionControllerManager: void grantOrUpgradeDefaultRuntimePermissions(Executor,Consumer<Boolean>)>|android.permission.ADJUST_RUNTIME_PERMISSIONS_POLICY
<android.os.UserManager: List<EnforcingUser> getUserRestrictionSources(String,UserHandle)>|android.permission.MANAGE_USERS|android.permission.QUERY_USERS
<android.app.timezonedetector.TimeZoneDetector: boolean suggestManualTimeZone(ManualTimeZoneSuggestion)>|android.permission.SUGGEST_MANUAL_TIME_AND_ZONE
<android.media.AudioManager: void removeAssistantServicesUids(int[])>|android.permission.MODIFY_AUDIO_ROUTING
<android.net.NetworkPolicyManager: SubscriptionPlan getSubscriptionPlan(NetworkTemplate)>|android.permission.NetworkStack.PERMISSION_MAINLINE_NETWORK_STACK|android.permission.NETWORK_STACK
<android.os.SystemConfigManager: Map<String, List<CarrierAssociatedAppEntry>> getDisabledUntilUsedPreinstalledCarrierAssociatedAppEntries()>|android.permission.READ_CARRIER_APP_INFO
<android.content.Context: void sendStickyBroadcastAsUser(Intent,UserHandle)>|android.permission.INTERACT_ACROSS_USERS|android.permission.BROADCAST_STICKY
<android.telephony.TelephonyManager: void getCallWaitingStatus(Executor,Consumer<Integer>)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: void setSimPowerState(int)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: void unregisterCarrierPrivilegesCallback(CarrierPrivilegesCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.hdmi.HdmiControlManager: void addHotplugEventListener(Executor,HotplugEventListener)>|android.permission.HDMI_CEC
<android.telephony.TelephonyManager: NetworkScan requestNetworkScan(NetworkScanRequest,NetworkScanCallback)>|android.permission.MODIFY_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<android.provider.Settings.Global: boolean putString(ContentResolver,String,String,String,boolean)>|android.permission.WRITE_SECURE_SETTINGS
<android.permission.PermissionManager: void startOneTimePermissionSession(String,long,int,int)>|android.permission.MANAGE_ONE_TIME_PERMISSION_SESSIONS
<android.app.admin.SecurityLog: int writeEvent(int,Object)>|android.permission.WRITE_SECURITY_LOG
<android.media.AudioManager: int[] getActiveAssistantServicesUids()>|android.permission.MODIFY_AUDIO_ROUTING
<android.location.LocationManager: boolean registerGnssNavigationMessageCallback(Executor,Callback)>|android.permission.ACCESS_FINE_LOCATION
<android.app.NotificationManager: void setNotificationListenerAccessGranted(ComponentName,boolean,boolean)>|android.permission.MANAGE_NOTIFICATION_LISTENERS
<android.telephony.TelephonyManager: void reportDefaultNetworkStatus(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: String getMeid(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: String getSimSerialNumber(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.trust.TrustManager: void clearAllBiometricRecognized(BiometricSourceType,int)>|android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<android.hardware.display.ColorDisplayManager: boolean setNightDisplayCustomEndTime(LocalTime)>|android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS
<android.view.inputmethod.InputMethodManager: void showInputMethodPickerFromSystem(boolean,int)>|android.permission.WRITE_SECURE_SETTINGS
<android.hardware.camera2.CameraManager: void openCamera(String,StateCallback,Handler)>|android.permission.CAMERA
<android.content.pm.PackageManager: List<SharedLibraryInfo> getDeclaredSharedLibraries(String,PackageInfoFlags)>|android.permission.ACCESS_SHARED_LIBRARIES
<android.content.pm.CrossProfileApps: void startActivity(ComponentName,UserHandle,Activity,Bundle)>|android.permission.INTERACT_ACROSS_PROFILES|android.permission.START_CROSS_PROFILE_ACTIVITIES
<android.app.UiModeManager: void addOnProjectionStateChangedListener(int,Executor,OnProjectionStateChangedListener)>|android.permission.READ_PROJECTION_STATE
<android.content.pm.PackageManager: void setUpdateAvailable(String,boolean)>|android.permission.INSTALL_PACKAGES
<android.telephony.TelephonyManager: String iccTransmitApduLogicalChannelBySlot(int,int,int,int,int,int,int,String)>|android.permission.MODIFY_PHONE_STATE
<android.location.LocationManager: boolean registerGnssMeasurementsCallback(Callback)>|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyManager: PinResult supplyIccLockPuk(String,String)>|android.permission.MODIFY_PHONE_STATE
<android.service.voice.VoiceInteractionService: AlwaysOnHotwordDetector createAlwaysOnHotwordDetector(String,Locale,PersistableBundle,SharedMemory,Callback)>|android.permission.MANAGE_HOTWORD_DETECTION
<android.media.tv.TvInputManager: List<TunedInfo> getCurrentTunedInfos()>|android.permission.ACCESS_TUNED_INFO
<android.view.inputmethod.InputMethodManager: List<InputMethodInfo> getInputMethodListAsUser(int)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.location.LocationManager: boolean registerGnssStatusCallback(Executor,Callback)>|android.permission.ACCESS_FINE_LOCATION
<android.view.SurfaceControlHdrLayerInfoListener: void register(IBinder)>|android.permission.CONTROL_DISPLAY_BRIGHTNESS
<android.location.LocationManager: void requestLocationUpdates(String,long,float,Executor,LocationListener)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.content.Context: Intent registerReceiverAsUser(BroadcastReceiver,UserHandle,IntentFilter,String,Handler,int)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.media.tv.tuner.Tuner: void updateResourcePriority(int,int)>|android.permission.TUNER_RESOURCE_ACCESS
<android.media.Spatializer: boolean isHeadTrackerEnabled(AudioDeviceAttributes)>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.view.accessibility.AccessibilityManager: void notifyAccessibilityButtonClicked(int,String)>|android.permission.STATUS_BAR_SERVICE
<android.telephony.PhoneStateListener: void onActiveDataSubscriptionIdChanged(int)>|android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: long getAllowedNetworkTypes()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.fingerprint.FingerprintManager: void enroll(byte[],CancellationSignal,int,EnrollmentCallback,int)>|android.permission.MANAGE_FINGERPRINT
<android.app.WallpaperManager: Drawable peekFastDrawable()>|android.permission.READ_EXTERNAL_STORAGE
<android.media.Spatializer: void getEffectParameter(int,byte[])>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.media.AudioManager: boolean isFullVolumeDevice()>|android.permission.MODIFY_AUDIO_ROUTING|android.permission.QUERY_AUDIO_STATE
<android.app.ActivityManager: boolean stopProfile(UserHandle)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS_FULL
<android.telephony.TelephonyManager: int getSimApplicationState(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.storage.StorageManager: PendingIntent getManageSpaceActivityIntent(String,int)>|android.permission.MANAGE_EXTERNAL_STORAGE
<android.hardware.face.FaceManager: void detectFace(CancellationSignal,FaceDetectionCallback,int)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.app.VrManager: void setStandbyEnabled(boolean)>|android.permission.ACCESS_VR_MANAGER
<android.os.PowerManager: void forceLowPowerStandbyActive(boolean)>|android.permission.MANAGE_LOW_POWER_STANDBY|android.permission.DEVICE_POWER
<android.hardware.face.FaceManager: void enroll(int,byte[],CancellationSignal,EnrollmentCallback,int[])>|android.permission.MANAGE_BIOMETRIC
<android.os.UserManager: UserInfo createRestrictedProfile(String)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<com.android.server.os.BugreportManagerServiceImpl: void startBugreport(int,String,FileDescriptor,FileDescriptor,int,IDumpstateListener,boolean)>|android.permission.DUMP
<android.os.PowerExemptionManager: void removeFromPermanentAllowList(String)>|android.permission.DEVICE_POWER
<android.media.AudioManager: List<AudioProductStrategy> getAudioProductStrategies()>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.TelephonyManager: CellIdentity getLastKnownCellIdentity()>|android.permission.ACCESS_FINE_LOCATION|android.permission."com.android.phone.permission.ACCESS_LAST_KNOWN_CELL_ID"
<android.location.LocationManager: void getCurrentLocation(String,CancellationSignal,Executor,Consumer<Location>)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.app.AlarmManager: void setTime(long)>|android.permission.SET_TIME
<android.telephony.ServiceState: String getOperatorAlpha()>|android.permission.ACCESS_FINE_LOCATION|android.permission.ACCESS_COARSE_LOCATION
<android.os.IncidentManager: void cancelAuthorization(AuthListener)>|android.permission.REQUEST_INCIDENT_REPORT_APPROVAL
<android.app.time.TimeManager: void removeTimeZoneDetectorListener(TimeZoneDetectorListener)>|android.permission.MANAGE_TIME_AND_ZONE_DETECTION
<android.media.Spatializer: void setEnabled(boolean)>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.app.StatusBarManager: void setNavBarMode(int)>|android.permission.STATUS_BAR
<android.telephony.TelephonyManager: NetworkScan requestNetworkScan(NetworkScanRequest,Executor,NetworkScanCallback)>|android.permission.MODIFY_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<android.os.Vibrator: boolean isVibrating()>|android.permission.ACCESS_VIBRATOR_STATE
<android.os.BatteryStatsManager: CellularBatteryStats getCellularBatteryStats()>|android.permission.BATTERY_STATS|android.permission.UPDATE_DEVICE_STATS
<android.hardware.lights.SystemLightsManager: LightsSession openSession(int)>|android.permission.CONTROL_DEVICE_LIGHTS
<android.net.VpnManager: List<String> getAppExclusionList(int,String)>|android.permission.NETWORK_SETTINGS|android.permission.NetworkStack.PERMISSION_MAINLINE_NETWORK_STACK|android.permission.NETWORK_STACK
<android.os.UserManager: List<UserInfo> getAliveUsers()>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.app.AppOpsManager: List<PackageOps> getOpsForPackage(int,String,int[])>|android.permission.GET_APP_OPS_STATS
<android.app.Activity: void registerRemoteAnimations(RemoteAnimationDefinition)>|android.permission.CONTROL_REMOTE_APP_TRANSITION_ANIMATIONS
<android.telephony.TelephonyManager: List<CellInfo> getAllCellInfo()>|android.permission.ACCESS_FINE_LOCATION
<android.media.Spatializer: int getOutput()>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.os.UserManager: boolean hasRestrictedProfiles()>|android.permission.MANAGE_USERS
<android.telephony.TelephonyManager: ImsiEncryptionInfo getCarrierInfoForImsiEncryption(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.provider.Settings.Config: int getSyncDisabledMode(ContentResolver)>|android.permission.WRITE_DEVICE_CONFIG
<android.companion.virtual.VirtualDeviceManager.VirtualDevice: VirtualKeyboard createVirtualKeyboard(VirtualDisplay,String,int,int)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.os.UserManager: boolean isUserUnlocked(int)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<com.android.server.companion.virtual.VirtualDeviceImpl: void onAudioSessionEnded()>|android.permission.CREATE_VIRTUAL_DEVICE
<android.hardware.camera2.CameraManager: boolean isConcurrentSessionConfigurationSupported(Map<String, SessionConfiguration>)>|android.permission.CAMERA
<android.os.UserManager: boolean isGuestUser()>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.media.tv.TvInputManager: void addBlockedRating(TvContentRating)>|android.permission.MODIFY_PARENTAL_CONTROLS
<android.media.audiofx.AudioEffect: boolean isEffectSupportedForDevice(UUID,AudioDeviceAttributes)>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.media.AudioManager: void setHfpEnabled(boolean)>|android.permission.BLUETOOTH_STACK
<android.media.AudioDeviceVolumeManager: void setDeviceAbsoluteMultiVolumeBehavior(AudioDeviceAttributes,List<VolumeInfo>,Executor,OnAudioDeviceVolumeChangedListener,boolean)>|android.permission.MODIFY_AUDIO_ROUTING|android.permission.BLUETOOTH_PRIVILEGED
<android.hardware.hdmi.HdmiControlManager: int getSystemAudioControl()>|android.permission.HDMI_CEC
<android.telephony.TelephonyManager: boolean setNetworkSelectionModeManual(String,boolean,int)>|android.permission.MODIFY_PHONE_STATE
<android.net.PacProxyManager: void setCurrentProxyScriptUrl(ProxyInfo)>|android.permission.NETWORK_STACK|android.permission.NetworkStack.PERMISSION_MAINLINE_NETWORK_STACK|android.permission.NETWORK_SETTINGS
<android.telephony.PhoneStateListener: void onRegistrationFailed(CellIdentity,String,int,int,int)>|android.permission.READ_PRECISE_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<android.app.StatusBarManager: void togglePanel()>|android.permission.STATUS_BAR
<android.content.pm.CrossProfileApps: void startActivity(Intent,UserHandle,Activity,Bundle)>|android.permission.INTERACT_ACROSS_PROFILES|android.permission.INTERACT_ACROSS_USERS
<android.app.BroadcastOptions: void setTemporaryAppAllowlist(long,int,int,String)>|android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST|android.permission.START_ACTIVITIES_FROM_BACKGROUND|android.permission.START_FOREGROUND_SERVICES_FROM_BACKGROUND
<android.telephony.ims.ImsMmTelManager: void unregisterImsRegistrationCallback(RegistrationCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telecom.TelecomManager: void acceptRingingCall()>|android.permission.ANSWER_PHONE_CALLS|android.permission.MODIFY_PHONE_STATE
<android.os.PowerManager: void setLowPowerStandbyEnabled(boolean)>|android.permission.MANAGE_LOW_POWER_STANDBY|android.permission.DEVICE_POWER
<android.net.NetworkScoreManager: boolean requestScores(Collection<NetworkKey>)>|android.permission.REQUEST_NETWORK_SCORES
<android.content.rollback.RollbackManager: List<RollbackInfo> getAvailableRollbacks()>|android.permission.MANAGE_ROLLBACKS|android.permission.TEST_MANAGE_ROLLBACKS
<android.apphibernation.AppHibernationManager: boolean isHibernatingGlobally(String)>|android.permission.MANAGE_APP_HIBERNATION
<android.telephony.TelephonyManager: String[] getMergedImsisFromGroup()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.location.LocationManager: boolean setProviderEnabledForUser(String,boolean,UserHandle)>|android.permission.WRITE_SECURE_SETTINGS
<android.os.UserManager: String getUserName()>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS|android.permission.GET_ACCOUNTS_PRIVILEGED
<android.telephony.TelephonyManager: boolean isDataConnectionAllowed()>|android.permission.ACCESS_NETWORK_STATE|android.permission.READ_PHONE_STATE|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_BASIC_PHONE_STATE
<android.media.Spatializer: List<AudioDeviceAttributes> getCompatibleAudioDevices()>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.app.admin.DevicePolicyManager: void notifyPendingSystemUpdate(long)>|android.permission.NOTIFY_PENDING_SYSTEM_UPDATE
<android.telephony.TelephonyManager: void resetOtaEmergencyNumberDbFilePath()>|android.permission.READ_ACTIVE_EMERGENCY_SESSION
<android.app.admin.DevicePolicyManager: void sendLostModeLocationUpdate(Executor,Consumer<Boolean>)>|android.permission.TRIGGER_LOST_MODE
<android.telephony.ims.ProvisioningManager: void setRcsProvisioningStatusForCapability(int,boolean)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: int getCdmaRoamingMode()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.security.attestationverification.AttestationVerificationManager: void verifyAttestation(AttestationProfile,int,Bundle,byte[],Executor,BiConsumer<@VerificationResult Integer, VerificationToken>)>|android.permission.USE_ATTESTATION_VERIFICATION_SERVICE
<android.telephony.TelephonyManager: void requestModemActivityInfo(Executor,OutcomeReceiver<ModemActivityInfo, ModemActivityInfoException>)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: int getDataNetworkType(int)>|android.permission.READ_PHONE_STATE
<android.apphibernation.AppHibernationManager: void setHibernatingGlobally(String,boolean)>|android.permission.MANAGE_APP_HIBERNATION
<android.telephony.PhoneStateListener: void onVoiceActivationStateChanged(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.lights.SystemLightsManager.SystemLightsSession: void close()>|android.permission.CONTROL_DEVICE_LIGHTS
<android.view.inputmethod.InputMethodManager: boolean setCurrentInputMethodSubtype(InputMethodSubtype)>|android.permission.WRITE_SECURE_SETTINGS
<android.os.BatteryStatsManager: void reportWifiScanStartedFromSource(WorkSource)>|android.permission.UPDATE_DEVICE_STATS
<android.telephony.TelephonyManager: boolean isVideoCallingEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PHONE_STATE
<android.hardware.biometrics.BiometricPrompt.Builder: Builder setTextForDeviceCredential(CharSequence,CharSequence,CharSequence)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.hardware.SensorPrivacyManager: boolean areAnySensorPrivacyTogglesEnabled(int)>|android.permission.OBSERVE_SENSOR_PRIVACY
<android.permission.PermissionControllerManager: void revokeRuntimePermissions(Map<String, List<String>>,boolean,int,Executor,OnRevokeRuntimePermissionsCallback)>|android.permission.REVOKE_RUNTIME_PERMISSIONS
<android.os.UserManager: UserInfo createProfileForUser(String,int,int)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.telephony.ims.ImsMmTelManager: void registerImsStateCallback(Executor,ImsStateCallback)>|android.permission.READ_PRECISE_PHONE_STATE|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.admin.DevicePolicyManager: boolean setDeviceOwner(ComponentName,String,int)>|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.hardware.biometrics.BiometricManager: Strings getStrings(int)>|android.permission.USE_BIOMETRIC
<android.telephony.SubscriptionManager: void setDeviceToDeviceStatusSharingPreference(int,int)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.fingerprint.FingerprintManager: List<FingerprintSensorPropertiesInternal> getSensorPropertiesInternal()>|android.permission.USE_BIOMETRIC_INTERNAL
<android.telephony.ims.ImsRcsManager: void registerImsRegistrationCallback(Executor,RegistrationCallback)>|android.permission.READ_PRECISE_PHONE_STATE
<android.media.AudioManager: void setFocusRequestResult(AudioFocusInfo,int,AudioPolicy)>|android.permission.MODIFY_AUDIO_ROUTING
<android.accessibilityservice.AccessibilityService: FingerprintGestureController getFingerprintGestureController()>|android.permission.USE_FINGERPRINT
<android.os.BatteryStatsManager: void reportBluetoothOn(int,int,String)>|android.permission.BLUETOOTH_CONNECT
<android.telephony.TelephonyManager: void setPolicyDataEnabled(boolean)>|android.permission.MODIFY_PHONE_STATE
<com.android.server.graphics.fonts.FontManagerService: int updateFontFamily(List<FontUpdateRequest>,int)>|android.permission.UPDATE_FONTS
<android.app.admin.DevicePolicyManager: void setUserProvisioningState(int,int)>|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.os.IncidentManager: List<Uri> getIncidentReportList(String)>|android.permission.DUMP|android.permission.PACKAGE_USAGE_STATS
<android.telephony.TelephonyManager: int getNetworkType(int)>|android.permission.READ_PHONE_STATE
<android.app.Activity: void startActivityForResultAsUser(Intent,String,int,Bundle,UserHandle)>|android.permission.INTERACT_ACROSS_USERS|android.permission.INTERACT_ACROSS_USERS_FULL
<android.print.PrintManager: List<RecommendationInfo> getPrintServiceRecommendations()>|android.permission.READ_PRINT_SERVICE_RECOMMENDATIONS
<android.telephony.TelephonyManager: boolean setRadio(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: int getCdmaEnhancedRoamingIndicatorDisplayNumber()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: int checkCarrierPrivilegesForPackage(String)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.display.DisplayManager: void setBrightness(int,float)>|android.permission.CONTROL_DISPLAY_BRIGHTNESS
<android.telephony.ServiceState: String getDataOperatorNumeric()>|android.permission.ACCESS_FINE_LOCATION|android.permission.ACCESS_COARSE_LOCATION
<android.telephony.ims.RcsUceAdapter: void setUceSettingEnabled(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.location.LocationManager: Location getLastLocation()>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.media.AudioManager: int requestAudioFocus(AudioFocusRequest,AudioPolicy)>|android.permission.MODIFY_AUDIO_ROUTING
<android.security.keystore.recovery.RecoveryController: int getRecoveryStatus(String)>|android.permission.RECOVER_KEYSTORE
<android.content.pm.PackageManager: boolean setDefaultBrowserPackageNameAsUser(String,int)>|android.permission.SET_PREFERRED_APPLICATIONS|android.permission.INTERACT_ACROSS_USERS_FULL
<android.telecom.Conference: void setAddress(Uri,int)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.face.FaceManager: int getLockoutModeForUser(int,int)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.provider.DeviceConfig: int getSyncDisabledMode()>|android.permission.WRITE_DEVICE_CONFIG
<android.app.UiModeManager: void enableCarMode(int,int)>|android.permission.ENTER_CAR_MODE_PRIORITIZED
<android.telephony.ims.ProvisioningManager: boolean getRcsProvisioningStatusForCapability(int,int)>|android.permission.READ_PRECISE_PHONE_STATE
<android.telephony.TelephonyManager: void setRadioEnabled(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.media.AudioManager: void forceVolumeControlStream(int)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: String getVoiceMailNumber()>|android.permission.READ_PHONE_STATE
<android.app.AppOpsManager: void rebootHistory(long)>|android.permission.MANAGE_APPOPS
<android.service.persistentdata.PersistentDataBlockManager: void wipe()>|android.permission.OEM_UNLOCK_STATE
<android.net.vcn.VcnManager: void clearVcnConfig(ParcelUuid)>|android.permission."carrier privileges"
<android.app.admin.DevicePolicyManager: boolean isUnattendedManagedKiosk()>|android.permission.MANAGE_USERS|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.content.pm.PackageManager: void makeUidVisible(int,int)>|android.permission.MAKE_UID_VISIBLE
<android.app.usage.UsageStatsManager: Map<String, Integer> getAppStandbyBuckets()>|android.permission.PACKAGE_USAGE_STATS
<android.os.BatteryStatsManager: void reportWifiState(int,String)>|android.permission.UPDATE_DEVICE_STATS
<android.media.Spatializer: void setDesiredHeadTrackingMode(int)>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.hardware.SensorPrivacyManager: void addSensorPrivacyListener(int,OnSensorPrivacyChangedListener)>|android.permission.OBSERVE_SENSOR_PRIVACY
<android.os.UserManager: void clearSeedAccountData()>|android.permission.MANAGE_USERS
<android.companion.virtual.audio.VirtualAudioSession: void close()>|android.permission.MODIFY_AUDIO_ROUTING
<android.hardware.biometrics.BiometricTestSession: void notifyError(int,int)>|android.permission.TEST_BIOMETRIC
<android.app.KeyguardManager: boolean isWeakEscrowTokenValid(long,byte[],UserHandle)>|android.permission.MANAGE_WEAK_ESCROW_TOKEN
<android.content.rollback.RollbackManager: void expireRollbackForPackage(String)>|android.permission.TEST_MANAGE_ROLLBACKS
<android.location.LocationManager: boolean isProviderPackage(String)>|android.permission.READ_DEVICE_CONFIG
<android.content.rollback.RollbackManager: void reloadPersistedData()>|android.permission.TEST_MANAGE_ROLLBACKS
<android.os.UserManager: boolean isMediaSharedWithParent()>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<com.android.server.companion.virtual.audio.VirtualAudioController: List<AudioRecordingConfiguration> findRecordingConfigurations(List<AudioRecordingConfiguration>,ArraySet<Integer>)>|android.permission.MODIFY_AUDIO_ROUTING
<android.app.ActivityManager: void dumpPackageState(FileDescriptor,String)>|android.permission.DUMP
<android.hardware.hdmi.HdmiControlManager: void setSystemAudioModeMuting(int)>|android.permission.HDMI_CEC
<android.view.SurfaceControlHdrLayerInfoListener: void unregisterAll()>|android.permission.CONTROL_DISPLAY_BRIGHTNESS
<com.android.server.location.LocationManagerService: void setAutomotiveGnssSuspended(boolean)>|android.permission.CONTROL_AUTOMOTIVE_GNSS
<android.app.UiModeManager: boolean setNightModeActivatedForCustomMode(int,boolean)>|android.permission.MODIFY_DAY_NIGHT_MODE
<android.app.time.TimeManager: void addTimeZoneDetectorListener(Executor,TimeZoneDetectorListener)>|android.permission.MANAGE_TIME_AND_ZONE_DETECTION
<android.hardware.input.InputManager: void removeKeyboardLayoutForInputDevice(InputDeviceIdentifier,String)>|android.permission.SET_KEYBOARD_LAYOUT
<android.app.WallpaperManager: int setBitmap(Bitmap,Rect,boolean,int)>|android.permission.SET_WALLPAPER
<android.os.UserManager: Bitmap getUserIcon(int)>|android.permission.MANAGE_USERS|android.permission.GET_ACCOUNTS_PRIVILEGED
<android.companion.CompanionDeviceManager: void notifyDeviceAppeared(int)>|android.permission.REQUEST_COMPANION_SELF_MANAGED
<android.telephony.TelephonyManager: PinResult supplyIccLockPin(String)>|android.permission.MODIFY_PHONE_STATE
<android.media.Spatializer: void clearOnSpatializerOutputChangedListener()>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.telephony.SubscriptionManager: SubscriptionInfo getActiveSubscriptionInfo(int)>|android.permission.READ_PHONE_STATE
<android.hardware.face.FaceManager: boolean hasEnrolledTemplates(int)>|android.permission.USE_BIOMETRIC_INTERNAL|android.permission.INTERACT_ACROSS_USERS
<android.net.NetworkPolicyManager: void unregisterNetworkPolicyCallback(NetworkPolicyCallback)>|android.permission.OBSERVE_NETWORK_POLICY
<android.window.TaskOrganizer: RunningTaskInfo> getRootTasks(int,int[])>|android.permission.MANAGE_ACTIVITY_TASKS
<android.os.image.DynamicSystemManager: boolean remove()>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.content.Context: void sendBroadcastAsUser(Intent,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.hardware.face.FaceManager: void generateChallenge(int,GenerateChallengeCallback)>|android.permission.MANAGE_BIOMETRIC
<android.hardware.location.ContextHubManager: List<ContextHubInfo> getContextHubs()>|android.permission.ACCESS_CONTEXT_HUB
<android.app.AppOpsManager: void startWatchingNoted(int[],OnOpNotedListener)>|android.permission.WATCH_APPOPS
<android.hardware.hdmi.HdmiControlManager: void setTvSendStandbyOnSleep(int)>|android.permission.HDMI_CEC
<android.telecom.TelecomManager: String getLine1Number(PhoneAccountHandle)>|android.permission.READ_PHONE_STATE|android.permission.READ_SMS|android.permission.READ_PHONE_NUMBERS
<android.telephony.PhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>|android.permission.READ_PHONE_STATE
<android.companion.CompanionDeviceManager: void addOnAssociationsChangedListener(Executor,OnAssociationsChangedListener)>|android.permission.MANAGE_COMPANION_DEVICES
<android.hardware.display.DisplayManager: void setShouldAlwaysRespectAppRequestedMode(boolean)>|android.permission.OVERRIDE_DISPLAY_MODE_REQUESTS
<com.android.server.wm.WindowManagerService: void unregisterTaskFpsCallback(ITaskFpsCallback)>|android.permission.ACCESS_FPS_COUNTER
<android.content.pm.PackageManager: int installExistingPackageAsUser(String,int)>|android.permission.INSTALL_EXISTING_PACKAGES|android.permission.INSTALL_PACKAGES|android.permission.INTERACT_ACROSS_USERS_FULL
<android.media.tv.TvInputManager: boolean captureFrame(String,Surface,TvStreamConfig)>|android.permission.CAPTURE_TV_INPUT
<android.telephony.TelephonyManager: String getImei()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.content.om.OverlayManager: List<OverlayInfo> getOverlayInfosForTarget(String,UserHandle)>|android.permission."android.permission.INTERACT_ACROSS_USERS"|android.permission."android.permission.INTERACT_ACROSS_USERS_FULL"
<android.telecom.TelecomManager: void acceptRingingCall(int)>|android.permission.ANSWER_PHONE_CALLS|android.permission.MODIFY_PHONE_STATE
<android.media.Spatializer: void setEffectParameter(int,byte[])>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.telephony.TelephonyCallback.EmergencyNumberListListener: void onEmergencyNumberListChanged(Map<Integer, List<EmergencyNumber>>)>|android.permission.READ_PHONE_STATE
<android.app.ActivityTaskManager: void removeRootTasksWithActivityTypes(int[])>|android.permission.MANAGE_ACTIVITY_TASKS
<android.telecom.RemoteConnection: void onCallFilteringCompleted(CallFilteringCompletionInfo)>|android.permission.READ_CONTACTS
<android.telephony.TelephonyManager: String getCdmaMin(int)>|android.permission.MODIFY_PHONE_STATE
<android.graphics.fonts.FontManager: int updateFontFamily(FontFamilyUpdateRequest,int)>|android.permission.UPDATE_FONTS
<android.app.KeyguardManager: void setPrivateNotificationsAllowed(boolean)>|android.permission.CONTROL_KEYGUARD_SECURE_NOTIFICATIONS
<android.hardware.lights.SystemLightsManager: List<Light> getLights()>|android.permission.CONTROL_DEVICE_LIGHTS
<android.media.AudioAttributes.Builder: Builder setHotwordModeEnabled(boolean)>|android.permission.CAPTURE_AUDIO_HOTWORD
<android.location.LocationManager: void injectGnssMeasurementCorrections(GnssMeasurementCorrections)>|android.permission.ACCESS_FINE_LOCATION
<android.view.accessibility.AccessibilityManager: void unregisterSystemAction(int)>|android.permission.MANAGE_ACCESSIBILITY
<android.os.UserManager: Bitmap getUserIcon()>|android.permission.MANAGE_USERS|android.permission.GET_ACCOUNTS_PRIVILEGED
<com.android.server.app.GameManagerService: GameModeInfo getGameModeInfo(String,int)>|android.permission.MANAGE_GAME_MODE
<android.telephony.ims.ImsMmTelManager: boolean isCapable(int,int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.VibratorManager: void vibrate(int,String,CombinedVibration,String,VibrationAttributes)>|android.permission.VIBRATE
<android.media.AudioManager: void setBluetoothHeadsetProperties(String,boolean,boolean)>|android.permission.BLUETOOTH_STACK
<android.app.AlarmManager: void setAlarmClock(AlarmClockInfo,PendingIntent)>|android.permission.SCHEDULE_EXACT_ALARM
<android.telephony.ims.ImsRcsManager: void unregisterImsRegistrationCallback(RegistrationCallback)>|android.permission.READ_PRECISE_PHONE_STATE
<android.content.pm.verify.domain.DomainVerificationManager: List<String> queryValidVerificationPackageNames()>|android.permission.DOMAIN_VERIFICATION_AGENT
<android.app.admin.DevicePolicyResourcesManager: void setStrings(Set<DevicePolicyStringResource>)>|android.permission.UPDATE_DEVICE_MANAGEMENT_RESOURCES
<android.app.compat.CompatChanges: void putAllPackageOverrides(Map<String, Map<Long, PackageOverride>>)>|android.permission.OVERRIDE_COMPAT_CHANGE_CONFIG_ON_RELEASE_BUILD
<android.provider.Settings.System: boolean putString(ContentResolver,String,String,boolean)>|android.permission.MODIFY_SETTINGS_OVERRIDEABLE_BY_RESTORE
<android.hardware.input.InputManager: void setMaximumObscuringOpacityForTouch(float)>|android.permission.WRITE_SECURE_SETTINGS
<android.hardware.SensorPrivacyManager: void suppressSensorPrivacyReminders(int,boolean)>|android.permission.MANAGE_SENSOR_PRIVACY
<com.android.shell.BugreportRequestedReceiver: void onReceive(Context,Intent)>|android.permission.TRIGGER_SHELL_BUGREPORT
<android.security.keystore.recovery.RecoveryController: KeyChainSnapshot getKeyChainSnapshot()>|android.permission.RECOVER_KEYSTORE
<android.window.TaskOrganizer: void unregisterOrganizer()>|android.permission.MANAGE_ACTIVITY_TASKS
<android.media.soundtrigger.SoundTriggerManager: ModelParamRange queryParameter(UUID,int)>|android.permission.MANAGE_SOUND_TRIGGER
<android.hardware.usb.UsbPort: void setRoles(int,int)>|android.permission.MANAGE_USB
<android.content.pm.PackageInstaller: void installExistingPackage(String,int,IntentSender)>|android.permission.INSTALL_PACKAGES|android.permission.INSTALL_EXISTING_PACKAGES
<android.telephony.TelephonyCallback.SrvccStateListener: void onSrvccStateChanged(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.SensorPrivacyManager: void addSensorPrivacyListener(OnSensorPrivacyChangedListener)>|android.permission.OBSERVE_SENSOR_PRIVACY
<android.app.timezonedetector.TimeZoneDetector: void suggestTelephonyTimeZone(TelephonyTimeZoneSuggestion)>|android.permission.SUGGEST_TELEPHONY_TIME_AND_ZONE
<android.os.UserManager: boolean isUserUnlocked(UserHandle)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.telephony.TelephonyManager: boolean setPreferredNetworkTypeBitmask(long)>|android.permission.MODIFY_PHONE_STATE
<android.app.WallpaperManager: int setBitmap(Bitmap,Rect,boolean)>|android.permission.SET_WALLPAPER
<com.android.server.pm.verify.domain.DomainVerificationManagerInternal: int setDomainVerificationStatusInternal(int,UUID,Set<String>,int)>|android.permission.DOMAIN_VERIFICATION_AGENT
<android.telephony.TelephonyCallback.MessageWaitingIndicatorListener: void onMessageWaitingIndicatorChanged(boolean)>|android.permission.READ_PHONE_STATE
<android.os.UserManager: boolean areThereUsersToWhichToSwitch()>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.telephony.TelephonyManager: void setMultiSimCarrierRestriction(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.input.InputManager: boolean injectInputEvent(InputEvent,int,int)>|android.permission.INJECT_EVENTS
<android.app.compat.CompatChanges: void removeAllPackageOverrides(Map<String, Set<Long>>)>|android.permission.OVERRIDE_COMPAT_CHANGE_CONFIG_ON_RELEASE_BUILD
<android.nfc.NfcAdapter: void registerControllerAlwaysOnListener(Executor,ControllerAlwaysOnListener)>|android.permission.NFC_SET_CONTROLLER_ALWAYS_ON
<android.os.UserManager: List<UserInfo> getUsers(boolean,boolean,boolean)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.telephony.TelephonyManager: int getNumberOfModemsWithSimultaneousDataConnections()>|android.permission.READ_PHONE_STATE
<android.permission.LegacyPermissionManager: void grantDefaultPermissionsToLuiApp(String,UserHandle,Executor,Consumer<Boolean>)>|android.permission.GRANT_RUNTIME_PERMISSIONS_TO_TELEPHONY_DEFAULTS
<android.hardware.hdmi.HdmiControlManager: void addHdmiCecVolumeControlFeatureListener(Executor,HdmiCecVolumeControlFeatureListener)>|android.permission.HDMI_CEC
<android.content.pm.PackageInstaller.Session: DataLoaderParams getDataLoaderParams()>|android.permission.USE_INSTALLER_V2
<android.telephony.TelephonyManager: boolean isLteCdmaEvdoGsmWcdmaEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.PowerManager: void reboot(String)>|android.permission.permission.REBOOT
<android.net.NetworkScoreManager: boolean isCallerActiveScorer(int)>|android.permission.REQUEST_NETWORK_SCORES
<android.hardware.input.VirtualMouse: void sendRelativeEvent(VirtualMouseRelativeEvent)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.content.ClipboardManager: void setPrimaryClipAsPackage(ClipData,String)>|android.permission.SET_CLIP_SOURCE
<android.telephony.TelephonyCallback.RegistrationFailedListener: void onRegistrationFailed(CellIdentity,String,int,int,int)>|android.permission.READ_PRECISE_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<android.content.ContentResolver: void registerContentObserverAsUser(Uri,boolean,ContentObserver,UserHandle)>|android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.power.PowerManagerService.BinderService: boolean isLowPowerStandbySupported()>|android.permission.MANAGE_LOW_POWER_STANDBY|android.permission.DEVICE_POWER
<android.app.AppOpsManager: PackageOps> getPackagesForOps(String[])>|android.permission.GET_APP_OPS_STATS
<android.apphibernation.AppHibernationManager: void setHibernatingForUser(String,boolean)>|android.permission.MANAGE_APP_HIBERNATION
<android.telephony.ims.ImsMmTelManager: void registerMmTelCapabilityCallback(Executor,CapabilityCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.location.LocationManager: void requestLocationUpdates(LocationRequest,LocationListener,Looper)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.content.pm.PackageInstaller.SessionParams: void setAllocateAggressive(boolean)>|android.permission.ALLOCATE_AGGRESSIVE
<android.telephony.TelephonyManager: int getVoiceNetworkType(int)>|android.permission.READ_PHONE_STATE
<android.os.UserManager: int getUserCount()>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.service.games.GameSession: boolean restartGame()>|android.permission.MANAGE_GAME_ACTIVITY
<android.telephony.TelephonyManager: void switchMultiSimConfig(int)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: int getSimApplicationState(int,int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.ims.ImsRcsManager: void getRegistrationState(Executor,Consumer<Integer>)>|android.permission.READ_PRECISE_PHONE_STATE
<android.net.vcn.VcnManager: void addVcnUnderlyingNetworkPolicyListener(Executor,VcnUnderlyingNetworkPolicyListener)>|android.permission.NETWORK_FACTORY
<android.companion.CompanionDeviceManager: boolean isDeviceAssociatedForWifiConnection(String,MacAddress,UserHandle)>|android.permission.MANAGE_COMPANION_DEVICES
<android.telephony.TelephonyManager: Map<Integer, List<EmergencyNumber>> getEmergencyNumberList(int)>|android.permission.READ_PHONE_STATE
<android.net.NetworkPolicyManager: void registerNetworkPolicyCallback(Executor,NetworkPolicyCallback)>|android.permission.OBSERVE_NETWORK_POLICY
<android.media.MediaRouter2: void stopScan()>|android.permission.MEDIA_CONTENT_CONTROL
<android.telecom.TelecomManager: List<PhoneAccountHandle> getCallCapablePhoneAccounts()>|android.permission.READ_PHONE_STATE
<android.os.BatteryStatsManager: void setBatteryLevel(int,boolean)>|android.permission.DEVICE_POWER
<android.os.BatteryStatsManager: void reportNetworkInterfaceForTransports(String,int[])>|android.permission.NetworkStack.PERMISSION_MAINLINE_NETWORK_STACK|android.permission.NETWORK_STACK
<android.companion.CompanionDeviceManager: void associate(AssociationRequest,Executor,Callback)>|android.permission.REQUEST_COMPANION_PROFILE_WATCH|android.permission.REQUEST_COMPANION_PROFILE_COMPUTER|android.permission.REQUEST_COMPANION_PROFILE_APP_STREAMING|android.permission.REQUEST_COMPANION_PROFILE_AUTOMOTIVE_PROJECTION
<android.os.UserManager: boolean isUserSwitcherEnabled()>|android.permission.MANAGE_USERS|android.permission.// And INTERACT_ if diff profile group
CREATE_USERS
<android.security.keystore.recovery.RecoveryController: int[] getRecoverySecretTypes()>|android.permission.RECOVER_KEYSTORE
<android.permission.LegacyPermissionManager: void grantDefaultPermissionsToEnabledTelephonyDataServices(String[],UserHandle,Executor,Consumer<Boolean>)>|android.permission.GRANT_RUNTIME_PERMISSIONS_TO_TELEPHONY_DEFAULTS
<android.net.VpnManager: boolean setAlwaysOnVpnPackageForUser(int,String,boolean,List<String>)>|android.permission.CONTROL_ALWAYS_ON_VPN
<android.content.Context: void removeStickyBroadcast(Intent)>|android.permission.BROADCAST_STICKY
<android.telephony.ims.ImsMmTelManager: void getFeatureState(Executor,Consumer<Integer>)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.ims.ImsMmTelManager: void getRegistrationTransportType(Executor,Consumer<Integer>)>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.media.AudioRecord.Builder: AudioRecord build()>|android.permission.RECORD_AUDIO
<android.permission.PermissionManager: int checkPermissionForStartDataDelivery(String,AttributionSource,String)>|android.permission.UPDATE_APP_OPS_STATS
<android.os.BatteryStatsManager: void reportWifiBatchedScanStartedFromSource(WorkSource,int)>|android.permission.UPDATE_DEVICE_STATS
<android.os.UserManager: boolean isGuestUser(int)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.telephony.SubscriptionManager: void setUsageSetting(int,int)>|android.permission.MODIFY_PHONE_STATE
<android.os.UserManager: boolean removeUser(UserHandle)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.media.AudioManager: List<AudioDeviceAttributes> getDevicesForAttributes(AudioAttributes)>|android.permission.MODIFY_AUDIO_ROUTING|android.permission.QUERY_AUDIO_STATE
<android.os.RecoverySystem: void rebootAndApply(Context,String,String)>|android.permission.RECOVERY
<android.app.admin.DevicePolicyManager: boolean setDeviceOwnerOnly(ComponentName,String,int)>|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.os.BatteryStatsManager: void reportWifiOff()>|android.permission.UPDATE_DEVICE_STATS
<android.telephony.TelephonyCallback.CallDisconnectCauseListener: void onCallDisconnectCauseChanged(int,int)>|android.permission.READ_PRECISE_PHONE_STATE
<android.hardware.display.ColorDisplayManager: boolean setDisplayWhiteBalanceEnabled(boolean)>|android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS
<android.telephony.SubscriptionManager: boolean isActiveSubscriptionId(int)>|android.permission.READ_PHONE_STATE
<android.os.UserManager: boolean markGuestForDeletion(int)>|android.permission.MANAGE_USERS
<android.companion.virtual.VirtualDeviceManager: VirtualDevice createVirtualDevice(int,VirtualDeviceParams)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.hardware.display.ColorDisplayManager: boolean setAppSaturationLevel(String,int)>|android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS
<android.content.AttributionSource: Set<String> getRenouncedPermissions()>|android.permission.RENOUNCE_PERMISSIONS
<android.media.AudioManager: void handleBluetoothActiveDeviceChanged(BluetoothDevice,BluetoothDevice,BluetoothProfileConnectionInfo)>|android.permission.BLUETOOTH_STACK
<android.hardware.fingerprint.FingerprintManager: void resetLockout(int,int,byte[])>|android.permission.RESET_FINGERPRINT_LOCKOUT
<android.hardware.face.FaceManager: void addLockoutResetCallback(LockoutResetCallback)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.telephony.PhoneStateListener: void onDisplayInfoChanged(TelephonyDisplayInfo)>|android.permission.READ_PHONE_STATE
<android.hardware.location.ContextHubManager: int[] findNanoAppOnHub(int,NanoAppFilter)>|android.permission.ACCESS_CONTEXT_HUB
<android.telephony.CarrierConfigManager: String getDefaultCarrierServicePackageName()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.biometrics.BiometricTestSession: void startEnroll(int)>|android.permission.TEST_BIOMETRIC
<android.telephony.TelephonyManager: void requestNumberVerification(PhoneNumberRange,long,Executor,NumberVerificationCallback)>|android.permission.MODIFY_PHONE_STATE
<android.permission.PermissionManager: void updatePermissionFlags(String,String,int,int,UserHandle)>|android.permission.GRANT_RUNTIME_PERMISSIONS|android.permission.REVOKE_RUNTIME_PERMISSIONS
<android.telecom.TelecomManager: PhoneAccountHandle getUserSelectedOutgoingPhoneAccount()>|android.permission.READ_PHONE_STATE
<android.app.UiModeManager: int getActiveProjectionTypes()>|android.permission.READ_PROJECTION_STATE
<android.os.UserManager: void setUserName(String)>|android.permission.MANAGE_USERS
<android.nfc.cardemulation.CardEmulation: boolean unsetOffHostForService(ComponentName)>|android.permission.NFC
<android.telephony.TelephonyManager: void setAllowedNetworkTypesForReason(int,long)>|android.permission.MODIFY_PHONE_STATE
<android.os.UserManager: List<UserInfo> getEnabledProfiles(int)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.media.AudioManager: AudioDeviceAttributes getPreferredDeviceForStrategy(AudioProductStrategy)>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.TelephonyManager: String getCdmaEriText()>|android.permission.READ_PHONE_STATE
<android.telephony.SmsManager: void resetAllCellBroadcastRanges()>|android.permission.MODIFY_CELL_BROADCASTS
<android.media.AudioManager: boolean setPreferredDevicesForStrategy(AudioProductStrategy,List<AudioDeviceAttributes>)>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.TelephonyManager: List<UiccCardInfo> getUiccCardsInfo()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.StatusBarManager: void handleSystemKey(int)>|android.permission.STATUS_BAR
<android.app.usage.UsageStatsManager: void setEstimatedLaunchTimesMillis(Map<String, Long>)>|android.permission.CHANGE_APP_LAUNCH_TIME_ESTIMATE
<android.hardware.display.DisplayManager: void setBrightnessConfiguration(BrightnessConfiguration)>|android.permission.CONFIGURE_DISPLAY_BRIGHTNESS
<android.hardware.biometrics.BiometricPrompt.Builder: Builder setAllowedSensorIds(List<Integer>)>|android.permission.TEST_BIOMETRIC|android.permission.USE_BIOMETRIC_INTERNAL
<android.net.NetworkScoreManager: boolean updateScores(ScoredNetwork[])>|android.permission.SCORE_NETWORKS
<android.app.backup.BackupManager: int requestBackup(String[],BackupObserver,BackupManagerMonitor,int)>|android.permission.BACKUP
<android.telephony.TelephonyManager: void updateOtaEmergencyNumberDbFilePath(ParcelFileDescriptor)>|android.permission.READ_ACTIVE_EMERGENCY_SESSION
<android.location.LocationManager: void getCurrentLocation(LocationRequest,CancellationSignal,Executor,Consumer<Location>)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.telephony.euicc.EuiccManager: void continueOperation(Intent,Bundle)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.telephony.TelephonyManager: List<RadioAccessSpecifier> getSystemSelectionChannels()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.content.pm.PackageManager: CharSequence getHarmfulAppWarning(String)>|android.permission.SET_HARMFUL_APP_WARNINGS
<android.media.AudioManager: int registerAudioPolicy(AudioPolicy)>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.TelephonyManager: boolean setRadioPower(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.os.PowerManager: boolean isAmbientDisplaySuppressedForTokenByApp(String,int)>|android.permission.READ_DREAM_STATE|android.permission.READ_DREAM_SUPPRESSION
<android.telephony.TelephonyManager: void toggleRadioOnOff()>|android.permission.MODIFY_PHONE_STATE
<android.hardware.usb.UsbPort: int enableLimitPowerTransfer(boolean)>|android.permission.MANAGE_USB
<android.hardware.display.DisplayManager: void setAreUserDisabledHdrTypesAllowed(boolean)>|android.permission.WRITE_SECURE_SETTINGS
<android.media.tv.TvInputManager: void setParentalControlsEnabled(boolean)>|android.permission.MODIFY_PARENTAL_CONTROLS
<android.app.backup.BackupManager: ComponentName getCurrentTransportComponent()>|android.permission.BACKUP
<android.security.keystore.recovery.RecoveryController: List<String> getAliases()>|android.permission.RECOVER_KEYSTORE
<android.app.NotificationManager: List<ComponentName> getEnabledNotificationListeners()>|android.permission.MANAGE_NOTIFICATION_LISTENERS
<android.app.backup.BackupManager: String getDataManagementLabel(String)>|android.permission.BACKUP
<android.os.UserManager: void setUserEnabled(int)>|android.permission.MANAGE_USERS
<android.app.ActivityManager: void waitForBroadcastIdle()>|android.permission.DUMP
<android.view.accessibility.CaptioningManager: void setSystemAudioCaptioningUiEnabled(boolean)>|android.permission.SET_SYSTEM_AUDIO_CAPTION
<android.app.WallpaperManager: float getWallpaperDimAmount()>|android.permission.SET_WALLPAPER_DIM_AMOUNT
<android.location.LocationManager: boolean registerGnssMeasurementsCallback(Callback,Handler)>|android.permission.ACCESS_FINE_LOCATION
<android.content.pm.CrossProfileApps: void clearInteractAcrossProfilesAppOps()>|android.permission.CONFIGURE_INTERACT_ACROSS_PROFILES|android.permission.INTERACT_ACROSS_USERS
<android.os.RecoverySystem: void scheduleUpdateOnBoot(Context,File)>|android.permission.RECOVERY
<android.hardware.input.VirtualMouse: void sendScrollEvent(VirtualMouseScrollEvent)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.hardware.display.ColorDisplayManager: boolean isSaturationActivated()>|android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS
<android.provider.DeviceConfig: float getFloat(String,String,float)>|android.permission.READ_DEVICE_CONFIG
<android.accounts.AccountManager: AccountManagerFuture<Bundle> finishSessionAsUser(Bundle,Activity,UserHandle,AccountManagerCallback<Bundle>,Handler)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.net.NetworkScoreManager: void disableScoring()>|android.permission.SCORE_NETWORKS|android.permission.REQUEST_NETWORK_SCORES
<android.media.AudioManager: AudioDeviceAttributes getMutingExpectedDevice()>|android.permission.MODIFY_AUDIO_ROUTING
<android.app.PendingIntent: List<ResolveInfo> queryIntentComponents(int)>|android.permission.permission.GET_INTENT_SENDER_INTENT
<android.hardware.display.DisplayManager: float getBrightness(int)>|android.permission.CONTROL_DISPLAY_BRIGHTNESS
<android.service.oemlock.OemLockManager: void setOemUnlockAllowedByCarrier(boolean,byte[])>|android.permission.MANAGE_CARRIER_OEM_UNLOCK_STATE
<android.telephony.TelephonyManager: boolean isDataRoamingEnabled()>|android.permission.ACCESS_NETWORK_STATE|android.permission.READ_PHONE_STATE|android.permission.READ_BASIC_PHONE_STATE
<android.app.VrManager: void setVr2dDisplayProperties(Vr2dDisplayProperties)>|android.permission.RESTRICTED_VR_ACCESS
<android.app.KeyguardManager: long addWeakEscrowToken(byte[],UserHandle,Executor,WeakEscrowTokenActivatedListener)>|android.permission.MANAGE_WEAK_ESCROW_TOKEN
<android.os.Vibrator: void removeVibratorStateListener(OnVibratorStateChangedListener)>|android.permission.ACCESS_VIBRATOR_STATE
<android.os.image.DynamicSystemManager: boolean isEnabled()>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.os.DropBoxManager: Entry getNextEntry(String,long)>|android.permission.READ_LOGS|android.permission.PACKAGE_USAGE_STATS
<android.app.backup.BackupManager: boolean isBackupEnabled()>|android.permission.BACKUP
<android.telephony.TelephonyManager: void notifyUserActivity()>|android.permission.MODIFY_PHONE_STATE
<com.android.server.app.GameManagerService: void notifyGraphicsEnvironmentSetup(String,int)>|android.permission.MANAGE_GAME_MODE
<android.app.ambientcontext.AmbientContextManager: void queryAmbientContextServiceStatus(Set<Integer>,Executor,Consumer<Integer>)>|android.permission.ACCESS_AMBIENT_CONTEXT_EVENT
<android.media.AudioManager: void unregisterAudioPolicyAsync(AudioPolicy)>|android.permission.MODIFY_AUDIO_ROUTING
<android.media.AudioManager: void addOnPreferredDeviceForStrategyChangedListener(Executor,OnPreferredDeviceForStrategyChangedListener)>|android.permission.MODIFY_AUDIO_ROUTING
<android.app.backup.BackupManager: void setAutoRestore(boolean)>|android.permission.BACKUP
<android.app.AppOpsManager: RuntimeAppOpAccessMessage collectRuntimeAppOpAccessMessage()>|android.permission.GET_APP_OPS_STATS
<android.telephony.TelephonyManager: boolean isEmergencyAssistanceEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.view.contentcapture.ContentCaptureManager: void resetTemporaryService(int)>|android.permission.MANAGE_CONTENT_CAPTURE
<android.telephony.PhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>|android.permission.READ_PHONE_STATE
<android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,PendingIntent)>|android.permission.SCHEDULE_EXACT_ALARM
<android.location.LocationManager: boolean registerGnssMeasurementsCallback(Executor,Callback)>|android.permission.ACCESS_FINE_LOCATION
<android.telecom.TelecomManager: List<PhoneAccountHandle> getCallCapablePhoneAccounts(boolean)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.permission.PermissionControllerManager: void stageAndApplyRuntimePermissionsBackup(byte[],UserHandle)>|android.permission.GRANT_RUNTIME_PERMISSIONS|android.permission.RESTORE_RUNTIME_PERMISSIONS
<android.service.oemlock.OemLockManager: boolean isOemUnlockAllowedByUser()>|android.permission.MANAGE_USER_OEM_UNLOCK_STATE
<android.os.Vibrator: void vibrate(long[],int,AudioAttributes)>|android.permission.VIBRATE
<android.telephony.SubscriptionManager: int setDisplayName(String,int,int)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: boolean setOpportunisticNetworkState(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.ims.ImsMmTelManager: boolean isTtyOverVolteEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.provider.DeviceConfig: boolean setProperties(Properties)>|android.permission.WRITE_DEVICE_CONFIG
<android.telephony.TelephonyManager: String getIsimDomain()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.VrManager: boolean isVrModeEnabled()>|android.permission.RESTRICTED_VR_ACCESS|android.permission.ACCESS_VR_STATE
<android.telephony.TelephonyCallback.PreciseDataConnectionStateListener: void onPreciseDataConnectionStateChanged(PreciseDataConnectionState)>|android.permission.READ_PRECISE_PHONE_STATE
<android.content.pm.verify.domain.DomainVerificationManager: int setDomainVerificationUserSelection(UUID,Set<String>,boolean)>|android.permission.UPDATE_DOMAIN_VERIFICATION_USER_SELECTION
<android.content.pm.PackageInstaller: void setPermissionsResult(int,boolean)>|android.permission.INSTALL_PACKAGES
<android.security.keystore.recovery.RecoveryController: void setRecoveryStatus(String,int)>|android.permission.RECOVER_KEYSTORE
<android.print.PrintManager: void addPrintServiceRecommendationsChangeListener(PrintServiceRecommendationsChangeListener,Handler)>|android.permission.READ_PRINT_SERVICE_RECOMMENDATIONS
<android.os.PowerExemptionManager: void addToTemporaryAllowList(String,int,String,long)>|android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST
<android.telephony.TelephonyManager: boolean isDataEnabled()>|android.permission.ACCESS_NETWORK_STATE|android.permission.MODIFY_PHONE_STATE|android.permission.READ_PHONE_STATE|android.permission.READ_BASIC_PHONE_STATE
<android.telephony.TelephonyManager: boolean isAnyRadioPoweredOn()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.PowerManager: void setLowPowerStandbyActiveDuringMaintenance(boolean)>|android.permission.MANAGE_LOW_POWER_STANDBY|android.permission.DEVICE_POWER
<android.media.AudioManager: void setActiveAssistantServiceUids(int[])>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.TelephonyManager: int getCdmaSubscriptionMode()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: boolean isMobileDataPolicyEnabled(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.BatteryStatsManager: void reportWifiMulticastEnabled(WorkSource)>|android.permission.UPDATE_DEVICE_STATS
<android.content.pm.PackageManager: Set<String> getWhitelistedRestrictedPermissions(String,int)>|android.permission.WHITELIST_RESTRICTED_PERMISSIONS
<android.content.Context: boolean bindServiceAsUser(Intent,ServiceConnection,int,Handler,UserHandle)>|android.permission.INTERACT_ACROSS_USERS|android.permission.INTERACT_ACROSS_USERS_FULL|android.permission.INTERACT_ACROSS_PROFILES
<android.app.AppOpsManager: void resetHistoryParameters()>|android.permission.MANAGE_APPOPS
<android.telecom.TelecomManager: boolean isInSelfManagedCall(String,UserHandle)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.PowerManager: boolean setFullPowerSavePolicy(BatterySaverPolicyConfig)>|android.permission.DEVICE_POWER|android.permission.POWER_SAVER
<android.telephony.ims.ProvisioningManager: void unregisterRcsProvisioningCallback(RcsProvisioningCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.PERFORM_IMS_SINGLE_REGISTRATION
<android.media.AudioManager: boolean clearPreferredDevicesForCapturePreset(int)>|android.permission.MODIFY_AUDIO_ROUTING
<android.companion.virtual.VirtualDeviceManager.VirtualDevice: VirtualMouse createVirtualMouse(VirtualDisplay,String,int,int)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.os.image.DynamicSystemManager: boolean startInstallation(String)>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.hardware.biometrics.BiometricTestSession: void close()>|android.permission.TEST_BIOMETRIC
<android.security.KeyChain: boolean setCredentialManagementApp(Context,String,AppUriAuthenticationPolicy)>|android.permission.MANAGE_CREDENTIAL_MANAGEMENT_APP
<android.app.VrManager: void registerVrStateCallback(Executor,VrStateCallback)>|android.permission.RESTRICTED_VR_ACCESS|android.permission.ACCESS_VR_STATE
<android.os.PowerExemptionManager: int[] getAllowListedAppIds(boolean)>|android.permission.DEVICE_POWER
<android.permission.PermissionManager: boolean isAutoRevokeExempted(String)>|android.permission.WHITELIST_AUTO_REVOKE_PERMISSIONS
<android.telephony.TelephonyManager: void setDataActivationState(int)>|android.permission.MODIFY_PHONE_STATE
<android.telecom.TelecomManager: int getCurrentTtyMode()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.image.DynamicSystemClient: void start(Uri,long)>|android.permission.INSTALL_DYNAMIC_SYSTEM
<android.app.admin.DevicePolicyManager: void setActiveAdmin(ComponentName,boolean,int)>|android.permission.MANAGE_DEVICE_ADMINS|android.permission.INTERACT_ACROSS_USERS_FULL
<android.hardware.hdmi.HdmiControlManager: void setSadsPresenceInQuery(List<String>,int)>|android.permission.HDMI_CEC
<android.location.LocationRequest.Builder: Builder setHiddenFromAppOps(boolean)>|android.permission.UPDATE_APP_OPS_STATS
<android.hardware.hdmi.HdmiControlManager: void setPowerControlMode(String)>|android.permission.HDMI_CEC
<android.content.pm.PackageInstaller: void uninstall(VersionedPackage,IntentSender)>|android.permission.DELETE_PACKAGES|android.permission.REQUEST_DELETE_PACKAGES
<android.hardware.display.ColorDisplayManager: boolean setNightDisplayCustomStartTime(LocalTime)>|android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS
<android.app.KeyguardManager: void removeKeyguardLockedStateListener(KeyguardLockedStateListener)>|android.permission.SUBSCRIBE_TO_KEYGUARD_LOCKED_STATE
<android.media.tv.TvInputManager: void notifyPreviewProgramAddedToWatchNext(String,long,long)>|android.permission.NOTIFY_TV_INPUTS
<android.telephony.CarrierConfigManager: void notifyConfigChangedForSubId(int)>|android.permission.MODIFY_PHONE_STATE
<android.provider.Settings.Config: Map<String, String> getStrings(ContentResolver,String,List<String>)>|android.permission.READ_DEVICE_CONFIG
<android.os.RecoverySystem: void installPackage(Context,File,boolean)>|android.permission.RECOVERY
<android.location.LocationManager: void requestLocationUpdates(LocationRequest,PendingIntent)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.hardware.display.DisplayManager: void setUserDisabledHdrTypes(int[])>|android.permission.WRITE_SECURE_SETTINGS
<android.view.displayhash.DisplayHashManager: void setDisplayHashThrottlingEnabled(boolean)>|android.permission.READ_FRAME_BUFFER
<android.telephony.PhoneStateListener: void onOutgoingEmergencyCall(EmergencyNumber,int)>|android.permission.READ_ACTIVE_EMERGENCY_SESSION
<android.app.DownloadManager: void onMediaStoreDownloadsDeleted(LongSparseArray<String>)>|android.permission.WRITE_MEDIA_STORAGE
<android.hardware.location.ContextHubManager: ContextHubClient createClient(ContextHubInfo,ContextHubClientCallback,Executor)>|android.permission.ACCESS_CONTEXT_HUB
<android.permission.PermissionControllerManager: void revokeRuntimePermission(String,String)>|android.permission.REVOKE_RUNTIME_PERMISSIONS
<com.android.server.pm.verify.domain.DomainVerificationManagerInternal: DomainVerificationInfo getDomainVerificationInfo(String)>|android.permission.DOMAIN_VERIFICATION_AGENT|android.permission.UPDATE_DOMAIN_VERIFICATION_USER_SELECTION
<android.telecom.TelecomManager: List<PhoneAccountHandle> getSelfManagedPhoneAccounts()>|android.permission.READ_PHONE_STATE
<android.location.LocationRequest.Builder: Builder setLowPower(boolean)>|android.permission.LOCATION_HARDWARE
<android.nfc.NfcAdapter: boolean disable()>|android.permission.WRITE_SECURE_SETTINGS
<android.nfc.cardemulation.CardEmulation: CharSequence getDescriptionForPreferredPaymentService()>|android.permission.NFC_PREFERRED_PAYMENT_INFO
<android.telephony.TelephonyManager: int getEmergencyNumberDbVersion()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.provider.Settings.Global: void resetToDefaults(ContentResolver,String)>|android.permission.WRITE_SECURE_SETTINGS
<android.provider.Settings.Config: void resetToDefaults(ContentResolver,int,String)>|android.permission.WRITE_DEVICE_CONFIG
<android.telephony.ims.ProvisioningManager: boolean isRcsVolteSingleRegistrationCapable()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.PERFORM_IMS_SINGLE_REGISTRATION
<android.media.tv.TvInputManager: int getClientPriority(int,String)>|android.permission.TUNER_RESOURCE_ACCESS
<android.print.PrintManager: List<PrintServiceInfo> getPrintServices(int)>|android.permission.READ_PRINT_SERVICES
<android.hardware.SensorPrivacyManager: void setSensorPrivacy(int,int,boolean,int)>|android.permission.MANAGE_SENSOR_PRIVACY
<android.net.NetworkPolicyManager: void unregisterSubscriptionCallback(SubscriptionCallback)>|android.permission.OBSERVE_NETWORK_POLICY
<android.content.ClipboardManager: String getPrimaryClipSource()>|android.permission.SET_CLIP_SOURCE
<android.view.contentcapture.ContentCaptureManager: void setDefaultServiceEnabled(int,boolean)>|android.permission.MANAGE_CONTENT_CAPTURE
<android.companion.virtual.VirtualDeviceManager.VirtualDevice: void close()>|android.permission.CREATE_VIRTUAL_DEVICE
<android.telephony.ims.RegistrationManager: void getRegistrationState(Executor,Consumer<Integer>)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.job.JobScheduler: int scheduleAsPackage(JobInfo,String,int,String)>|android.permission.UPDATE_DEVICE_STATS
<android.hardware.camera2.impl.CameraExtensionSessionImpl: CameraExtensionSessionImpl createCameraExtensionSession(CameraDevice,Context,ExtensionSessionConfiguration,int)>|android.permission.CAMERA
<android.telephony.ims.ProvisioningManager: void setProvisioningStatusForCapability(int,int,boolean)>|android.permission.MODIFY_PHONE_STATE
<android.app.LocaleManager: void setApplicationLocales(String,LocaleList)>|android.permission.CHANGE_CONFIGURATION
<android.media.AudioManager: boolean setAdditionalOutputDeviceDelay(AudioDeviceInfo,long)>|android.permission.MODIFY_AUDIO_ROUTING
<android.app.backup.BackupManager: void setBackupEnabled(boolean)>|android.permission.BACKUP
<android.telephony.ims.ProvisioningManager: void setRcsProvisioningStatusForCapability(int,int,boolean)>|android.permission.MODIFY_PHONE_STATE
<android.service.voice.AlwaysOnHotwordDetector: int setParameter(int,int)>|android.permission.RECORD_AUDIO|android.permission.CAPTURE_AUDIO_HOTWORD
<android.app.WallpaperManager: void setDisplayPadding(Rect)>|android.permission.SET_WALLPAPER_HINTS
<android.app.NotificationManager: void setToastRateLimitingEnabled(boolean)>|android.permission.MANAGE_TOAST_RATE_LIMITING
<android.telecom.TelecomManager: boolean endCall()>|android.permission.ANSWER_PHONE_CALLS
<android.telephony.TelephonyManager: String getLine1Number(int)>|android.permission.READ_PHONE_STATE|android.permission.READ_SMS|android.permission.READ_PHONE_NUMBERS
<android.media.AudioManager: void setMasterMute(boolean,int)>|android.permission.MODIFY_AUDIO_ROUTING
<android.os.UserManager: boolean removeUserEvenWhenDisallowed(int)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.telephony.TelephonyManager: ComponentName getAndUpdateDefaultRespondViaMessageApplication()>|android.permission.INTERACT_ACROSS_USERS
<android.media.AudioManager: boolean setEncodedSurroundMode(int)>|android.permission.WRITE_SETTINGS
<android.app.WallpaperManager: boolean setWallpaperComponent(ComponentName)>|android.permission.SET_WALLPAPER_COMPONENT
<android.telephony.ims.RcsUceAdapter: boolean isUceSettingEnabled()>|android.permission.READ_PHONE_STATE
<android.speech.SpeechRecognizer: void setTemporaryOnDeviceRecognizer(ComponentName)>|android.permission.MANAGE_SPEECH_RECOGNITION
<android.telephony.TelephonyManager: void resetAllCarrierActions()>|android.permission.MODIFY_PHONE_STATE
<android.provider.Settings.Secure: void resetToDefaults(ContentResolver,String)>|android.permission.WRITE_SECURE_SETTINGS
<android.net.NetworkPolicyManager: void notifyStatsProviderLimitReached()>|android.permission.NetworkStack.PERMISSION_MAINLINE_NETWORK_STACK|android.permission.NETWORK_STACK
<android.media.soundtrigger.SoundTriggerManager: ModuleProperties getModuleProperties()>|android.permission.MANAGE_SOUND_TRIGGER
<android.content.pm.CrossProfileApps: void startActivity(ComponentName,UserHandle)>|android.permission.INTERACT_ACROSS_PROFILES|android.permission.START_CROSS_PROFILE_ACTIVITIES
<android.os.UserManager: void setUserAccount(int,String)>|android.permission.INTERACT_ACROSS_USERS_FULL|android.permission.MANAGE_USERS
<android.os.BatteryStatsManager: void reportBluetoothOff(int,int,String)>|android.permission.BLUETOOTH_CONNECT
<android.media.Spatializer: void removeOnHeadTrackingModeChangedListener(OnHeadTrackingModeChangedListener)>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.service.voice.AlwaysOnHotwordDetector: void triggerHardwareRecognitionEventForTest(int,int,boolean,int,int,int,boolean,AudioFormat,byte[],List<KeyphraseRecognitionExtra>)>|android.permission.RECORD_AUDIO|android.permission.CAPTURE_AUDIO_HOTWORD
<android.permission.PermissionManager: Set<String> getAutoRevokeExemptionRequestedPackages()>|android.permission.ADJUST_RUNTIME_PERMISSIONS_POLICY
<android.hardware.face.FaceManager: void generateChallenge(int,int,GenerateChallengeCallback)>|android.permission.MANAGE_BIOMETRIC
<android.telephony.TelephonyManager: int getNetworkSelectionMode()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.app.VrManager: int getVr2dDisplayId()>|android.permission.RESTRICTED_VR_ACCESS
<android.provider.DeviceConfig: void setSyncDisabledMode(int)>|android.permission.WRITE_DEVICE_CONFIG
<android.hardware.biometrics.BiometricManager.Strings: CharSequence getButtonLabel()>|android.permission.USE_BIOMETRIC
<android.media.Spatializer: void setOnSpatializerOutputChangedListener(Executor,OnSpatializerOutputChangedListener)>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.telephony.ims.ImsMmTelManager: boolean isVoWiFiRoamingSettingEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.location.LocationManager: void setExtraLocationControllerPackage(String)>|android.permission.LOCATION_HARDWARE
<android.location.LocationManager: void requestLocationUpdates(LocationRequest,Executor,LocationListener)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.telephony.ims.ImsMmTelManager: void setVoWiFiNonPersistent(boolean,int)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: NetworkScan requestNetworkScan(int,NetworkScanRequest,Executor,NetworkScanCallback)>|android.permission.MODIFY_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<android.window.TaskOrganizer: void restartTaskTopActivityProcessIfVisible(WindowContainerToken)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.app.backup.BackupManager: void updateTransportAttributes(ComponentName,String,Intent,String,Intent,String)>|android.permission.BACKUP
<android.app.Activity: void startActivityForResultAsUser(Intent,int,Bundle,UserHandle)>|android.permission.INTERACT_ACROSS_USERS|android.permission.INTERACT_ACROSS_USERS_FULL
<android.companion.CompanionDeviceManager: List<AssociationInfo> getAllAssociations()>|android.permission.MANAGE_COMPANION_DEVICES
<android.hardware.radio.RadioManager: int listModules(List<ModuleProperties>)>|android.permission.ACCESS_BROADCAST_RADIO
<android.hardware.display.DisplayManager: void setSaturationLevel(float)>|android.permission.CONTROL_DISPLAY_SATURATION
<android.app.ActivityOptions: ActivityOptions makeCustomTaskAnimation(Context,int,int,Handler,OnAnimationStartedListener,OnAnimationFinishedListener)>|android.permission.START_TASKS_FROM_RECENTS
<android.telephony.TelephonyRegistryManager: void notifyCallStateChangedForAllSubscriptions(int,String)>|android.permission.MODIFY_PHONE_STATE
<android.media.AudioManager: int getDeviceVolumeBehavior(AudioDeviceAttributes)>|android.permission.MODIFY_AUDIO_ROUTING|android.permission.QUERY_AUDIO_STATE
<android.foo.IColorService: void red()>|android.permission.RED
<android.telephony.ims.ProvisioningManager: boolean getProvisioningStatusForCapability(int,int)>|android.permission.READ_PRECISE_PHONE_STATE
<android.app.KeyguardManager: boolean setLock(int,byte[],int)>|android.permission.SET_INITIAL_LOCK
<android.os.UserManager: String getUserAccount(int)>|android.permission.INTERACT_ACROSS_USERS_FULL|android.permission.MANAGE_USERS
<android.content.pm.verify.domain.DomainVerificationManager: int setDomainVerificationStatus(UUID,Set<String>,int)>|android.permission.DOMAIN_VERIFICATION_AGENT
<android.app.AppOpsManager: void startWatchingMode(int,String,int,OnOpChangedListener)>|android.permission.WATCH_APPOPS
<android.service.persistentdata.PersistentDataBlockManager: boolean getOemUnlockEnabled()>|android.permission.READ_OEM_UNLOCK_STATE|android.permission.OEM_UNLOCK_STATE
<android.media.voice.KeyphraseModelManager: KeyphraseSoundModel getKeyphraseSoundModel(int,Locale)>|android.permission.MANAGE_VOICE_KEYPHRASES
<android.service.persistentdata.PersistentDataBlockManager: int getDataBlockSize()>|android.permission.ACCESS_PDB_STATE
<android.media.soundtrigger.SoundTriggerManager: void deleteModel(UUID)>|android.permission.MANAGE_SOUND_TRIGGER
<android.os.BatteryStatsManager: void reportBleScanStopped(WorkSource,boolean)>|android.permission.UPDATE_DEVICE_STATS
<android.provider.ContactsContract.Settings: void setDefaultAccount(ContentResolver,Account)>|android.permission.SET_DEFAULT_ACCOUNT_FOR_CONTACTS
<android.hardware.usb.UsbManager: void resetUsbPort(UsbPort,int,IUsbOperationInternal)>|android.permission.MANAGE_USB
<android.media.MediaRouter2: MediaRouter2 getInstance(Context,String)>|android.permission.MEDIA_CONTENT_CONTROL
<android.telephony.SmsManager: String getSmscAddress()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.content.Context: void sendStickyBroadcastAsUser(Intent,UserHandle,Bundle)>|android.permission.INTERACT_ACROSS_USERS|android.permission.BROADCAST_STICKY
<android.hardware.biometrics.BiometricTestSession: void setTestHalEnabled(boolean)>|android.permission.TEST_BIOMETRIC
<android.location.LocationManager: void setAutomotiveGnssSuspended(boolean)>|android.permission.CONTROL_AUTOMOTIVE_GNSS
<android.telephony.TelephonyManager: PinResult setIccLockEnabled(boolean,String)>|android.permission.MODIFY_PHONE_STATE
<android.window.TaskOrganizer: void updateCameraCompatControlState(WindowContainerToken,int)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.telephony.SubscriptionManager: void setCarrierPhoneNumber(int,String)>|android.permission."carrier privileges"
<android.media.AudioManager: List<AudioDeviceAttributes> getPreferredDevicesForCapturePreset(int)>|android.permission.MODIFY_AUDIO_ROUTING
<android.permission.PermissionManager: void startOneTimePermissionSession(String,long,long,int,int)>|android.permission.MANAGE_ONE_TIME_PERMISSION_SESSIONS
<android.app.time.TimeManager: boolean updateTimeZoneConfiguration(TimeZoneConfiguration)>|android.permission.MANAGE_TIME_AND_ZONE_DETECTION
<android.telephony.SubscriptionManager: List<SubscriptionInfo> getOpportunisticSubscriptions()>|android.permission.READ_PHONE_STATE
<android.hardware.biometrics.BiometricManager: int canAuthenticate(int)>|android.permission.USE_BIOMETRIC
<android.telephony.TelephonyManager: String[] getForbiddenPlmns()>|android.permission.READ_PHONE_STATE
<android.telephony.euicc.EuiccManager: List<String> getSupportedCountries()>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.app.timedetector.TimeDetector: void suggestNetworkTime(NetworkTimeSuggestion)>|android.permission.SET_TIME
<android.app.ActivityManager: boolean updateMccMncConfiguration(String,String)>|android.permission.CHANGE_CONFIGURATION
<android.net.vcn.VcnManager: VcnUnderlyingNetworkPolicy getUnderlyingNetworkPolicy(NetworkCapabilities,LinkProperties)>|android.permission.NETWORK_FACTORY
<android.hardware.soundtrigger.SoundTrigger: SoundTriggerModule attachModuleAsMiddleman(int,StatusListener,Handler,Identity,Identity)>|android.permission.SOUNDTRIGGER_DELEGATE_IDENTITY
<android.hardware.location.ContextHubManager: ContextHubTransaction<Void> disableNanoApp(ContextHubInfo,long)>|android.permission.ACCESS_CONTEXT_HUB
<android.window.DisplayAreaOrganizer: IDisplayAreaOrganizerController getController()>|android.permission.MANAGE_ACTIVITY_TASKS
<android.telephony.TelephonyManager: void getNetworkSlicingConfiguration(Executor,OutcomeReceiver<NetworkSlicingConfig, NetworkSlicingException>)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: int setForbiddenPlmns(List<String>)>|android.permission.MODIFY_PHONE_STATE
<android.media.tv.TvInputManager: boolean isSingleSessionActive()>|android.permission.CAPTURE_TV_INPUT
<android.os.PowerManager: boolean setAdaptivePowerSavePolicy(BatterySaverPolicyConfig)>|android.permission.DEVICE_POWER|android.permission.POWER_SAVER
<android.telephony.PhoneStateListener: void onPreciseCallStateChanged(PreciseCallState)>|android.permission.READ_PRECISE_PHONE_STATE
<android.hardware.location.ContextHubManager: ContextHubClient createClient(ContextHubInfo,PendingIntent,long)>|android.permission.ACCESS_CONTEXT_HUB
<android.os.UserManager: String getSeedAccountType()>|android.permission.MANAGE_USERS
<android.provider.Settings.Config: String getString(ContentResolver,String)>|android.permission.READ_DEVICE_CONFIG
<android.app.admin.DevicePolicyManager: void setProfileOwnerOnOrganizationOwnedDevice(ComponentName,boolean)>|android.permission.MARK_DEVICE_ORGANIZATION_OWNED|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.content.pm.PackageInstaller.SessionParams: void setDataLoaderParams(DataLoaderParams)>|android.permission.INSTALL_PACKAGES|android.permission.USE_INSTALLER_V2
<android.telephony.TelephonyManager: void setSimPowerState(int,Executor,Consumer<Integer>)>|android.permission.MODIFY_PHONE_STATE
<android.companion.CompanionDeviceManager: void stopObservingDevicePresence(String)>|android.permission.REQUEST_OBSERVE_COMPANION_DEVICE_PRESENCE
<android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints()>|android.permission.USE_FINGERPRINT
<android.view.accessibility.AccessibilityManager: void registerSystemAction(RemoteAction,int)>|android.permission.MANAGE_ACCESSIBILITY
<android.content.ContentResolver: void putCache(Uri,Bundle)>|android.permission.CACHE_CONTENT
<android.app.AppOpsManager: void startWatchingMode(int,String,OnOpChangedListener)>|android.permission.WATCH_APPOPS
<android.telephony.TelephonyManager: boolean isModemEnabledForSlot(int)>|android.permission.READ_PHONE_STATE|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.ims.ImsMmTelManager: void unregisterImsRegistrationCallback(RegistrationCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.app.admin.DevicePolicyResourcesManager: void setDrawables(Set<DevicePolicyDrawableResource>)>|android.permission.UPDATE_DEVICE_MANAGEMENT_RESOURCES
<android.os.Vibrator: void vibrate(VibrationEffect,AudioAttributes)>|android.permission.VIBRATE
<android.telephony.TelephonyManager: int getDataNetworkType()>|android.permission.READ_PHONE_STATE|android.permission.READ_BASIC_PHONE_STATE
<android.os.IncidentManager: void reportIncident(IncidentReportArgs)>|android.permission.DUMP|android.permission.PACKAGE_USAGE_STATS
<android.os.Vibrator: void vibrate(VibrationEffect,VibrationAttributes)>|android.permission.VIBRATE
<android.telephony.TelephonyManager: void getCallForwarding(int,Executor,CallForwardingInfoCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.timedetector.TimeDetector: void suggestGnssTime(GnssTimeSuggestion)>|android.permission.SET_TIME
<android.telephony.TelephonyManager: boolean isRadioOn()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PHONE_STATE
<android.media.MediaCodec: MediaCodec createByCodecNameForClient(String,int,int)>|android.permission.MEDIA_RESOURCE_OVERRIDE_PID
<android.os.UserManager: boolean isUserUnlockingOrUnlocked(int)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<com.android.server.power.PowerManagerService.BinderService: void forceLowPowerStandbyActive(boolean)>|android.permission.MANAGE_LOW_POWER_STANDBY|android.permission.DEVICE_POWER
<android.app.KeyguardManager: boolean unregisterWeakEscrowTokenRemovedListener(WeakEscrowTokenRemovedListener)>|android.permission.MANAGE_WEAK_ESCROW_TOKEN
<android.telephony.TelephonyCallback.ImsCallDisconnectCauseListener: void onImsCallDisconnectCauseChanged(ImsReasonInfo)>|android.permission.READ_PRECISE_PHONE_STATE
<android.hardware.usb.UsbManager: void resetUsbGadget()>|android.permission.MANAGE_USB
<android.hardware.usb.UsbManager: List<UsbPort> getPorts()>|android.permission.MANAGE_USB
<android.media.MediaRouter2: void transfer(RoutingController,MediaRoute2Info)>|android.permission.MEDIA_CONTENT_CONTROL
<android.hardware.biometrics.BiometricPrompt: long authenticateForOperation(CancellationSignal,Executor,AuthenticationCallback,long)>|android.permission.USE_BIOMETRIC
<android.os.UserManager: boolean hasUserRestrictionForUser(String,UserHandle)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.service.oemlock.OemLockManager: String getLockName()>|android.permission.MANAGE_CARRIER_OEM_UNLOCK_STATE
<android.hardware.SensorPrivacyManager: void addSensorPrivacyListener(int,int,OnSensorPrivacyChangedListener)>|android.permission.OBSERVE_SENSOR_PRIVACY
<android.telephony.ims.ProvisioningManager: String getProvisioningStringValue(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.location.ContextHubManager: int[] getContextHubHandles()>|android.permission.ACCESS_CONTEXT_HUB
<android.telephony.TelephonyManager: void setCallWaitingEnabled(boolean,Executor,Consumer<Integer>)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.soundtrigger.SoundTrigger: int listModulesAsOriginator(ArrayList<ModuleProperties>,Identity)>|android.permission.RECORD_AUDIO|android.permission.CAPTURE_AUDIO_HOTWORD
<android.media.AudioManager: long getFadeOutDurationOnFocusLossMillis(AudioAttributes)>|android.permission."android.permission.QUERY_AUDIO_STATE"
<android.app.time.TimeManager: TimeCapabilitiesAndConfig getTimeCapabilitiesAndConfig()>|android.permission.MANAGE_TIME_AND_ZONE_DETECTION
<android.hardware.face.FaceManager: void enrollRemotely(int,byte[],CancellationSignal,EnrollmentCallback,int[])>|android.permission.MANAGE_BIOMETRIC
<android.hardware.face.FaceManager: void remove(Face,int,RemovalCallback)>|android.permission.MANAGE_BIOMETRIC
<com.android.server.companion.virtual.audio.VirtualAudioController: void onRecordingConfigChanged(List<AudioRecordingConfiguration>)>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.TelephonyManager: String[] getIsimImpu()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: String iccTransmitApduLogicalChannelByPort(int,int,int,int,int,int,int,int,String)>|android.permission.MODIFY_PHONE_STATE
<android.app.usage.UsageStatsManager: void registerAppUsageLimitObserver(int,String[],Duration,Duration,PendingIntent)>|android.permission.SUSPEND_APPS|android.permission.OBSERVE_APP_USAGE
<android.telephony.TelephonyManager: void rebootModem()>|android.permission.MODIFY_PHONE_STATE
<android.telephony.ims.ImsMmTelManager: void setVoWiFiSettingEnabled(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.os.SystemUpdateManager: Bundle retrieveSystemUpdateInfo()>|android.permission.READ_SYSTEM_UPDATE_INFO|android.permission.RECOVERY
<android.telephony.TelephonyManager: CarrierRestrictionRules getCarrierRestrictionRules()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.location.LocationManager: void getCurrentLocation(String,LocationRequest,CancellationSignal,Executor,Consumer<Location>)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.content.om.OverlayManager: void invalidateCachesForOverlay(String,UserHandle)>|android.permission."android.permission.INTERACT_ACROSS_USERS"
<android.hardware.fingerprint.FingerprintManager: void revokeChallenge(int,long)>|android.permission.MANAGE_FINGERPRINT
<android.location.LocationManager: boolean isProviderPackage(String,String,String)>|android.permission.READ_DEVICE_CONFIG
<android.service.voice.AlwaysOnHotwordDetector: boolean stopRecognition()>|android.permission.RECORD_AUDIO|android.permission.CAPTURE_AUDIO_HOTWORD
<android.os.UserManager: boolean isUserRunningOrStopping(UserHandle)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.hardware.fingerprint.FingerprintManager: void onPointerDown(long,int,int,int,float,float)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.apphibernation.AppHibernationManager: List<String> getHibernatingPackagesForUser()>|android.permission.MANAGE_APP_HIBERNATION
<android.telecom.TelecomManager: boolean isInEmergencyCall()>|android.permission.MODIFY_PHONE_STATE
<android.view.Window: void setHideOverlayWindows(boolean)>|android.permission.HIDE_OVERLAY_WINDOWS
<android.content.Context: void removeStickyBroadcastAsUser(Intent,UserHandle)>|android.permission.INTERACT_ACROSS_USERS|android.permission.BROADCAST_STICKY
<android.hardware.location.ContextHubManager: ContextHubTransaction<Void> enableNanoApp(ContextHubInfo,long)>|android.permission.ACCESS_CONTEXT_HUB
<android.os.Vibrator: void vibrate(int,String,VibrationEffect,String,VibrationAttributes)>|android.permission.VIBRATE
<android.telephony.TelephonyCallback.PhysicalChannelConfigListener: void onPhysicalChannelConfigChanged(List<PhysicalChannelConfig>)>|android.permission.READ_PRECISE_PHONE_STATE
<android.media.AudioManager: boolean setPreferredDeviceForCapturePreset(int,AudioDeviceAttributes)>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.TelephonyManager: void setCdmaSubscriptionMode(int)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: boolean isInEmergencySmsMode()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.SensorPrivacyManager: void setSensorPrivacy(int,int,boolean)>|android.permission.MANAGE_SENSOR_PRIVACY
<android.telephony.ims.RegistrationManager: void getRegistrationTransportType(Executor,Consumer<Integer>)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.ActivityManager: void scheduleApplicationInfoChanged(List<String>,int)>|android.permission.CHANGE_CONFIGURATION
<android.app.VrManager: void setVrInputMethod(ComponentName)>|android.permission.RESTRICTED_VR_ACCESS
<android.hardware.location.ContextHubManager: NanoAppInstanceInfo getNanoAppInstanceInfo(int)>|android.permission.ACCESS_CONTEXT_HUB
<android.hardware.hdmi.HdmiControlManager: List<String> getAllowedCecSettingStringValues(String)>|android.permission.HDMI_CEC
<android.app.StatusBarManager: void setDisabledForSetup(boolean)>|android.permission.STATUS_BAR
<android.telephony.TelephonyManager: String getLine1Number()>|android.permission.READ_PHONE_STATE|android.permission.READ_SMS|android.permission.READ_PHONE_NUMBERS
<android.permission.PermissionManager: Set<String> getAutoRevokeExemptionGrantedPackages()>|android.permission.ADJUST_RUNTIME_PERMISSIONS_POLICY
<android.media.Spatializer: void setGlobalTransform(float[])>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.os.DeviceIdleManager: void endIdle(String)>|android.permission.DEVICE_POWER
<android.telephony.TelephonyManager: List<String> getCarrierPrivilegedPackagesForAllActiveSubscriptions()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.fingerprint.FingerprintManager: BiometricTestSession createTestSession(int)>|android.permission.TEST_BIOMETRIC
<android.content.pm.PackageManager: void updatePermissionFlags(String,String,int,int,UserHandle)>|android.permission.GRANT_RUNTIME_PERMISSIONS|android.permission.REVOKE_RUNTIME_PERMISSIONS
<android.telephony.TelephonyManager: int[] supplyPukReportResult(String,String)>|android.permission.MODIFY_PHONE_STATE
<android.content.pm.PackageInstaller.Session: void commitTransferred(IntentSender)>|android.permission.INSTALL_PACKAGES
<android.app.ActivityManager: void setStopUserOnSwitch(int)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.os.PowerWhitelistManager: void addToWhitelist(List<String>)>|android.permission.DEVICE_POWER
<android.telephony.ims.ImsRcsManager: void removeOnAvailabilityChangedListener(OnAvailabilityChangedListener)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.permission.PermissionManager: int checkPermissionForDataDelivery(String,AttributionSource,String)>|android.permission.UPDATE_APP_OPS_STATS
<android.media.tv.TvInputManager.TvInputCallback: void onCurrentTunedInfosUpdated(List<TunedInfo>)>|android.permission.ACCESS_TUNED_INFO
<android.telephony.euicc.EuiccManager: void eraseSubscriptions(int,PendingIntent)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.os.BatteryStatsManager: WifiBatteryStats getWifiBatteryStats()>|android.permission.BATTERY_STATS|android.permission.UPDATE_DEVICE_STATS
<android.os.UserManager: boolean canAddMoreUsers()>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.view.SurfaceControlHdrLayerInfoListener: void unregister(IBinder)>|android.permission.CONTROL_DISPLAY_BRIGHTNESS
<android.telephony.TelephonyManager: String getIsimIst()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.ActivityManager: void resetAppErrors()>|android.permission.RESET_APP_ERRORS
<android.net.NetworkPolicyManager: int getRestrictBackgroundStatus(int)>|android.permission.NetworkStack.PERMISSION_MAINLINE_NETWORK_STACK
<android.security.keystore.recovery.RecoveryController: Key generateKey(String)>|android.permission.RECOVER_KEYSTORE
<android.app.WallpaperManager: void clear(int)>|android.permission.SET_WALLPAPER
<android.media.soundtrigger.SoundTriggerManager: void updateModel(Model)>|android.permission.MANAGE_SOUND_TRIGGER
<android.permission.LegacyPermissionManager: void grantDefaultPermissionsToEnabledImsServices(String[],UserHandle,Executor,Consumer<Boolean>)>|android.permission.GRANT_RUNTIME_PERMISSIONS_TO_TELEPHONY_DEFAULTS
<android.os.Vibrator: void vibrate(long,AudioAttributes)>|android.permission.VIBRATE
<android.nfc.NfcAdapter: boolean disable(boolean)>|android.permission.WRITE_SECURE_SETTINGS
<android.location.LocationManager: boolean injectLocation(Location)>|android.permission.LOCATION_HARDWARE|android.permission.ACCESS_FINE_LOCATION
<android.os.UserManager: boolean canAddMoreProfilesToUser(String,int)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.telephony.SmsManager: void getSmsMessagesForFinancialApp(Bundle,Executor,FinancialSmsCallback)>|android.permission.SMS_FINANCIAL_TRANSACTIONS
<android.hardware.SensorPrivacyManager: void setSensorPrivacyForProfileGroup(int,int,boolean)>|android.permission.MANAGE_SENSOR_PRIVACY
<android.telephony.TelephonyManager: void setDataRoamingEnabled(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.provider.Settings.Config: void setSyncDisabledMode(ContentResolver,int)>|android.permission.WRITE_DEVICE_CONFIG
<com.android.server.power.PowerManagerService.BinderService: void setLowPowerStandbyEnabled(boolean)>|android.permission.MANAGE_LOW_POWER_STANDBY|android.permission.DEVICE_POWER
<android.app.ActivityManager: void setPersistentVrThread(int)>|android.permission.RESTRICTED_VR_ACCESS
<android.window.WindowOrganizer: void applyTransaction(WindowContainerTransaction)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.os.BatteryStatsManager: BluetoothBatteryStats getBluetoothBatteryStats()>|android.permission.BATTERY_STATS
<android.telephony.SmsManager: boolean deleteMessageFromIcc(int)>|android.permission.ACCESS_MESSAGES_ON_ICC
<android.hardware.SensorPrivacyManager: boolean isAllSensorPrivacyEnabled()>|android.permission.OBSERVE_SENSOR_PRIVACY
<android.content.pm.PackageInstaller: void uninstallExistingPackage(String,IntentSender)>|android.permission.DELETE_PACKAGES
<android.location.LocationRequest.Builder: Builder setAdasGnssBypass(boolean)>|android.permission.LOCATION_BYPASS
<android.media.AudioManager: void setSupportedSystemUsages(int[])>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.ims.RcsUceAdapter: void addOnPublishStateChangedListener(Executor,OnPublishStateChangedListener)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.content.Context: ComponentName startServiceAsUser(Intent,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.app.BroadcastOptions: void setBackgroundActivityStartsAllowed(boolean)>|android.permission.START_ACTIVITIES_FROM_BACKGROUND
<android.telephony.euicc.EuiccManager: void getDownloadableSubscriptionMetadata(DownloadableSubscription,PendingIntent)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.view.accessibility.AccessibilityManager: List<String> getAccessibilityShortcutTargets(int)>|android.permission.MANAGE_ACCESSIBILITY
<android.hardware.hdmi.HdmiControlManager: void removeHdmiCecVolumeControlFeatureListener(HdmiCecVolumeControlFeatureListener)>|android.permission.HDMI_CEC
<android.telecom.TelecomManager: Uri getAdnUriForPhoneAccount(PhoneAccountHandle)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.display.ColorDisplayManager: boolean setNightDisplayActivated(boolean)>|android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS
<android.app.admin.DevicePolicyManager: void setProfileOwnerCanAccessDeviceIds(ComponentName)>|android.permission.GRANT_PROFILE_OWNER_DEVICE_IDS_ACCESS
<android.telephony.TelephonyManager: int getCallComposerStatus()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: void requestCellInfoUpdate(WorkSource,Executor,CellInfoCallback)>|android.permission.ACCESS_FINE_LOCATION|android.permission.MODIFY_PHONE_STATE
<android.os.UserManager: void setUserRestriction(String,boolean)>|android.permission.MANAGE_USERS
<android.hardware.location.ContextHubManager: ContextHubTransaction<Void> loadNanoApp(ContextHubInfo,NanoAppBinary)>|android.permission.ACCESS_CONTEXT_HUB
<android.content.pm.verify.domain.DomainVerificationManager: SortedSet<DomainOwner> getOwnersForDomain(String)>|android.permission.UPDATE_DOMAIN_VERIFICATION_USER_SELECTION
<android.view.Display: void clearUserPreferredDisplayMode()>|android.permission.MODIFY_USER_PREFERRED_DISPLAY_MODE
<android.apphibernation.AppHibernationManager: Map<String, HibernationStats> getHibernationStatsForUser()>|android.permission.MANAGE_APP_HIBERNATION
<android.hardware.SensorPrivacyManager: void removeAllSensorPrivacyListener(OnAllSensorPrivacyChangedListener)>|android.permission.OBSERVE_SENSOR_PRIVACY
<android.service.oemlock.OemLockManager: void setOemUnlockAllowedByUser(boolean)>|android.permission.MANAGE_USER_OEM_UNLOCK_STATE
<android.telephony.SmsMessage: byte[] getSubmitPduEncodedMessage(boolean,String,String,int,int,int,int,int,int)>|android.permission.BLUETOOTH_PRIVILEGED
<android.telephony.ims.ProvisioningManager: void registerRcsProvisioningCallback(Executor,RcsProvisioningCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.PERFORM_IMS_SINGLE_REGISTRATION
<android.media.soundtrigger.SoundTriggerManager: SoundTriggerDetector createSoundTriggerDetector(UUID,Callback,Handler)>|android.permission.MANAGE_SOUND_TRIGGER
<android.telephony.TelephonyManager: void enableVideoCalling(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.app.usage.StorageStatsManager: Collection<CrateInfo> queryCratesForUser(UUID,UserHandle)>|android.permission.MANAGE_CRATES
<android.content.pm.PackageInstaller.Session: void addFile(int,String,long,byte[],byte[])>|android.permission.USE_INSTALLER_V2
<android.telephony.TelephonyManager: void clearSignalStrengthUpdateRequest(SignalStrengthUpdateRequest)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.hdmi.HdmiControlManager: String getPowerStateChangeOnActiveSourceLost()>|android.permission.HDMI_CEC
<android.media.tv.TvInputManager: void notifyWatchNextProgramBrowsableDisabled(String,long)>|android.permission.NOTIFY_TV_INPUTS
<android.location.LocationManager: void requestLocationUpdates(String,long,float,PendingIntent)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.hardware.biometrics.BiometricPrompt: void authenticateUser(CancellationSignal,Executor,AuthenticationCallback,int)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.hardware.usb.UsbPort: void resetUsbPort(Executor,Consumer<Integer>)>|android.permission.MANAGE_USB
<android.media.AudioManager: boolean isUltrasoundSupported()>|android.permission.ACCESS_ULTRASOUND
<android.permission.LegacyPermissionManager: void grantDefaultPermissionsToEnabledCarrierApps(String[],UserHandle,Executor,Consumer<Boolean>)>|android.permission.GRANT_RUNTIME_PERMISSIONS_TO_TELEPHONY_DEFAULTS
<android.content.pm.PackageManager: List<SharedLibraryInfo> getDeclaredSharedLibraries(String,int)>|android.permission.ACCESS_SHARED_LIBRARIES
<android.telephony.euicc.EuiccManager: void getDefaultDownloadableSubscriptionList(PendingIntent)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.app.admin.DevicePolicyManager: ComponentName getProfileOwnerAsUser(UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.content.ContentProviderClient: void setDetectNotResponding(long)>|android.permission.REMOVE_TASKS
<android.app.AppOpsManager: void setUidMode(int,int,int)>|android.permission.MANAGE_APP_OPS_MODES
<android.app.timedetector.TimeDetector: void suggestTelephonyTime(TelephonyTimeSuggestion)>|android.permission.SUGGEST_TELEPHONY_TIME_AND_ZONE
<android.telephony.TelephonyManager: String getVoiceMailAlphaTag(int)>|android.permission.READ_PHONE_STATE
<android.media.tv.tuner.Tuner: Descrambler openDescrambler()>|android.permission.ACCESS_TV_DESCRAMBLER
<android.app.GameManager: void notifyGraphicsEnvironmentSetup()>|android.permission.MANAGE_GAME_MODE
<android.os.RecoverySystem: void installPackage(Context,File)>|android.permission.RECOVERY
<android.telephony.ims.RcsUceAdapter: int getUcePublishState()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyCallback.CallStateListener: void onCallStateChanged(int)>|android.permission.READ_PHONE_STATE
<android.media.Spatializer: void setHeadTrackerEnabled(boolean,AudioDeviceAttributes)>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.media.AudioManager: boolean setSurroundFormatEnabled(int,boolean)>|android.permission.WRITE_SETTINGS
<android.app.ActivityTaskManager: void resizeTask(int,Rect)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.os.PowerWhitelistManager: void addToWhitelist(String)>|android.permission.DEVICE_POWER
<android.os.UserManager: boolean isPrimaryUser()>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.telecom.TelecomManager: void enablePhoneAccount(PhoneAccountHandle,boolean)>|android.permission.MODIFY_PHONE_STATE
<android.app.usage.UsageStatsManager: int getAppMinStandbyBucket(String)>|android.permission.PACKAGE_USAGE_STATS
<android.hardware.usb.UsbPort: int enableUsbDataWhileDocked()>|android.permission.MANAGE_USB
<android.media.AudioManager: void addOnPreferredDevicesForCapturePresetChangedListener(Executor,OnPreferredDevicesForCapturePresetChangedListener)>|android.permission.MODIFY_AUDIO_ROUTING
<android.media.AudioTrack.Builder: Builder setTunerConfiguration(TunerConfiguration)>|android.permission.MODIFY_AUDIO_ROUTING
<android.hardware.SensorPrivacyManager: void setAllSensorPrivacy(boolean)>|android.permission.MANAGE_SENSOR_PRIVACY
<android.hardware.display.ColorDisplayManager: int getNightDisplayAutoMode()>|android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS
<android.app.ActivityManager: int getBackgroundRestrictionExemptionReason(int)>|android.permission.DEVICE_POWER
<android.telecom.TelecomManager: boolean isInCall()>|android.permission.READ_PHONE_STATE
<android.app.ActivityManager: void addOnUidImportanceListener(OnUidImportanceListener,int)>|android.permission.PACKAGE_USAGE_STATS
<android.app.AppOpsManager: void setHistoryParameters(int,long,int)>|android.permission.MANAGE_APPOPS
<android.window.WindowOrganizer: void registerTransitionPlayer(ITransitionPlayer)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.telephony.TelephonyManager: int getPreferredNetworkType(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.image.DynamicSystemManager: boolean isInUse()>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.telephony.TelephonyManager: String getCdmaEriText(int)>|android.permission.READ_PHONE_STATE
<android.app.backup.BackupManager: void setAncestralSerialNumber(long)>|android.permission.BACKUP
<android.telephony.ServiceState: String getDataOperatorAlphaShort()>|android.permission.ACCESS_FINE_LOCATION|android.permission.ACCESS_COARSE_LOCATION
<android.app.admin.DevicePolicyManager: void setNextOperationSafety(int,int)>|android.permission.MANAGE_DEVICE_ADMINS
<android.os.UserManager: boolean isUserTypeEnabled(String)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.nfc.NfcAdapter: boolean addNfcUnlockHandler(NfcUnlockHandler,String[])>|android.permission.WRITE_SECURE_SETTINGS
<android.app.WallpaperManager: int setResource(int,int)>|android.permission.SET_WALLPAPER
<android.app.AppOpsManager: PackageOps> getOpsForPackage(int,String,String)>|android.permission.GET_APP_OPS_STATS
<android.app.backup.BackupManager: boolean isBackupServiceActive(UserHandle)>|android.permission.BACKUP
<android.net.NetworkPolicyManager: boolean isUidNetworkingBlocked(int,boolean)>|android.permission.OBSERVE_NETWORK_POLICY
<android.location.LocationManager: void requestLocationUpdates(String,long,float,LocationListener,Looper)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.os.UserManager: String getUserType()>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.telephony.ims.SipDelegateManager: void triggerFullNetworkRegistration(SipDelegateConnection,int,String)>|android.permission.PERFORM_IMS_SINGLE_REGISTRATION
<android.content.rollback.RollbackManager: List<RollbackInfo> getRecentlyCommittedRollbacks()>|android.permission.MANAGE_ROLLBACKS|android.permission.TEST_MANAGE_ROLLBACKS
<android.hardware.face.FaceManager: void resetLockout(int,int,byte[])>|android.permission.USE_BIOMETRIC_INTERNAL
<android.telephony.ims.SipDelegateManager: boolean isSupported()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.PERFORM_IMS_SINGLE_REGISTRATION
<android.os.UserManager: boolean canSwitchUsers()>|android.permission.READ_PHONE_STATE|android.permission.// Can be INTERACT_ACROSS_USERS instead.
MANAGE_USERS
<android.app.admin.DevicePolicyResourcesManager: void resetDrawables(Set<String>)>|android.permission.UPDATE_DEVICE_MANAGEMENT_RESOURCES
<android.media.tv.TvInputManager: Hardware acquireTvInputHardware(int,TvInputInfo,String,int,Executor,HardwareCallback)>|android.permission.TV_INPUT_HARDWARE
<android.app.usage.UsageStatsManager: String getAppStandbyConstant(String)>|android.permission.READ_DEVICE_CONFIG
<android.telephony.TelephonyManager: int setCarrierRestrictionRules(CarrierRestrictionRules)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.face.FaceManager: void getFeature(int,int,GetFeatureCallback)>|android.permission.MANAGE_BIOMETRIC
<android.telecom.TelecomManager: boolean isRinging()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PHONE_STATE
<android.app.UiModeManager: Set<String> getProjectingPackages(int)>|android.permission.READ_PROJECTION_STATE
<android.app.AppOpsManager: void getHistoricalOps(HistoricalOpsRequest,Executor,Consumer<HistoricalOps>)>|android.permission.GET_APP_OPS_STATS
<android.view.accessibility.CaptioningManager: void setSystemAudioCaptioningEnabled(boolean)>|android.permission.SET_SYSTEM_AUDIO_CAPTION
<android.telephony.TelephonyManager: String getVoiceMailNumber(int)>|android.permission.READ_PHONE_STATE
<android.provider.DeviceConfig: void addOnPropertiesChangedListener(String,Executor,OnPropertiesChangedListener)>|android.permission.READ_DEVICE_CONFIG
<android.content.pm.ShortcutManager: List<ShareShortcutInfo> getShareTargets(IntentFilter)>|android.permission.MANAGE_APP_PREDICTIONS
<android.app.admin.DevicePolicyManager: boolean isDeviceProvisioningConfigApplied()>|android.permission.MANAGE_USERS
<android.telephony.TelephonyManager: boolean isOffhook()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PHONE_STATE
<android.location.LocationRequest: LocationRequest setLocationSettingsIgnored(boolean)>|android.permission.LOCATION_BYPASS
<android.os.UserManager: long[] getSerialNumbersOfUsers(boolean)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.telephony.TelephonyManager: String getImei(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.permission.PermissionManager: void grantRuntimePermission(String,String,UserHandle)>|android.permission.GRANT_RUNTIME_PERMISSIONS
<android.hardware.devicestate.DeviceStateManager: void cancelStateRequest()>|android.permission.CONTROL_DEVICE_STATE
<android.app.admin.DevicePolicyManager: void resetDefaultCrossProfileIntentFilters(int)>|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.app.VrManager: void setPersistentVrModeEnabled(boolean)>|android.permission.RESTRICTED_VR_ACCESS
<android.media.AudioManager: void unregisterAudioPolicy(AudioPolicy)>|android.permission.MODIFY_AUDIO_ROUTING
<android.hardware.face.FaceManager: void authenticate(CryptoObject,CancellationSignal,AuthenticationCallback,Handler,int,boolean)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.telephony.TelephonyManager: boolean iccCloseLogicalChannelBySlot(int,int)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: boolean handlePinMmiForSubscriber(int,String)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.SensorPrivacyManager: void setSensorPrivacy(int,boolean)>|android.permission.MANAGE_SENSOR_PRIVACY
<android.telecom.Conference: void setCallDirection(int)>|android.permission.MODIFY_PHONE_STATE
<android.telecom.Conference: void setConferenceState(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.nfc.cardemulation.CardEmulation: boolean setOffHostForService(ComponentName,String)>|android.permission.NFC
<android.telephony.TelephonyManager: int[] supplyPinReportResult(String)>|android.permission.MODIFY_PHONE_STATE
<android.content.pm.CrossProfileApps: void resetInteractAcrossProfilesAppOps(Collection<String>,Set<String>)>|android.permission.CONFIGURE_INTERACT_ACROSS_PROFILES|android.permission.INTERACT_ACROSS_USERS
<android.location.LocationManager: void setExtraLocationControllerPackageEnabled(boolean)>|android.permission.LOCATION_HARDWARE
<android.hardware.hdmi.HdmiControlManager: int getHdmiCecVolumeControlEnabled()>|android.permission.HDMI_CEC
<android.media.musicrecognition.MusicRecognitionManager: void beginStreamingSearch(RecognitionRequest,Executor,RecognitionCallback)>|android.permission.MANAGE_MUSIC_RECOGNITION
<android.content.Context: boolean stopServiceAsUser(Intent,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.location.LocationRequest.Builder: Builder setWorkSource(WorkSource)>|android.permission.UPDATE_DEVICE_STATS
<android.os.image.DynamicSystemManager: GsiProgress getInstallationProgress()>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.telephony.SubscriptionManager: List<SubscriptionInfo> getActiveSubscriptionInfoList()>|android.permission.READ_PHONE_STATE
<android.companion.virtual.VirtualDeviceParams.Builder: Builder setLockState(int)>|android.permission.ADD_ALWAYS_UNLOCKED_DISPLAY
<android.media.AudioRecord.Builder: Builder setMaxSharedAudioHistoryMillis(long)>|android.permission.CAPTURE_AUDIO_HOTWORD
<android.telecom.TelecomManager: void showInCallScreen(boolean)>|android.permission.READ_PHONE_STATE
<android.hardware.input.InputManager: void setCurrentKeyboardLayoutForInputDevice(InputDeviceIdentifier,String)>|android.permission.SET_KEYBOARD_LAYOUT
<android.app.ActivityManager: boolean startProfile(UserHandle)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS_FULL
<android.telephony.TelephonyManager: List<String> getCertsFromCarrierPrivilegeAccessRules()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.usage.UsageStatsManager: void setAppStandbyBuckets(Map<String, Integer>)>|android.permission.CHANGE_APP_IDLE_STATE
<android.telephony.TelephonyManager: void setSignalStrengthUpdateRequest(SignalStrengthUpdateRequest)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.SubscriptionManager: int setIconTint(int,int)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: boolean isRemovableEsimDefaultEuicc()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.input.VirtualMouse: void close()>|android.permission.CREATE_VIRTUAL_DEVICE
<android.location.LocationManager: void addProviderRequestChangedListener(Executor,ChangedListener)>|android.permission.LOCATION_HARDWARE
<android.telephony.ims.ImsMmTelManager: boolean isAvailable(int,int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.security.keystore.recovery.RecoveryController: void setServerParams(byte[])>|android.permission.RECOVER_KEYSTORE
<android.os.VibratorManager: void cancel()>|android.permission.VIBRATE
<android.debug.AdbManager: boolean isAdbWifiQrSupported()>|android.permission.MANAGE_DEBUGGING
<android.telephony.TelephonyManager: void resetSettings()>|android.permission.CONNECTIVITY_INTERNAL
<android.media.AudioSystem: float getMasterBalance()>|android.permission.MODIFY_AUDIO_SETTINGS
<android.telephony.TelephonyManager: String getGroupIdLevel1(int)>|android.permission.READ_PHONE_STATE
<android.app.KeyguardManager: boolean checkLock(int,byte[])>|android.permission.SET_AND_VERIFY_LOCKSCREEN_CREDENTIALS|android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<android.hardware.lights.SystemLightsManager: LightsSession openSession()>|android.permission.CONTROL_DEVICE_LIGHTS
<android.hardware.face.FaceManager: List<Face> getEnrolledFaces(int)>|android.permission.MANAGE_BIOMETRIC
<android.print.PrintManager: void removePrintServicesChangeListener(PrintServicesChangeListener)>|android.permission.READ_PRINT_SERVICES
<android.provider.DeviceConfig: int getInt(String,String,int)>|android.permission.READ_DEVICE_CONFIG
<android.media.audiopolicy.AudioPolicy: List<AudioFocusInfo> getFocusStack()>|android.permission.MODIFY_AUDIO_ROUTING
<android.app.admin.DevicePolicyManager: UserHandle getDeviceOwnerUser()>|android.permission.MANAGE_USERS
<android.telephony.SignalStrengthUpdateRequest.Builder: Builder setSystemThresholdReportingRequestedWhileIdle(boolean)>|android.permission.LISTEN_ALWAYS_REPORTED_SIGNAL_STRENGTH
<android.os.BugreportManager: void requestBugreport(BugreportParams,CharSequence,CharSequence)>|android.permission.DUMP
<android.os.storage.StorageManager: List<StorageVolume> getStorageVolumesIncludingSharedProfiles()>|android.permission.MANAGE_EXTERNAL_STORAGE
<android.os.UserManager: boolean hasBaseUserRestriction(String,UserHandle)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.app.people.PeopleManager: boolean isConversation(String,String)>|android.permission.READ_PEOPLE_DATA
<android.app.WallpaperManager: int setStream(InputStream,Rect,boolean,int)>|android.permission.SET_WALLPAPER
<android.hardware.camera2.CameraManager.AvailabilityCallback: void onCameraOpened(String,String)>|android.permission.CAMERA_OPEN_CLOSE_LISTENER
<android.content.Context: void sendOrderedBroadcastAsUser(Intent,UserHandle,String,BroadcastReceiver,Handler,int,String,Bundle)>|android.permission.INTERACT_ACROSS_USERS
<android.permission.LegacyPermissionManager: void revokeDefaultPermissionsFromDisabledTelephonyDataServices(String[],UserHandle,Executor,Consumer<Boolean>)>|android.permission.GRANT_RUNTIME_PERMISSIONS_TO_TELEPHONY_DEFAULTS
<android.hardware.hdmi.HdmiControlManager: List<Integer> getAllowedCecSettingIntValues(String)>|android.permission.HDMI_CEC
<android.media.soundtrigger.SoundTriggerManager: int setParameter(UUID,int,int)>|android.permission.MANAGE_SOUND_TRIGGER
<android.hardware.location.ContextHubManager: ContextHubClient createClient(ContextHubInfo,ContextHubClientCallback)>|android.permission.ACCESS_CONTEXT_HUB
<android.app.time.TimeManager: boolean updateTimeConfiguration(TimeConfiguration)>|android.permission.MANAGE_TIME_AND_ZONE_DETECTION
<com.android.server.app.GameManagerService: void resetGameModeConfigOverride(String,int,int)>|android.permission.MANAGE_GAME_MODE
<android.companion.virtual.VirtualDeviceManager.VirtualDevice: VirtualTouchscreen createVirtualTouchscreen(VirtualDisplay,String,int,int)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.window.TaskOrganizer: boolean deleteRootTask(WindowContainerToken)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.telephony.ims.ImsMmTelManager: void registerImsRegistrationCallback(Executor,RegistrationCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.content.pm.PackageManager: Drawable getInstantAppIcon(String)>|android.permission.ACCESS_INSTANT_APPS
<android.media.AudioManager: boolean setPreferredDeviceForStrategy(AudioProductStrategy,AudioDeviceAttributes)>|android.permission.MODIFY_AUDIO_ROUTING
<android.hardware.display.DisplayManager: void setRefreshRateSwitchingType(int)>|android.permission.MODIFY_REFRESH_RATE_SWITCHING_TYPE
<android.security.FileIntegrityManager: boolean isAppSourceCertificateTrusted(X509Certificate)>|android.permission.INSTALL_PACKAGES|android.permission.REQUEST_INSTALL_PACKAGES
<android.app.admin.DevicePolicyManager: boolean isPackageAllowedToAccessCalendar(String)>|android.permission.permission.INTERACT_ACROSS_USERS_FULL|android.permission.permission.INTERACT_ACROSS_USERS
<android.app.admin.DevicePolicyManager: int getPasswordComplexity()>|android.permission.REQUEST_PASSWORD_COMPLEXITY
<com.android.server.audio.AudioService: void registerDeviceVolumeDispatcherForAbsoluteVolume(boolean,IAudioDeviceVolumeDispatcher,String,AudioDeviceAttributes,List<VolumeInfo>,boolean)>|android.permission.MODIFY_AUDIO_ROUTING|android.permission.BLUETOOTH_PRIVILEGED
<android.permission.LegacyPermissionManager: void revokeDefaultPermissionsFromLuiApps(String[],UserHandle,Executor,Consumer<Boolean>)>|android.permission.GRANT_RUNTIME_PERMISSIONS_TO_TELEPHONY_DEFAULTS
<android.os.PowerManager: boolean forceSuspend()>|android.permission.DEVICE_POWER
<android.telephony.ims.ImsMmTelManager: void setVoWiFiModeSetting(int)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.SubscriptionManager: int[] getActiveSubscriptionIdList()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.SubscriptionManager: String getPhoneNumber(int,int)>|android.permission.READ_PHONE_NUMBERS|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission."carrier privileges"
<android.telephony.PhoneStateListener: void onCellInfoChanged(List<CellInfo>)>|android.permission.READ_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<android.provider.DeviceConfig: void resetToDefaults(int,String)>|android.permission.WRITE_DEVICE_CONFIG
<android.os.BatteryStatsManager: void reportWifiOn()>|android.permission.UPDATE_DEVICE_STATS
<android.telephony.TelephonyManager: PhoneCapability getPhoneCapability()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: String getNai()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.fingerprint.FingerprintManager: void authenticate(CryptoObject,CancellationSignal,int,AuthenticationCallback,Handler)>|android.permission.USE_BIOMETRIC|android.permission.USE_FINGERPRINT
<android.hardware.camera2.impl.CameraAdvancedExtensionSessionImpl: CameraAdvancedExtensionSessionImpl createCameraAdvancedExtensionSession(CameraDevice,Context,ExtensionSessionConfiguration,int)>|android.permission.CAMERA
<android.app.admin.DevicePolicyManager: boolean shouldAllowBypassingDevicePolicyManagementRoleQualification()>|android.permission.MANAGE_ROLE_HOLDERS
<android.content.pm.PackageManager: String[] setPackagesSuspended(String[],boolean,PersistableBundle,PersistableBundle,String)>|android.permission.SUSPEND_APPS
<android.app.WallpaperManager: void setBitmap(Bitmap)>|android.permission.SET_WALLPAPER
<android.media.AudioRecordingConfiguration: int getClientUid()>|android.permission.MODIFY_AUDIO_ROUTING
<android.app.backup.BackupManager: void selectBackupTransport(ComponentName,SelectBackupTransportCallback)>|android.permission.BACKUP
<android.os.Build: String getSerial()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.media.AudioManager: void removeOnPreferredDeviceForStrategyChangedListener(OnPreferredDeviceForStrategyChangedListener)>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.TelephonyManager: boolean setAllowedNetworkTypes(long)>|android.permission.MODIFY_PHONE_STATE
<android.content.Context: void sendBroadcastAsUser(Intent,UserHandle,String,Bundle)>|android.permission.INTERACT_ACROSS_USERS
<android.location.LocationManager: void setLocationControllerExtraPackage(String)>|android.permission.LOCATION_HARDWARE
<android.foo.IColorService: void redOrBlue()>|android.permission.RED|android.permission.BLUE
<android.media.AudioAttributes.Builder: Builder setSystemUsage(int)>|android.permission.MODIFY_AUDIO_ROUTING
<android.hardware.fingerprint.FingerprintManager: List<Fingerprint> getEnrolledFingerprints(int)>|android.permission.USE_FINGERPRINT
<com.android.server.accessibility.AccessibilityManagerService: void setSystemAudioCaptioningEnabled(boolean,int)>|android.permission.SET_SYSTEM_AUDIO_CAPTION
<android.app.timedetector.TimeDetector: boolean suggestManualTime(ManualTimeSuggestion)>|android.permission.SUGGEST_MANUAL_TIME_AND_ZONE
<android.app.ambientcontext.AmbientContextManager: void registerObserver(AmbientContextEventRequest,PendingIntent,Executor,Consumer<Integer>)>|android.permission.ACCESS_AMBIENT_CONTEXT_EVENT
<android.companion.CompanionDeviceService: void dispatchMessage(int,int,byte[])>|android.permission.DELIVER_COMPANION_MESSAGES
<android.app.KeyguardManager.KeyguardLock: void reenableKeyguard()>|android.permission.DISABLE_KEYGUARD
<android.media.tv.TvInputManager: List<TvContentRatingSystemInfo> getTvContentRatingSystemList()>|android.permission.READ_CONTENT_RATING_SYSTEMS
<android.app.job.JobInfo.Builder: Builder setPersisted(boolean)>|android.permission.RECEIVE_BOOT_COMPLETED
<android.telephony.TelephonyManager: void setSystemSelectionChannels(List<RadioAccessSpecifier>,Executor,Consumer<Boolean>)>|android.permission.MODIFY_PHONE_STATE
<android.os.UserManager: NewUserResponse createUser(NewUserRequest)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.hardware.hdmi.HdmiControlManager: String getPowerControlMode()>|android.permission.HDMI_CEC
<android.location.LocationManager: void requestSingleUpdate(Criteria,LocationListener,Looper)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.net.NetworkScoreManager: String getActiveScorerPackage()>|android.permission.SCORE_NETWORKS|android.permission.REQUEST_NETWORK_SCORES
<android.app.WallpaperManager: void clearWallpaper(int,int)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.hardware.SensorPrivacyManager: void addSensorPrivacyListener(int,Executor,OnSensorPrivacyChangedListener)>|android.permission.OBSERVE_SENSOR_PRIVACY
<android.app.usage.UsageStatsManager: void unregisterUsageSessionObserver(int)>|android.permission.OBSERVE_APP_USAGE
<android.os.image.DynamicSystemManager.Session: boolean commit()>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.os.UserManager: UserInfo findCurrentGuestUser()>|android.permission.MANAGE_USERS
<android.app.ActivityManager: void killUid(int,String)>|android.permission.KILL_UID
<android.telephony.TelephonyManager: String getCarrierServicePackageNameForLogicalSlot(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.ActivityManager: void killProcessesWhenImperceptible(int[],String)>|android.permission.FORCE_STOP_PACKAGES
<android.os.UserManager: UserHandle createProfile(String,String,Set<String>)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.os.UserManager: boolean isEphemeralUser()>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.os.UserManager: void setUserName(int,String)>|android.permission.MANAGE_USERS
<android.app.admin.DevicePolicyManager: List<String> getPermittedInputMethodsForCurrentUser()>|android.permission.MANAGE_USERS|android.permission.QUERY_ADMIN_POLICY
<android.telephony.TelephonyManager: IccOpenLogicalChannelResponse iccOpenLogicalChannelBySlot(int,String,int)>|android.permission.MODIFY_PHONE_STATE
<android.provider.CallLog: void storeCallComposerPicture(Context,InputStream,Executor,OutcomeReceiver<Uri, CallComposerLoggingException>)>|android.permission.WRITE_CALL_LOG|android.permission.INTERACT_ACROSS_USERS
<android.app.KeyguardManager: boolean registerWeakEscrowTokenRemovedListener(Executor,WeakEscrowTokenRemovedListener)>|android.permission.MANAGE_WEAK_ESCROW_TOKEN
<android.hardware.display.DisplayManager: BrightnessConfiguration getBrightnessConfiguration()>|android.permission.CONFIGURE_DISPLAY_BRIGHTNESS
<android.os.SystemConfigManager: Map<String, List<String>> getDisabledUntilUsedPreinstalledCarrierAssociatedApps()>|android.permission.READ_CARRIER_APP_INFO
<android.telephony.SubscriptionManager: SubscriptionInfo getActiveSubscriptionInfoForIcc(String)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telecom.TelecomManager: boolean isInManagedCall()>|android.permission.READ_PHONE_STATE
<android.app.ActivityTaskManager: void removeRootTasksInWindowingModes(int[])>|android.permission.MANAGE_ACTIVITY_TASKS
<android.os.UserManager: boolean isSameProfileGroup(int,int)>|android.permission.MANAGE_USERS|android.permission.QUERY_USERS
<android.telephony.TelephonyManager: Locale getSimLocale()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: void iccCloseLogicalChannelByPort(int,int,int)>|android.permission.MODIFY_PHONE_STATE
<android.app.compat.CompatChanges: void putPackageOverrides(String,Map<Long, PackageOverride>)>|android.permission.OVERRIDE_COMPAT_CHANGE_CONFIG_ON_RELEASE_BUILD
<android.content.pm.verify.domain.DomainVerificationManager: DomainVerificationInfo getDomainVerificationInfo(String)>|android.permission.DOMAIN_VERIFICATION_AGENT
<android.hardware.biometrics.BiometricManager: BiometricTestSession createTestSession(int)>|android.permission.TEST_BIOMETRIC
<android.os.image.DynamicSystemManager: long suggestScratchSize()>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.telephony.TelephonyManager: void shutdownAllRadios()>|android.permission.MODIFY_PHONE_STATE
<android.app.cloudsearch.CloudSearchManager: void search(SearchRequest,Executor,CallBack)>|android.permission.MANAGE_CLOUDSEARCH
<android.hardware.hdmi.HdmiControlManager: void setRoutingControl(int)>|android.permission.HDMI_CEC
<android.telephony.TelephonyManager: Map<Integer, List<EmergencyNumber>> getEmergencyNumberList()>|android.permission.READ_PHONE_STATE
<android.net.NetworkScoreManager: boolean setActiveScorer(String)>|android.permission.SCORE_NETWORKS|android.permission.REQUEST_NETWORK_SCORES
<android.hardware.input.VirtualKeyboard: void close()>|android.permission.CREATE_VIRTUAL_DEVICE
<android.telephony.TelephonyManager: void sendVisualVoicemailSmsForSubscriber(int,String,int,String,PendingIntent)>|android.permission.SEND_SMS
<android.app.ActivityManager: void moveTaskToFront(int,int)>|android.permission.REORDER_TASKS
<android.app.admin.DevicePolicyResourcesManager: void resetStrings(Set<String>)>|android.permission.UPDATE_DEVICE_MANAGEMENT_RESOURCES
<android.app.admin.DevicePolicyManager: void provisionFullyManagedDevice(FullyManagedDeviceProvisioningParams)>|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS|android.permission.PROVISION_DEMO_DEVICE
<android.telephony.TelephonyCallback.BarringInfoListener: void onBarringInfoChanged(BarringInfo)>|android.permission.READ_PRECISE_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<android.media.voice.KeyphraseModelManager: void updateKeyphraseSoundModel(KeyphraseSoundModel)>|android.permission.MANAGE_VOICE_KEYPHRASES
<android.os.UserManager: UserInfo preCreateUser(String)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.content.Context: void sendStickyOrderedBroadcastAsUser(Intent,UserHandle,BroadcastReceiver,Handler,int,String,Bundle)>|android.permission.INTERACT_ACROSS_USERS|android.permission.BROADCAST_STICKY
<android.hardware.hdmi.HdmiControlManager: void removeHotplugEventListener(HotplugEventListener)>|android.permission.HDMI_CEC
<android.hardware.hdmi.HdmiControlManager: void setHdmiCecVolumeControlEnabled(int)>|android.permission.HDMI_CEC
<android.media.tv.TvInputManager: int getClientPriority(int)>|android.permission.TUNER_RESOURCE_ACCESS
<android.app.time.TimeManager: void suggestExternalTime(ExternalTimeSuggestion)>|android.permission.SUGGEST_EXTERNAL_TIME
<android.media.voice.KeyphraseModelManager: void deleteKeyphraseSoundModel(int,Locale)>|android.permission.MANAGE_VOICE_KEYPHRASES
<android.telephony.CarrierConfigManager: PersistableBundle getConfigByComponentForSubId(String,int)>|android.permission.READ_PHONE_STATE
<android.app.KeyguardManager.KeyguardLock: void disableKeyguard()>|android.permission.DISABLE_KEYGUARD
<android.hardware.hdmi.HdmiControlManager: void removeHdmiControlStatusChangeListener(HdmiControlStatusChangeListener)>|android.permission.HDMI_CEC
<android.telephony.SmsManager: void sendTextMessageWithoutPersisting(String,String,String,PendingIntent,PendingIntent)>|android.permission.MODIFY_PHONE_STATE|android.permission.SEND_SMS
<android.app.KeyguardManager: boolean setLock(int,byte[],int,byte[])>|android.permission.SET_AND_VERIFY_LOCKSCREEN_CREDENTIALS|android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<android.net.NetworkScoreManager: NetworkScorerAppData getActiveScorer()>|android.permission.REQUEST_NETWORK_SCORES
<android.hardware.biometrics.BiometricTestSession: void notifyAcquired(int,int)>|android.permission.TEST_BIOMETRIC
<android.app.WallpaperManager: void setWallpaperDimAmount(float)>|android.permission.SET_WALLPAPER_DIM_AMOUNT
<android.app.GameManager: void setGameMode(String,int)>|android.permission.MANAGE_GAME_MODE
<android.app.WallpaperManager: void clear()>|android.permission.SET_WALLPAPER
<android.media.AudioManager: void unregisterMuteAwaitConnectionCallback(MuteAwaitConnectionCallback)>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.TelephonyManager: int setAllowedCarriers(int,List<CarrierIdentifier>)>|android.permission.MODIFY_PHONE_STATE
<android.app.AppOpsManager: void addHistoricalOps(HistoricalOps)>|android.permission.MANAGE_APPOPS
<android.app.ActivityManager: void forceStopPackage(String)>|android.permission.FORCE_STOP_PACKAGES
<android.security.keystore.recovery.RecoveryController: RecoverySession createRecoverySession()>|android.permission.RECOVER_KEYSTORE
<android.app.AppOpsManager: void reloadNonHistoricalState()>|android.permission.MANAGE_APPOPS
<android.hardware.biometrics.BiometricManager: List<SensorProperties> getSensorProperties()>|android.permission.TEST_BIOMETRIC
<android.os.UserManager: void setUserIcon(int,Bitmap)>|android.permission.MANAGE_USERS
<android.app.usage.UsageStatsManager: void unregisterAppUsageObserver(int)>|android.permission.OBSERVE_APP_USAGE
<android.app.StatusBarManager: int getNavBarMode()>|android.permission.STATUS_BAR
<android.service.dataloader.DataLoaderService.FileSystemConnector: void writeData(String,long,long,ParcelFileDescriptor)>|android.permission.INSTALL_PACKAGES
<android.os.RecoverySystem: void processPackage(Context,File,ProgressListener)>|android.permission.RECOVERY
<android.content.pm.PackageInstaller.SessionParams: void setInstallAsApex()>|android.permission.INSTALL_PACKAGES
<android.telephony.SubscriptionManager: void switchToSubscription(int,PendingIntent)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.telephony.TelephonyManager: PinResult changeIccLockPin(String,String)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.hdmi.HdmiControlManager: int getHdmiCecEnabled()>|android.permission.HDMI_CEC
<android.os.PowerManager: boolean isAmbientDisplaySuppressed()>|android.permission.READ_DREAM_STATE
<android.media.AudioManager: void removeOnPreferredDevicesForStrategyChangedListener(OnPreferredDevicesForStrategyChangedListener)>|android.permission.MODIFY_AUDIO_ROUTING
<android.os.BatteryStatsManager: void reportWifiBatchedScanStoppedFromSource(WorkSource)>|android.permission.UPDATE_DEVICE_STATS
<android.media.AudioManager: void cancelMuteAwaitConnection(AudioDeviceAttributes)>|android.permission.MODIFY_AUDIO_ROUTING
<android.provider.ContactsContract.RawContactsEntity: Map<String, List<ContentValues>> queryRawContactEntity(ContentResolver,long)>|android.permission.INTERACT_ACROSS_USERS
<android.telephony.SubscriptionManager: boolean setSubscriptionEnabled(int,boolean)>|android.permission.MODIFY_PHONE_STATE
<android.content.pm.PackageManager: String getDefaultBrowserPackageNameAsUser(int)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.hardware.hdmi.HdmiControlManager: int getRoutingControl()>|android.permission.HDMI_CEC
<android.telephony.TelephonyManager: int getVoiceMessageCount()>|android.permission.READ_PHONE_STATE
<android.security.keystore.recovery.RecoveryController: Key importKey(String,byte[],byte[])>|android.permission.RECOVER_KEYSTORE
<android.telephony.TelephonyManager: void bootstrapAuthenticationRequest(int,Uri,UaSecurityProtocolIdentifier,boolean,Executor,BootstrapAuthenticationCallback)>|android.permission.MODIFY_PHONE_STATE|android.permission.PERFORM_IMS_SINGLE_REGISTRATION
<android.app.WallpaperManager: int setStream(InputStream,Rect,boolean)>|android.permission.SET_WALLPAPER
<android.telephony.TelephonyManager: boolean handlePinMmi(String)>|android.permission.MODIFY_PHONE_STATE
<android.os.SystemConfigManager: Set<String> getDisabledUntilUsedPreinstalledCarrierApps()>|android.permission.READ_CARRIER_APP_INFO
<android.telephony.TelephonyManager: void setSystemSelectionChannels(List<RadioAccessSpecifier>)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.location.ContextHubManager: ContextHubTransaction<Void> unloadNanoApp(ContextHubInfo,long)>|android.permission.ACCESS_CONTEXT_HUB
<android.telecom.ConnectionService: Connection onCreateUnknownConnection(PhoneAccountHandle,ConnectionRequest)>|android.permission.MODIFY_PHONE_STATE
<android.app.backup.BackupManager: RestoreSession beginRestoreSession()>|android.permission.BACKUP
<android.content.Context: Intent registerReceiverForAllUsers(BroadcastReceiver,IntentFilter,String,Handler)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.permission.PermissionControllerManager: void notifyOneTimePermissionSessionTimeout(String)>|android.permission.REVOKE_RUNTIME_PERMISSIONS
<android.os.IncidentManager: void requestAuthorization(int,String,int,Executor,AuthListener)>|android.permission.REQUEST_INCIDENT_REPORT_APPROVAL
<android.app.admin.DevicePolicyManager: boolean isDpcDownloaded()>|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.os.UserManager: UserInfo createUser(String,String,int)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.telephony.TelephonyManager: int getSubscriptionId(PhoneAccountHandle)>|android.permission.READ_PHONE_STATE
<android.content.pm.PackageManager: ApplicationInfo getApplicationInfoAsUser(String,ApplicationInfoFlags,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.telephony.ims.ProvisioningManager: void unregisterProvisioningChangedCallback(Callback)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.radio.RadioManager: void addAnnouncementListener(Executor,Set<Integer>,OnListUpdatedListener)>|android.permission.ACCESS_BROADCAST_RADIO
<android.media.AudioDeviceVolumeManager: void addOnDeviceVolumeBehaviorChangedListener(Executor,OnDeviceVolumeBehaviorChangedListener)>|android.permission.MODIFY_AUDIO_ROUTING|android.permission.QUERY_AUDIO_STATE
<android.content.pm.PackageManager: List<ResolveInfo> queryIntentActivitiesAsUser(Intent,int,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.media.Spatializer: int getHeadTrackingMode()>|android.permission.MODIFY_DEFAULT_AUDIO_EFFECTS
<android.telephony.TelephonyManager: String getCdmaMin()>|android.permission.MODIFY_PHONE_STATE
<android.app.StatusBarManager: boolean useMediaSessionActionsForApp(String,UserHandle)>|android.permission.READ_COMPAT_CHANGE_CONFIG|android.permission.LOG_COMPAT_CHANGE
<android.security.keystore.AttestationUtils: X509Certificate[] attestDeviceIds(Context,int[],byte[])>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.se.omapi.Reader: boolean reset()>|android.permission.SECURE_ELEMENT_PRIVILEGED_OPERATION
<android.app.KeyguardManager: boolean isWeakEscrowTokenActive(long,UserHandle)>|android.permission.MANAGE_WEAK_ESCROW_TOKEN
<android.media.AudioManager: void addAssistantServicesUids(int[])>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.TelephonyManager: boolean rebootRadio()>|android.permission.MODIFY_PHONE_STATE
<android.location.LocationManager: boolean registerGnssNavigationMessageCallback(Callback,Handler)>|android.permission.ACCESS_FINE_LOCATION
<android.os.UserManager: boolean isManagedProfile(int)>|android.permission.MANAGE_USERS|android.permission.QUERY_USERS|android.permission.INTERACT_ACROSS_USERS
<android.hardware.usb.UsbManager: void grantPermission(UsbDevice,String)>|android.permission.MANAGE_USB
<android.security.KeyChain: boolean removeCredentialManagementApp(Context)>|android.permission.MANAGE_CREDENTIAL_MANAGEMENT_APP
<android.content.pm.LauncherApps: void cacheShortcuts(String,List<String>,UserHandle,int)>|android.permission.ACCESS_SHORTCUTS
<android.hardware.soundtrigger.SoundTrigger: int listModulesAsMiddleman(ArrayList<ModuleProperties>,Identity,Identity)>|android.permission.SOUNDTRIGGER_DELEGATE_IDENTITY
<android.app.WallpaperManager: void clearWallpaper()>|android.permission.SET_WALLPAPER
<android.hardware.SensorPrivacyManager: void suppressSensorPrivacyReminders(int,boolean,int)>|android.permission.MANAGE_SENSOR_PRIVACY
<android.media.soundtrigger.SoundTriggerManager: int getModelState(UUID)>|android.permission.MANAGE_SOUND_TRIGGER
<android.nfc.NfcAdapter: boolean isControllerAlwaysOn()>|android.permission.NFC_SET_CONTROLLER_ALWAYS_ON
<android.os.UserManager: boolean isUserNameSet()>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS|android.permission.GET_ACCOUNTS_PRIVILEGED
<android.media.AudioManager: boolean removePreferredDeviceForStrategy(AudioProductStrategy)>|android.permission.MODIFY_AUDIO_ROUTING
<android.os.image.DynamicSystemManager: boolean finishInstallation()>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.content.pm.PackageManager: boolean removeWhitelistedRestrictedPermission(String,String,int)>|android.permission.WHITELIST_RESTRICTED_PERMISSIONS
<android.hardware.SensorPrivacyManager: void addSensorPrivacyListener(Executor,OnSensorPrivacyChangedListener)>|android.permission.OBSERVE_SENSOR_PRIVACY
<android.content.pm.CrossProfileApps: void startActivity(Intent,UserHandle,Activity)>|android.permission.INTERACT_ACROSS_PROFILES|android.permission.INTERACT_ACROSS_USERS
<android.telephony.TelephonyManager: boolean switchSlots(int[])>|android.permission.MODIFY_PHONE_STATE
<android.os.UserManager: int[] getEnabledProfileIds(int)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.telephony.SubscriptionManager: int getEnabledSubscriptionId(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.usage.UsageStatsManager: void clearBroadcastResponseStats(String,long)>|android.permission.ACCESS_BROADCAST_RESPONSE_STATS
<android.view.contentcapture.ContentCaptureManager: void setTemporaryService(int,String,int)>|android.permission.MANAGE_CONTENT_CAPTURE
<android.location.LocationManager: void requestLocationUpdates(String,LocationRequest,PendingIntent)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.telephony.ims.ImsRcsManager: boolean isAvailable(int,int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.content.pm.PackageInstaller.SessionParams: void setGrantedRuntimePermissions(String[])>|android.permission.INSTALL_GRANT_RUNTIME_PERMISSIONS
<android.net.VpnManager: boolean isVpnLockdownEnabled(int)>|android.permission.CONTROL_ALWAYS_ON_VPN
<android.permission.PermissionControllerManager: void getHibernationEligibility(String,Executor,IntConsumer)>|android.permission.MANAGE_APP_HIBERNATION
<android.security.keystore.recovery.RecoveryController: Map<String, X509Certificate> getRootCertificates()>|android.permission.RECOVER_KEYSTORE
<android.telephony.TelephonyManager: String[] getForbiddenPlmns(int,int)>|android.permission.READ_PHONE_STATE
<android.media.tv.TvInputManager: Hardware acquireTvInputHardware(int,HardwareCallback,TvInputInfo)>|android.permission.TV_INPUT_HARDWARE
<android.companion.virtual.audio.VirtualAudioDevice: void close()>|android.permission.MODIFY_AUDIO_ROUTING
<android.content.pm.PackageManager: List<ResolveInfo> queryIntentServicesAsUser(Intent,int,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.app.admin.DevicePolicyManager: List<UserHandle> getPolicyManagedProfiles(UserHandle)>|android.permission.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.service.voice.AlwaysOnHotwordDetector: boolean startRecognition(int)>|android.permission.RECORD_AUDIO|android.permission.CAPTURE_AUDIO_HOTWORD
<android.media.AudioManager: int[] getAssistantServicesUids()>|android.permission.MODIFY_AUDIO_ROUTING
<android.app.compat.CompatChanges: void removePackageOverrides(String,Set<Long>)>|android.permission.OVERRIDE_COMPAT_CHANGE_CONFIG_ON_RELEASE_BUILD
<android.telephony.TelephonyManager: Collection<UiccSlotMapping> getSimSlotMapping()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.location.LocationManager: void addProximityAlert(double,double,float,long,PendingIntent)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.content.pm.PackageManager: List<ResolveInfo> queryIntentContentProvidersAsUser(Intent,ResolveInfoFlags,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.hardware.usb.UsbManager: void enableUsbDataWhileDocked(UsbPort,int,IUsbOperationInternal)>|android.permission.MANAGE_USB
<android.net.NetworkScoreManager: boolean requestScores(NetworkKey[])>|android.permission.REQUEST_NETWORK_SCORES
<android.app.AppOpsManager: PackageOps> getPackagesForOps(int[])>|android.permission.GET_APP_OPS_STATS
<android.telephony.TelephonyManager: boolean disableDataConnectivity()>|android.permission.MODIFY_PHONE_STATE
<android.hardware.radio.RadioManager: void removeAnnouncementListener(OnListUpdatedListener)>|android.permission.ACCESS_BROADCAST_RADIO
<android.content.pm.PackageManager: List<PackageInfo> getInstalledPackagesAsUser(PackageInfoFlags,int)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.app.ActivityTaskManager: void removeAllVisibleRecentTasks()>|android.permission.REMOVE_TASKS
<android.content.pm.LauncherApps: void uncacheShortcuts(String,List<String>,UserHandle,int)>|android.permission.ACCESS_SHORTCUTS
<android.telephony.TelephonyManager: boolean endCall()>|android.permission.CALL_PHONE
<android.media.AudioManager: void setVolumeIndexForAttributes(AudioAttributes,int,int)>|android.permission.MODIFY_AUDIO_ROUTING
<android.os.RecoverySystem: boolean isPreparedForUnattendedUpdate(Context)>|android.permission.RECOVERY|android.permission.REBOOT
<android.hardware.camera2.CameraManager.AvailabilityCallback: void onCameraClosed(String)>|android.permission.CAMERA_OPEN_CLOSE_LISTENER
<android.app.admin.DevicePolicyManager: UserHandle createAndProvisionManagedProfile(ManagedProfileProvisioningParams)>|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.hardware.fingerprint.FingerprintManager: int getLockoutModeForUser(int,int)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.window.DisplayAreaOrganizer: DisplayAreaAppearedInfo createTaskDisplayArea(int,int,String)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.telephony.TelephonyManager: void setDataEnabled(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.content.pm.PackageManager: List<ResolveInfo> queryIntentContentProvidersAsUser(Intent,int,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<com.android.server.wm.WindowManagerService: void showGlobalActions()>|android.permission.INTERNAL_SYSTEM_WINDOW
<android.os.BatteryStatsManager: void unplugBattery(boolean)>|android.permission.DEVICE_POWER
<android.telephony.ims.ProvisioningManager: boolean isProvisioningRequiredForCapability(int,int)>|android.permission.READ_PRECISE_PHONE_STATE
<android.telephony.TelephonyCallback.RadioPowerStateListener: void onRadioPowerStateChanged(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.content.Context: Intent registerReceiverForAllUsers(BroadcastReceiver,IntentFilter,String,Handler,int)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.permission.PermissionControllerManager: void getRuntimePermissionBackup(UserHandle,Executor,Consumer<byte[]>)>|android.permission.GET_RUNTIME_PERMISSIONS
<android.telephony.TelephonyCallback.CellLocationListener: void onCellLocationChanged(CellLocation)>|android.permission.ACCESS_FINE_LOCATION
<android.hardware.location.ContextHubClient: int sendMessageToNanoApp(NanoAppMessage)>|android.permission.ACCESS_CONTEXT_HUB
<android.os.UserManager: Bundle getDefaultGuestRestrictions()>|android.permission.MANAGE_USERS
<android.location.LocationManager: boolean addNmeaListener(NmeaListener)>|android.permission.ACCESS_FINE_LOCATION
<android.hardware.SensorPrivacyManager: boolean isSensorPrivacyEnabled(int,int)>|android.permission.OBSERVE_SENSOR_PRIVACY
<android.app.admin.DevicePolicyManager: Set<String> getPolicyExemptApps()>|android.permission.MANAGE_DEVICE_ADMINS
<android.security.keystore.recovery.RecoverySession: void close()>|android.permission.RECOVER_KEYSTORE
<android.media.audiopolicy.AudioPolicy: boolean sendFocusLoss(AudioFocusInfo)>|android.permission.MODIFY_AUDIO_ROUTING
<android.telephony.TelephonyManager: int prepareForUnattendedReboot()>|android.permission.REBOOT
<android.provider.Settings.Config: boolean setStrings(ContentResolver,String,Map<String, String>)>|android.permission.WRITE_DEVICE_CONFIG
<android.permission.PermissionManager: void removeOnPermissionsChangeListener(OnPermissionsChangedListener)>|android.permission.OBSERVE_GRANT_REVOKE_PERMISSIONS
<android.media.AudioSystem: int setMasterBalance(float)>|android.permission.MODIFY_AUDIO_SETTINGS
<android.telephony.PhoneStateListener: void onEmergencyNumberListChanged(Map<Integer, List<EmergencyNumber>>)>|android.permission.READ_PHONE_STATE
<android.telephony.SmsManager: boolean updateMessageOnIcc(int,int,byte[])>|android.permission.ACCESS_MESSAGES_ON_ICC
<android.nfc.cardemulation.CardEmulation: String getRouteDestinationForPreferredPaymentService()>|android.permission.NFC_PREFERRED_PAYMENT_INFO
<android.location.LocationManager: boolean addNmeaListener(OnNmeaMessageListener,Handler)>|android.permission.ACCESS_FINE_LOCATION
<android.location.LocationManager: void removeProviderRequestChangedListener(ChangedListener)>|android.permission.LOCATION_HARDWARE
<android.os.UserManager: void setUserAdmin(int)>|android.permission.INTERACT_ACROSS_USERS_FULL|android.permission.MANAGE_USERS
<android.permission.PermissionManager: Set<String> getAllowlistedRestrictedPermissions(String,int)>|android.permission.WHITELIST_RESTRICTED_PERMISSIONS
<android.os.Vibrator: void cancel()>|android.permission.VIBRATE
<android.app.KeyguardManager: int getMinLockLength(boolean,int)>|android.permission.SET_INITIAL_LOCK
<android.media.AudioManager: int getLastAudibleStreamVolume(int)>|android.permission."android.permission.QUERY_AUDIO_STATE"
<android.hardware.face.FaceManager: boolean isHardwareDetected()>|android.permission.USE_BIOMETRIC_INTERNAL
<android.telephony.TelephonyManager: String getSubscriberId(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.window.TaskOrganizer: void setInterceptBackPressedOnTaskRoot(WindowContainerToken,boolean)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.telephony.CarrierConfigManager: void overrideConfig(int,PersistableBundle,boolean)>|android.permission.MODIFY_PHONE_STATE
<android.app.trust.TrustManager: boolean isTrustUsuallyManaged(int)>|android.permission.TRUST_LISTENER
<android.content.Context: void sendStickyBroadcast(Intent)>|android.permission.BROADCAST_STICKY
<android.hardware.radio.RadioManager: RadioTuner openTuner(int,BandConfig,boolean,Callback,Handler)>|android.permission.ACCESS_BROADCAST_RADIO
<android.window.WindowOrganizer: int startLegacyTransition(int,RemoteAnimationAdapter,WindowContainerTransactionCallback,WindowContainerTransaction)>|android.permission.MANAGE_ACTIVITY_TASKS
<android.os.Vibrator: void addVibratorStateListener(OnVibratorStateChangedListener)>|android.permission.ACCESS_VIBRATOR_STATE
<android.hardware.hdmi.HdmiControlManager: void removeHdmiCecEnabledChangeListener(CecSettingChangeListener)>|android.permission.HDMI_CEC
<android.security.keystore.recovery.RecoverySession: Map<String, Key> recoverKeyChainSnapshot(byte[],List<WrappedApplicationKey>)>|android.permission.RECOVER_KEYSTORE
<android.telecom.TelecomManager: void silenceRinger()>|android.permission.MODIFY_PHONE_STATE
<android.os.UserManager: int getRemainingCreatableUserCount(String)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.media.tv.TvInputManager: List<DvbDeviceInfo> getDvbDeviceList()>|android.permission.DVB_DEVICE
<android.app.trust.TrustManager: void unlockedByBiometricForUser(int,BiometricSourceType)>|android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<android.app.ActivityOptions: ActivityOptions makeRemoteAnimation(RemoteAnimationAdapter,RemoteTransition)>|android.permission.CONTROL_REMOTE_APP_TRANSITION_ANIMATIONS
<android.location.LocationManager: void requestLocationUpdates(long,float,Criteria,Executor,LocationListener)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.media.soundtrigger.SoundTriggerManager: Model getModel(UUID)>|android.permission.MANAGE_SOUND_TRIGGER
<android.telephony.TelephonyManager: String getMsisdn()>|android.permission.READ_PHONE_STATE|android.permission.READ_SMS|android.permission.READ_PHONE_NUMBERS
<android.telephony.euicc.EuiccManager: void downloadSubscription(DownloadableSubscription,boolean,PendingIntent)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.os.UserManager: void setUserRestriction(String,boolean,UserHandle)>|android.permission.MANAGE_USERS
<android.location.LastLocationRequest.Builder: Builder setLocationSettingsIgnored(boolean)>|android.permission.LOCATION_BYPASS
<android.hardware.fingerprint.FingerprintManager: void generateChallenge(int,int,GenerateChallengeCallback)>|android.permission.MANAGE_FINGERPRINT
<android.hardware.fingerprint.FingerprintManager: void addAuthenticatorsRegisteredCallback(IFingerprintAuthenticatorsRegisteredCallback)>|android.permission.USE_BIOMETRIC_INTERNAL
<android.app.UiModeManager: void removeOnProjectionStateChangedListener(OnProjectionStateChangedListener)>|android.permission.READ_PROJECTION_STATE
<android.os.UserManager: boolean hasUserRestriction(String,UserHandle)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.app.compat.CompatChanges: boolean isChangeEnabled(long,String,UserHandle)>|android.permission.READ_COMPAT_CHANGE_CONFIG|android.permission.LOG_COMPAT_CHANGE
<android.content.Context: void sendBroadcastAsUser(Intent,UserHandle,String,int)>|android.permission.INTERACT_ACROSS_USERS
<android.os.UserManager: List<UserHandle> getUserHandles(boolean)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.media.AudioManager: int requestAudioFocus(OnAudioFocusChangeListener,AudioAttributes,int,int)>|android.permission.MODIFY_PHONE_STATE
<android.media.AudioManager: List<AudioVolumeGroup> getAudioVolumeGroups()>|android.permission.MODIFY_AUDIO_ROUTING
<android.app.ambientcontext.AmbientContextManager: void startConsentActivity(Set<Integer>)>|android.permission.ACCESS_AMBIENT_CONTEXT_EVENT
<android.os.UserManager: UserHandle getProfileParent(UserHandle)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.telephony.TelephonyManager: String getSimSerialNumber()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.ims.ProvisioningManager: boolean isRcsProvisioningRequiredForCapability(int,int)>|android.permission.READ_PRECISE_PHONE_STATE
<android.permission.PermissionManager: void stopOneTimePermissionSession(String)>|android.permission.MANAGE_ONE_TIME_PERMISSION_SESSIONS
<android.app.admin.DevicePolicyManager: String getDeviceOwnerNameOnAnyUser()>|android.permission.MANAGE_USERS|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.telephony.TelephonyManager: String getCarrierServicePackageName()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: long getPreferredNetworkTypeBitmask()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.content.pm.PackageManager: ApplicationInfo getApplicationInfoAsUser(String,int,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.permission.PermissionManager: void revokePostNotificationPermissionWithoutKillForTest(String,int)>|android.permission.REVOKE_POST_NOTIFICATIONS_WITHOUT_KILL
<android.location.LocationManager: boolean addNmeaListener(Executor,OnNmeaMessageListener)>|android.permission.ACCESS_FINE_LOCATION
<android.os.UserManager: UserHandle getRestrictedProfileParent()>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS
<android.permission.PermissionManager: List<PermissionGroupUsage> getIndicatorAppOpUsageData(boolean)>|android.permission.GET_APP_OPS_STATS
<android.app.backup.BackupManager: boolean isAppEligibleForBackup(String)>|android.permission.BACKUP
<android.net.VpnManager: String getAlwaysOnVpnPackageForUser(int)>|android.permission.CONTROL_ALWAYS_ON_VPN
<android.telephony.TelephonyManager: void resetCarrierKeysForImsiEncryption()>|android.permission.MODIFY_PHONE_STATE
<android.os.PowerManager: boolean setPowerSaveModeEnabled(boolean)>|android.permission.DEVICE_POWER|android.permission.POWER_SAVER
<android.telephony.ims.ImsMmTelManager: boolean isAdvancedCallingSettingEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.content.pm.PackageManager: List<ResolveInfo> queryIntentServicesAsUser(Intent,ResolveInfoFlags,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.os.UserManager: int getUserSwitchability()>|android.permission.READ_PHONE_STATE|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.os.image.DynamicSystemClient: void start(Uri,long,long)>|android.permission.INSTALL_DYNAMIC_SYSTEM
<android.service.voice.AlwaysOnHotwordDetector: boolean startRecognition()>|android.permission.RECORD_AUDIO|android.permission.CAPTURE_AUDIO_HOTWORD
<android.os.Vibrator: boolean setAlwaysOnEffect(int,VibrationEffect,VibrationAttributes)>|android.permission.VIBRATE_ALWAYS_ON
<android.telephony.ims.RegistrationManager: void unregisterImsRegistrationCallback(RegistrationCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.widget.TextView: void setTextOperationUser(UserHandle)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.telephony.TelephonyManager: String iccTransmitApduBasicChannelByPort(int,int,int,int,int,int,int,String)>|android.permission.MODIFY_PHONE_STATE
<android.net.NetworkScoreManager: boolean clearScores()>|android.permission.SCORE_NETWORKS|android.permission.REQUEST_NETWORK_SCORES
<android.hardware.hdmi.HdmiControlManager: void setHdmiCecEnabled(int)>|android.permission.HDMI_CEC
<android.telephony.TelephonyManager: String getAidForAppType(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.print.PrintManager: void removePrintServiceRecommendationsChangeListener(PrintServiceRecommendationsChangeListener)>|android.permission.READ_PRINT_SERVICE_RECOMMENDATIONS
<com.android.server.companion.virtual.VirtualDeviceImpl: void onAudioSessionStarting(int,IAudioRoutingCallback,IAudioConfigChangedCallback)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.telephony.ims.ProvisioningManager: void registerProvisioningChangedCallback(Executor,Callback)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.UserManager: Set<String> getPreInstallableSystemPackages(String)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.content.ContextParams.Builder: Builder setRenouncedPermissions(Set<String>)>|android.permission.RENOUNCE_PERMISSIONS
<android.telephony.PhoneStateListener: void onBarringInfoChanged(BarringInfo)>|android.permission.READ_PRECISE_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<android.hardware.input.VirtualKeyboard: void sendKeyEvent(VirtualKeyEvent)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.telephony.TelephonyManager: void requestCellInfoUpdate(Executor,CellInfoCallback)>|android.permission.ACCESS_FINE_LOCATION
<android.content.pm.PackageManager: void setComponentEnabledSetting(ComponentName,int,int)>|android.permission.CHANGE_COMPONENT_ENABLED_STATE
<android.location.LocationManager: void setLocationControllerExtraPackageEnabled(boolean)>|android.permission.LOCATION_HARDWARE
<android.hardware.SensorPrivacyManager: boolean requiresAuthentication()>|android.permission.OBSERVE_SENSOR_PRIVACY
<android.companion.AssociationRequest.Builder: Builder setSelfManaged(boolean)>|android.permission.REQUEST_COMPANION_SELF_MANAGED
<android.os.IncidentManager: void approveReport(Uri)>|android.permission.APPROVE_INCIDENT_REPORTS
<android.telephony.TelephonyManager: int getCallState()>|android.permission.READ_PHONE_STATE
<android.content.Context: void sendBroadcastAsUser(Intent,UserHandle,String)>|android.permission.INTERACT_ACROSS_USERS
<android.media.AudioManager: void setDeviceVolumeBehavior(AudioDeviceAttributes,int)>|android.permission.MODIFY_AUDIO_ROUTING
<android.os.BugreportManager: void startBugreport(ParcelFileDescriptor,ParcelFileDescriptor,BugreportParams,Executor,BugreportCallback)>|android.permission.DUMP
<android.app.backup.BackupManager: int requestBackup(String[],BackupObserver)>|android.permission.BACKUP
<android.hardware.display.ColorDisplayManager: boolean setReduceBrightColorsStrength(int)>|android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS
<android.os.UserManager: void setSeedAccountData(int,String,String,PersistableBundle)>|android.permission.MANAGE_USERS
<android.telephony.PhoneStateListener: void onOutgoingEmergencySms(EmergencyNumber)>|android.permission.READ_ACTIVE_EMERGENCY_SESSION
<android.telephony.TelephonyCallback.LinkCapacityEstimateChangedListener: void onLinkCapacityEstimateChanged(List<LinkCapacityEstimate>)>|android.permission.READ_PRECISE_PHONE_STATE
<android.content.pm.PackageManager: boolean setAutoRevokeWhitelisted(String,boolean)>|android.permission.WHITELIST_AUTO_REVOKE_PERMISSIONS
<android.telephony.euicc.EuiccManager: void setSupportedCountries(List<String>)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.telephony.TelephonyManager: int getCarrierPrivilegeStatus(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.backup.BackupManager: Intent getDataManagementIntent(String)>|android.permission.BACKUP
<android.location.LocationManager: void requestSingleUpdate(Criteria,PendingIntent)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.app.ActivityManager: boolean isProfileForeground(UserHandle)>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.content.pm.PackageManager: String[] setDistractingPackageRestrictions(String[],int)>|android.permission.SUSPEND_APPS
<android.telephony.TelephonyManager: String getMeid()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.BatteryStatsManager: List<BatteryUsageStats> getBatteryUsageStats(List<BatteryUsageStatsQuery>)>|android.permission.BATTERY_STATS
<android.os.VibratorManager: void vibrate(CombinedVibration)>|android.permission.VIBRATE
<android.telephony.TelephonyManager: boolean isVoNrEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: int getVoiceActivationState(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.hardware.usb.UsbManager: int getUsbBandwidthMbps()>|android.permission.MANAGE_USB
<android.app.admin.DevicePolicyManager: boolean getBluetoothContactSharingDisabled(UserHandle)>|android.permission.permission.INTERACT_ACROSS_USERS
<android.service.voice.AlwaysOnHotwordDetector: ModelParamRange queryParameter(int)>|android.permission.RECORD_AUDIO|android.permission.CAPTURE_AUDIO_HOTWORD
<android.app.admin.DevicePolicyManager: void clearOrganizationId()>|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.os.UserManager: boolean hasUserRestrictionForUser(String,int)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.security.keystore.recovery.RecoverySession: byte[] start(String,CertPath,byte[],byte[],List<KeyChainProtectionParams>)>|android.permission.RECOVER_KEYSTORE
<android.os.UserManager: boolean requestQuietModeEnabled(boolean,UserHandle,IntentSender)>|android.permission.MANAGE_USERS
<android.telephony.TelephonyManager: boolean supplyPuk(String,String)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.usb.UsbPort: int enableUsbData(boolean)>|android.permission.MANAGE_USB
<android.hardware.fingerprint.FingerprintManager: List<Fingerprint> getEnrolledFingerprints()>|android.permission.USE_FINGERPRINT
<android.hardware.location.ContextHubManager: ContextHubTransaction<List<NanoAppState>> queryNanoApps(ContextHubInfo)>|android.permission.ACCESS_CONTEXT_HUB
<android.telephony.PhoneStateListener: void onOutgoingEmergencyCall(EmergencyNumber)>|android.permission.READ_ACTIVE_EMERGENCY_SESSION
<android.hardware.face.FaceManager: List<Face> getEnrolledFaces()>|android.permission.MANAGE_BIOMETRIC
<android.companion.CompanionDeviceManager: void associate(String,MacAddress,byte[])>|android.permission.ASSOCIATE_COMPANION_DEVICES
<android.nfc.NfcAdapter: boolean removeNfcUnlockHandler(NfcUnlockHandler)>|android.permission.WRITE_SECURE_SETTINGS
<android.hardware.face.FaceManager: void setFeature(int,int,boolean,byte[],SetFeatureCallback)>|android.permission.MANAGE_BIOMETRIC
<android.content.om.OverlayManager: void setEnabled(String,boolean,UserHandle)>|android.permission."android.permission.INTERACT_ACROSS_USERS"|android.permission."android.permission.INTERACT_ACROSS_USERS_FULL"
<android.telephony.TelephonyManager: int getCarrierIdFromMccMnc(String)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.SmsManager: int getSmsCapacityOnIcc()>|android.permission.READ_PHONE_STATE|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.location.LocationManager: boolean isAutomotiveGnssSuspended()>|android.permission.CONTROL_AUTOMOTIVE_GNSS
<android.telephony.TelephonyCallback.AllowedNetworkTypesListener: void onAllowedNetworkTypesChanged(int,long)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.companion.virtual.audio.VirtualAudioDevice: AudioInjection startAudioInjection(AudioFormat)>|android.permission.MODIFY_AUDIO_ROUTING
<android.media.AudioManager: void setA2dpSuspended(boolean)>|android.permission.BLUETOOTH_STACK
<android.telephony.TelephonyManager: void call(String,String)>|android.permission.CALL_PHONE
<android.provider.DeviceConfig: long getLong(String,String,long)>|android.permission.READ_DEVICE_CONFIG
<android.telephony.euicc.EuiccManager: List<String> getUnsupportedCountries()>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.app.admin.DevicePolicyManager: boolean isNewUserDisclaimerAcknowledged()>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.os.Vibrator: void addVibratorStateListener(Executor,OnVibratorStateChangedListener)>|android.permission.ACCESS_VIBRATOR_STATE
<android.telephony.TelephonyManager: IccOpenLogicalChannelResponse iccOpenLogicalChannelByPort(int,int,String,int)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: ServiceState getServiceState()>|android.permission.READ_PHONE_STATE|android.permission.ACCESS_COARSE_LOCATION
<android.app.AlarmManager: void set(int,long,long,long,PendingIntent,WorkSource)>|android.permission.UPDATE_DEVICE_STATS
<android.content.rollback.RollbackManager: void commitRollback(int,List<VersionedPackage>,IntentSender)>|android.permission.MANAGE_ROLLBACKS|android.permission.TEST_MANAGE_ROLLBACKS
<android.app.admin.DevicePolicyManager: int checkProvisioningPrecondition(String,String)>|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.net.NetworkScoreManager: void unregisterNetworkScoreCache(int,INetworkScoreCache)>|android.permission.REQUEST_NETWORK_SCORES
<android.hardware.biometrics.BiometricPrompt.Builder: Builder setUseDefaultTitle()>|android.permission.USE_BIOMETRIC_INTERNAL
<android.telephony.AnomalyReporter: void initialize(Context)>|android.permission.MODIFY_PHONE_STATE
<android.content.pm.PackageManager: void grantRuntimePermission(String,String,UserHandle)>|android.permission.GRANT_RUNTIME_PERMISSIONS
<android.hardware.display.ColorDisplayManager: boolean setReduceBrightColorsActivated(boolean)>|android.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS
<android.app.Activity: void startActivityAsUser(Intent,Bundle,UserHandle)>|android.permission.INTERACT_ACROSS_USERS|android.permission.INTERACT_ACROSS_USERS_FULL
<android.app.admin.DevicePolicyManager: String getProfileOwnerNameAsUser(int)>|android.permission.MANAGE_USERS|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.telephony.ims.ImsMmTelManager: void unregisterMmTelCapabilityCallback(CapabilityCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.app.AppOpsManager: void resetPackageOpsNoHistory(String)>|android.permission.MANAGE_APPOPS
<android.telephony.TelephonyManager: List<TelephonyHistogram> getTelephonyHistograms()>|android.permission.MODIFY_PHONE_STATE
<android.provider.DeviceConfig: String getString(String,String,String)>|android.permission.READ_DEVICE_CONFIG
<android.permission.PermissionControllerManager: void getAppPermissions(String,OnGetAppPermissionResultCallback,Handler)>|android.permission.GET_RUNTIME_PERMISSIONS
<com.android.server.content.ContentService: void putCache(String,Uri,Bundle,int)>|android.permission.CACHE_CONTENT
<android.telephony.PhoneStateListener: void onSrvccStateChanged(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.ServiceState: int getCdmaNetworkId()>|android.permission.ACCESS_FINE_LOCATION|android.permission.ACCESS_COARSE_LOCATION
<android.view.translation.UiTranslationManager: void pauseTranslation(ActivityId)>|android.permission.MANAGE_UI_TRANSLATION
<android.hardware.biometrics.BiometricTestSession: void cleanupInternalState(int)>|android.permission.TEST_BIOMETRIC
<android.app.DreamManager: void setScreensaverEnabled(boolean)>|android.permission.WRITE_SECURE_SETTINGS
<android.media.AudioManager: int requestAudioFocusForTest(AudioFocusRequest,String,int,int)>|android.permission."android.permission.QUERY_AUDIO_STATE"
<android.net.NetworkScoreManager: void registerNetworkScoreCache(int,INetworkScoreCache,int)>|android.permission.REQUEST_NETWORK_SCORES
<android.location.LocationManager: boolean registerGnssBatchedLocationCallback(long,boolean,BatchedLocationCallback,Handler)>|android.permission.LOCATION_HARDWARE|android.permission.UPDATE_APP_OPS_STATS
<android.telephony.PhoneStateListener: void onImsCallDisconnectCauseChanged(ImsReasonInfo)>|android.permission.READ_PRECISE_PHONE_STATE
<android.app.ActivityManager: boolean clearApplicationUserData(String,IPackageDataObserver)>|android.permission.CLEAR_APP_USER_DATA|android.permission.ACCESS_INSTANT_APPS
<android.content.pm.PackageManager: boolean addWhitelistedRestrictedPermission(String,String,int)>|android.permission.WHITELIST_RESTRICTED_PERMISSIONS
<android.os.BatteryStatsManager: void reportWifiRssiChanged(int)>|android.permission.UPDATE_DEVICE_STATS
<android.provider.DeviceConfig: boolean getBoolean(String,String,boolean)>|android.permission.READ_DEVICE_CONFIG
<android.hardware.face.FaceManager: void enroll(int,byte[],CancellationSignal,EnrollmentCallback,int[],Surface,boolean)>|android.permission.MANAGE_BIOMETRIC
<android.app.AlarmManager: void setPrioritized(int,long,long,String,Executor,OnAlarmListener)>|android.permission.SCHEDULE_PRIORITIZED_ALARM
<android.app.admin.DevicePolicyManager: boolean isManagedKiosk()>|android.permission.MANAGE_USERS|android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.content.pm.CrossProfileApps: void setInteractAcrossProfilesAppOp(String,int)>|android.permission.CONFIGURE_INTERACT_ACROSS_PROFILES|android.permission.INTERACT_ACROSS_USERS
<android.app.admin.DevicePolicyManager: boolean isDeviceProvisioned()>|android.permission.MANAGE_USERS
<android.os.Vibrator: boolean setAlwaysOnEffect(int,String,int,VibrationEffect,VibrationAttributes)>|android.permission.VIBRATE_ALWAYS_ON
<android.net.NetworkScoreManager: void registerNetworkScoreCache(int,INetworkScoreCache)>|android.permission.REQUEST_NETWORK_SCORES
<android.hardware.input.VirtualMouse: void sendButtonEvent(VirtualMouseButtonEvent)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.hardware.usb.UsbManager: boolean enableUsbDataSignal(boolean)>|android.permission.MANAGE_USB
<android.os.UserManager: boolean canHaveRestrictedProfile()>|android.permission.MANAGE_USERS
<android.os.PowerManager: void setBatteryDischargePrediction(Duration,boolean)>|android.permission.BATTERY_PREDICTION|android.permission.DEVICE_POWER
<android.view.Display: void setUserPreferredDisplayMode(Mode)>|android.permission.MODIFY_USER_PREFERRED_DISPLAY_MODE
<android.app.UiModeManager: boolean releaseProjection(int)>|android.permission.TOGGLE_AUTOMOTIVE_PROJECTION
<android.app.StatusBarManager: void updateMediaTapToTransferSenderDisplay(int,MediaRoute2Info,Executor,Runnable)>|android.permission.MEDIA_CONTENT_CONTROL
<com.android.server.wm.WindowManagerService: void addKeyguardLockedStateListener(IKeyguardLockedStateListener)>|android.permission.SUBSCRIBE_TO_KEYGUARD_LOCKED_STATE
<android.telephony.euicc.EuiccManager: void eraseSubscriptions(PendingIntent)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.telecom.TelecomManager: void startConference(List<Uri>,Bundle)>|android.permission.CALL_PHONE
<android.content.pm.PackageManager: void setHarmfulAppWarning(String,CharSequence)>|android.permission.SET_HARMFUL_APP_WARNINGS
<android.app.BroadcastOptions: void recordResponseEventWhileInBackground(long)>|android.permission.ACCESS_BROADCAST_RESPONSE_STATS
<android.app.GameManager: GameModeInfo getGameModeInfo(String)>|android.permission.MANAGE_GAME_MODE
<android.telephony.ims.ImsMmTelManager: ImsMmTelManager createForSubscriptionId(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.telephony.SubscriptionManager: void restoreAllSimSpecificSettingsFromBackup(byte[])>|android.permission.MODIFY_PHONE_STATE
<android.app.backup.BackupManager: long getAvailableRestoreToken(String)>|android.permission.BACKUP
