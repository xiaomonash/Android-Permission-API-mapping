<android.app.WallpaperManager: void clearWallpaper()>|android.permission.SET_WALLPAPER
<android.os.UserManager: boolean requestQuietModeEnabled(boolean,UserHandle)>|android.permission.MANAGE_USERS|android.permission.MODIFY_QUIET_MODE
<android.nfc.cardemulation.CardEmulation: List<String> getAidsForPreferredPaymentService()>|android.permission.NFC_PREFERRED_PAYMENT_INFO
<android.telephony.euicc.EuiccManager: void switchToSubscription(int,PendingIntent)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.telephony.SubscriptionManager: SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int)>|android.permission.READ_PHONE_STATE
<android.telecom.TelecomManager: PhoneAccountHandle getDefaultOutgoingPhoneAccount(String)>|android.permission.READ_PHONE_STATE
<android.os.image.DynamicSystemManager.Session: boolean getAvbPublicKey(AvbPublicKey)>|android.permission.MANAGE_DYNAMIC_SYSTEM
<com.android.shell.BugreportRequestedReceiver: void onReceive(Context,Intent)>|android.permission.TRIGGER_SHELL_BUGREPORT
<android.telecom.TelecomManager: List<PhoneAccountHandle> getOwnSelfManagedPhoneAccounts()>|android.permission.MANAGE_OWN_CALLS
<android.telephony.TelephonyManager: boolean doesSwitchMultiSimConfigTriggerReboot()>|android.permission.READ_PHONE_STATE
<android.content.pm.PackageManager: void setComponentEnabledSettings(List<ComponentEnabledSetting>)>|android.permission.CHANGE_COMPONENT_ENABLED_STATE
<android.content.pm.PackageManager: boolean removeWhitelistedRestrictedPermission(String,String,int)>|android.permission.WHITELIST_RESTRICTED_PERMISSIONS
<android.telephony.ServiceState: String getOperatorAlphaLong()>|android.permission.ACCESS_FINE_LOCATION|android.permission.ACCESS_COARSE_LOCATION
<android.companion.virtual.VirtualDeviceManager.VirtualDevice: void setShowPointerIcon(boolean)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.hardware.biometrics.BiometricManager.Strings: CharSequence getButtonLabel()>|android.permission.USE_BIOMETRIC
<android.content.pm.PackageInstaller: void installExistingPackage(String,int,IntentSender)>|android.permission.INSTALL_PACKAGES|android.permission.INSTALL_EXISTING_PACKAGES
<android.telephony.TelephonyManager: String getVoiceMailAlphaTag()>|android.permission.READ_PHONE_STATE
<android.content.pm.CrossProfileApps: void startActivity(Intent,UserHandle,Activity)>|android.permission.INTERACT_ACROSS_PROFILES|android.permission.INTERACT_ACROSS_USERS
<android.app.WallpaperManager: int setResource(int,int)>|android.permission.SET_WALLPAPER
<android.telephony.ims.ImsMmTelManager: boolean isVoWiFiRoamingSettingEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.app.WallpaperManager: Drawable getDrawable()>|android.permission.READ_EXTERNAL_STORAGE
<android.hardware.lights.SystemLightsManager.SystemLightsSession: void requestLights(LightsRequest)>|android.permission.CONTROL_DEVICE_LIGHTS
<android.telephony.TelephonyManager: boolean switchSlots(int[])>|android.permission.MODIFY_PHONE_STATE
<android.location.LocationManager: void requestLocationUpdates(String,long,float,LocationListener,Looper)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyManager: NetworkScan requestNetworkScan(int,NetworkScanRequest,Executor,NetworkScanCallback)>|android.permission.MODIFY_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<android.telephony.ims.RegistrationManager: void registerImsRegistrationCallback(Executor,RegistrationCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.UserManager: boolean isUserUnlocked(UserHandle)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.telephony.TelephonyManager: CellLocation getCellLocation()>|android.permission.ACCESS_FINE_LOCATION
<android.os.image.DynamicSystemManager.Session: boolean setAshmem(ParcelFileDescriptor,long)>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.app.WallpaperManager: int setBitmap(Bitmap,Rect,boolean)>|android.permission.SET_WALLPAPER
<com.android.server.pm.verify.domain.DomainVerificationManagerInternal: int setDomainVerificationStatusInternal(int,UUID,Set<String>,int)>|android.permission.DOMAIN_VERIFICATION_AGENT
<android.telephony.TelephonyCallback.MessageWaitingIndicatorListener: void onMessageWaitingIndicatorChanged(boolean)>|android.permission.READ_PHONE_STATE
<android.hardware.biometrics.BiometricManager.Strings: CharSequence getSettingName()>|android.permission.USE_BIOMETRIC
<android.app.admin.DevicePolicyManager: int getNearbyAppStreamingPolicy()>|android.permission.READ_NEARBY_STREAMING_POLICY
<android.os.image.DynamicSystemManager.Session: boolean submitFromAshmem(int)>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.os.UserManager: Bundle getUserRestrictions(UserHandle)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<com.android.server.inputmethod.InputMethodManagerService.ShellCommandImpl: int onCommand(String)>|android.permission.DUMP|android.permission.INTERACT_ACROSS_USERS_FULL|android.permission.WRITE_SECURE_SETTINGS
<android.foo.IColorService: void red()>|android.permission.RED
<android.telephony.ims.ProvisioningManager: boolean getProvisioningStatusForCapability(int,int)>|android.permission.READ_PRECISE_PHONE_STATE
<android.location.LocationManager: void requestLocationUpdates(String,LocationRequest,PendingIntent)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.os.PowerManager: void reboot(String)>|android.permission.permission.REBOOT
<com.android.server.pm.DexOptHelper: void performPackageDexOptUpgradeIfNeeded()>|android.permission.READ_DEVICE_CONFIG
<android.telephony.ims.ImsMmTelManager: boolean isVtSettingEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.telephony.TelephonyCallback.CellInfoListener: void onCellInfoChanged(List<CellInfo>)>|android.permission.READ_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<android.telephony.ims.ProvisioningManager: void registerFeatureProvisioningChangedCallback(Executor,FeatureProvisioningCallback)>|android.permission.READ_PRECISE_PHONE_STATE
<android.telephony.TelephonyCallback.RegistrationFailedListener: void onRegistrationFailed(CellIdentity,String,int,int,int)>|android.permission.READ_PRECISE_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<com.android.server.power.PowerManagerService.BinderService: boolean isLowPowerStandbySupported()>|android.permission.MANAGE_LOW_POWER_STANDBY|android.permission.DEVICE_POWER
<android.telephony.SmsManager: String getSmscAddress()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.ims.ImsMmTelManager: void registerMmTelCapabilityCallback(Executor,CapabilityCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.content.Context: void sendStickyBroadcastAsUser(Intent,UserHandle)>|android.permission.INTERACT_ACROSS_USERS|android.permission.BROADCAST_STICKY
<android.telephony.TelephonyManager: String getImei(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: long getSupportedRadioAccessFamily()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.UserManager: int getUserCount()>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS
<android.telephony.TelephonyManager: NetworkScan requestNetworkScan(NetworkScanRequest,NetworkScanCallback)>|android.permission.MODIFY_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyManager: String getDeviceId()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: void switchMultiSimConfig(int)>|android.permission.MODIFY_PHONE_STATE
<android.app.admin.SecurityLog: int writeEvent(int,Object)>|android.permission.WRITE_SECURITY_LOG
<android.telephony.ims.ImsRcsManager: void getRegistrationState(Executor,Consumer<Integer>)>|android.permission.READ_PRECISE_PHONE_STATE
<android.hardware.biometrics.BiometricManager: int canAuthenticate()>|android.permission.USE_BIOMETRIC
<android.telephony.TelephonyManager: Map<Integer, List<EmergencyNumber>> getEmergencyNumberList(int)>|android.permission.READ_PHONE_STATE
<android.os.UserManager: boolean isUserRunning(UserHandle)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.telecom.TelecomManager: List<PhoneAccountHandle> getCallCapablePhoneAccounts()>|android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: String getDeviceId(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.LocaleManager: LocaleList getApplicationLocales(String)>|android.permission.READ_APP_SPECIFIC_LOCALES
<android.telephony.SubscriptionManager: void setCarrierPhoneNumber(int,String)>|android.permission."carrier privileges"
<android.location.LocationManager: void addProximityAlert(double,double,float,long,PendingIntent)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.companion.CompanionDeviceManager: void associate(AssociationRequest,Callback,Handler)>|android.permission.REQUEST_COMPANION_PROFILE_WATCH|android.permission.REQUEST_COMPANION_PROFILE_COMPUTER|android.permission.REQUEST_COMPANION_PROFILE_APP_STREAMING|android.permission.REQUEST_COMPANION_PROFILE_AUTOMOTIVE_PROJECTION
<android.location.LocationManager: boolean registerGnssNavigationMessageCallback(Executor,Callback)>|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyManager: PhoneAccountHandle getPhoneAccountHandle()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: String getMeid(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.ims.ImsMmTelManager: int getVoWiFiModeSetting()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.telephony.TelephonyManager: int isMultiSimSupported()>|android.permission.READ_PHONE_STATE
<android.telephony.SubscriptionManager: List<SubscriptionInfo> getOpportunisticSubscriptions()>|android.permission.READ_PHONE_STATE
<android.companion.CompanionDeviceManager: void associate(AssociationRequest,Executor,Callback)>|android.permission.REQUEST_COMPANION_PROFILE_WATCH|android.permission.REQUEST_COMPANION_PROFILE_COMPUTER|android.permission.REQUEST_COMPANION_PROFILE_APP_STREAMING|android.permission.REQUEST_COMPANION_PROFILE_AUTOMOTIVE_PROJECTION
<android.nfc.cardemulation.CardEmulation: boolean setOffHostForService(ComponentName,String)>|android.permission.NFC
<android.telephony.ims.ImsRcsManager: void getRegistrationTransportType(Executor,Consumer<Integer>)>|android.permission.READ_PRECISE_PHONE_STATE
<android.hardware.biometrics.BiometricManager: int canAuthenticate(int)>|android.permission.USE_BIOMETRIC
<android.telephony.TelephonyManager: String[] getForbiddenPlmns()>|android.permission.READ_PHONE_STATE
<android.hardware.camera2.CameraManager: void openCamera(String,StateCallback,Handler)>|android.permission.CAMERA
<android.content.Context: void removeStickyBroadcast(Intent)>|android.permission.BROADCAST_STICKY
<android.telecom.TelecomManager: void placeCall(Uri,Bundle)>|android.permission.CALL_PHONE|android.permission.MANAGE_OWN_CALLS
<android.telephony.ims.ImsMmTelManager: void getRegistrationTransportType(Executor,Consumer<Integer>)>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.media.AudioRecord.Builder: AudioRecord build()>|android.permission.RECORD_AUDIO
<android.location.LocationManager: boolean registerGnssMeasurementsCallback(Callback)>|android.permission.ACCESS_FINE_LOCATION
<android.telephony.SubscriptionManager: List<SubscriptionInfo> getActiveSubscriptionInfoList()>|android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: void getNetworkSlicingConfiguration(Executor,OutcomeReceiver<NetworkSlicingConfig, NetworkSlicingException>)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.companion.virtual.VirtualDeviceParams.Builder: Builder setLockState(int)>|android.permission.ADD_ALWAYS_UNLOCKED_DISPLAY
<android.telephony.TelephonyManager: int setForbiddenPlmns(List<String>)>|android.permission.MODIFY_PHONE_STATE
<android.telecom.TelecomManager: void showInCallScreen(boolean)>|android.permission.READ_PHONE_STATE
<android.app.WallpaperManager: ParcelFileDescriptor getWallpaperFile(int)>|android.permission.READ_EXTERNAL_STORAGE
<android.location.LocationManager: boolean registerGnssStatusCallback(Executor,Callback)>|android.permission.ACCESS_FINE_LOCATION
<android.location.LocationManager: void requestLocationUpdates(String,long,float,Executor,LocationListener)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyManager: void setDataEnabled(boolean)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.camera2.CameraManager: void openCamera(String,Executor,StateCallback)>|android.permission.CAMERA
<android.telephony.ims.ProvisioningManager: boolean isProvisioningRequiredForCapability(int,int)>|android.permission.READ_PRECISE_PHONE_STATE
<android.content.pm.PackageInstaller: void uninstall(String,IntentSender)>|android.permission.DELETE_PACKAGES|android.permission.REQUEST_DELETE_PACKAGES
<android.telephony.TelephonyManager: void setSignalStrengthUpdateRequest(SignalStrengthUpdateRequest)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyCallback.CellLocationListener: void onCellLocationChanged(CellLocation)>|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyCallback.CallDisconnectCauseListener: void onCallDisconnectCauseChanged(int,int)>|android.permission.READ_PRECISE_PHONE_STATE
<android.telephony.SubscriptionManager: boolean isActiveSubscriptionId(int)>|android.permission.READ_PHONE_STATE
<android.location.LocationManager: boolean addNmeaListener(NmeaListener)>|android.permission.ACCESS_FINE_LOCATION
<android.telephony.PhoneStateListener: void onActiveDataSubscriptionIdChanged(int)>|android.permission.READ_PHONE_STATE
<android.os.Vibrator: void vibrate(long[],int)>|android.permission.VIBRATE
<android.telephony.TelephonyManager: String getSubscriberId()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.companion.CompanionDeviceManager: void startObservingDevicePresence(String)>|android.permission.REQUEST_OBSERVE_COMPANION_DEVICE_PRESENCE
<android.app.WallpaperManager: Drawable peekFastDrawable()>|android.permission.READ_EXTERNAL_STORAGE
<android.location.LocationManager: void requestSingleUpdate(String,LocationListener,Looper)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.content.pm.PackageManager: boolean isAutoRevokeWhitelisted(String)>|android.permission.WHITELIST_AUTO_REVOKE_PERMISSIONS
<android.hardware.biometrics.BiometricPrompt: void authenticate(CancellationSignal,Executor,AuthenticationCallback)>|android.permission.USE_BIOMETRIC
<android.telephony.TelephonyCallback.ActiveDataSubscriptionIdListener: void onActiveDataSubscriptionIdChanged(int)>|android.permission.READ_PHONE_STATE
<android.telephony.PhoneStateListener: void onEmergencyNumberListChanged(Map<Integer, List<EmergencyNumber>>)>|android.permission.READ_PHONE_STATE
<android.telephony.PhoneStateListener: void onDisplayInfoChanged(TelephonyDisplayInfo)>|android.permission.READ_PHONE_STATE
<android.os.VibratorManager: void cancel()>|android.permission.VIBRATE
<android.os.storage.StorageManager: PendingIntent getManageSpaceActivityIntent(String,int)>|android.permission.MANAGE_EXTERNAL_STORAGE
<android.nfc.cardemulation.CardEmulation: String getRouteDestinationForPreferredPaymentService()>|android.permission.NFC_PREFERRED_PAYMENT_INFO
<android.location.LocationManager: boolean addNmeaListener(OnNmeaMessageListener,Handler)>|android.permission.ACCESS_FINE_LOCATION
<android.companion.CompanionDeviceManager: void stopObservingDevicePresence(String)>|android.permission.REQUEST_OBSERVE_COMPANION_DEVICE_PRESENCE
<android.telecom.TelecomManager: PhoneAccountHandle getUserSelectedOutgoingPhoneAccount()>|android.permission.READ_PHONE_STATE
<android.os.Vibrator: void cancel()>|android.permission.VIBRATE
<android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints()>|android.permission.USE_FINGERPRINT
<com.android.server.os.BugreportManagerServiceImpl: void startBugreport(int,String,FileDescriptor,FileDescriptor,int,IDumpstateListener,boolean)>|android.permission.DUMP
<android.nfc.cardemulation.CardEmulation: boolean unsetOffHostForService(ComponentName)>|android.permission.NFC
<android.location.LocationManager: boolean registerGnssStatusCallback(Callback)>|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyManager: boolean isModemEnabledForSlot(int)>|android.permission.READ_PHONE_STATE|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: void setAllowedNetworkTypesForReason(int,long)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.ims.ImsMmTelManager: void unregisterImsRegistrationCallback(RegistrationCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.location.LocationManager: boolean registerGnssStatusCallback(Callback,Handler)>|android.permission.ACCESS_FINE_LOCATION
<android.content.Context: void sendStickyBroadcast(Intent)>|android.permission.BROADCAST_STICKY
<com.android.server.location.LocationManagerService: boolean isAutomotiveGnssSuspended()>|android.permission.CONTROL_AUTOMOTIVE_GNSS
<android.companion.virtual.VirtualDeviceManager.VirtualDevice: VirtualAudioDevice createVirtualAudioDevice(VirtualDisplay,Executor,AudioConfigurationChangeCallback)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.os.Vibrator: void vibrate(VibrationEffect,AudioAttributes)>|android.permission.VIBRATE
<android.telephony.TelephonyManager: int getDataNetworkType()>|android.permission.READ_PHONE_STATE|android.permission.READ_BASIC_PHONE_STATE
<com.android.server.power.PowerManagerService.BinderService: void setLowPowerStandbyActiveDuringMaintenance(boolean)>|android.permission.MANAGE_LOW_POWER_STANDBY|android.permission.DEVICE_POWER
<android.telephony.TelephonyManager: List<UiccCardInfo> getUiccCardsInfo()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.Vibrator: void vibrate(VibrationEffect,VibrationAttributes)>|android.permission.VIBRATE
<android.app.admin.DevicePolicyManager: int getNearbyNotificationStreamingPolicy()>|android.permission.READ_NEARBY_STREAMING_POLICY
<android.telecom.TelecomManager: void silenceRinger()>|android.permission.MODIFY_PHONE_STATE
<com.android.settingslib.bluetooth.LocalBluetoothManager: LocalBluetoothManager create(Context,Handler,UserHandle)>|android.permission.INTERACT_ACROSS_USERS_FULL
<android.location.LocationManager: void getCurrentLocation(String,CancellationSignal,Executor,Consumer<Location>)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.location.LocationManager: boolean addNmeaListener(OnNmeaMessageListener)>|android.permission.ACCESS_FINE_LOCATION
<com.android.server.power.PowerManagerService.BinderService: void forceLowPowerStandbyActive(boolean)>|android.permission.MANAGE_LOW_POWER_STANDBY|android.permission.DEVICE_POWER
<android.telephony.TelephonyCallback.ImsCallDisconnectCauseListener: void onImsCallDisconnectCauseChanged(ImsReasonInfo)>|android.permission.READ_PRECISE_PHONE_STATE
<android.hardware.biometrics.BiometricManager.Strings: CharSequence getPromptMessage()>|android.permission.USE_BIOMETRIC
<android.app.AlarmManager: void setTime(long)>|android.permission.SET_TIME
<android.location.LocationManager: void requestLocationUpdates(long,float,Criteria,Executor,LocationListener)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.telephony.SubscriptionManager: String getPhoneNumber(int)>|android.permission.READ_PHONE_NUMBERS|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission."carrier privileges"
<android.telephony.SubscriptionManager: void addSubscriptionsIntoGroup(List<Integer>,ParcelUuid)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.SubscriptionManager: ParcelUuid createSubscriptionGroup(List<Integer>)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.euicc.EuiccManager: void downloadSubscription(DownloadableSubscription,boolean,PendingIntent)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.location.LocationManager: void requestLocationUpdates(long,float,Criteria,LocationListener,Looper)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.os.storage.StorageManager: List<StorageVolume> getStorageVolumesIncludingSharedProfiles()>|android.permission.MANAGE_EXTERNAL_STORAGE
<android.location.LocationManager: Location getLastKnownLocation(String)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyManager: NetworkScan requestNetworkScan(NetworkScanRequest,Executor,NetworkScanCallback)>|android.permission.MODIFY_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<android.app.WallpaperManager: int setStream(InputStream,Rect,boolean,int)>|android.permission.SET_WALLPAPER
<android.telephony.TelephonyManager: long getAllowedNetworkTypesForReason(int)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.content.Context: void sendOrderedBroadcastAsUser(Intent,UserHandle,String,BroadcastReceiver,Handler,int,String,Bundle)>|android.permission.INTERACT_ACROSS_USERS
<android.app.AlarmManager: void setExact(int,long,PendingIntent)>|android.permission.SCHEDULE_EXACT_ALARM
<android.telephony.ServiceState: String getOperatorNumeric()>|android.permission.ACCESS_FINE_LOCATION|android.permission.ACCESS_COARSE_LOCATION
<android.companion.virtual.VirtualDeviceManager.VirtualDevice: VirtualTouchscreen createVirtualTouchscreen(VirtualDisplay,String,int,int)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.telephony.TelephonyManager: List<CellInfo> getAllCellInfo()>|android.permission.ACCESS_FINE_LOCATION
<android.telephony.CarrierConfigManager: PersistableBundle getConfig()>|android.permission.READ_PHONE_STATE
<android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()>|android.permission.USE_FINGERPRINT
<android.telephony.TelephonyManager: String getSimSerialNumber()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.ims.ProvisioningManager: boolean isRcsProvisioningRequiredForCapability(int,int)>|android.permission.READ_PRECISE_PHONE_STATE
<android.security.FileIntegrityManager: boolean isAppSourceCertificateTrusted(X509Certificate)>|android.permission.INSTALL_PACKAGES|android.permission.REQUEST_INSTALL_PACKAGES
<android.companion.virtual.VirtualDeviceManager.VirtualDevice: VirtualKeyboard createVirtualKeyboard(VirtualDisplay,String,int,int)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.telephony.SubscriptionManager: int getActiveSubscriptionInfoCount()>|android.permission.READ_PHONE_STATE
<android.telephony.ims.ImsMmTelManager: void registerImsRegistrationCallback(Executor,RegistrationCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<com.android.server.companion.virtual.VirtualDeviceImpl: void onAudioSessionEnded()>|android.permission.CREATE_VIRTUAL_DEVICE
<android.app.admin.DevicePolicyManager: int getPasswordComplexity()>|android.permission.REQUEST_PASSWORD_COMPLEXITY
<com.android.server.os.BugreportManagerServiceImpl: void cancelBugreport(int,String)>|android.permission.DUMP
<android.hardware.camera2.CameraManager: boolean isConcurrentSessionConfigurationSupported(Map<String, SessionConfiguration>)>|android.permission.CAMERA
<android.location.LocationManager: boolean addNmeaListener(Executor,OnNmeaMessageListener)>|android.permission.ACCESS_FINE_LOCATION
<android.companion.AssociationRequest.Builder: Builder setForceConfirmation(boolean)>|android.permission.REQUEST_COMPANION_SELF_MANAGED
<com.android.server.companion.virtual.audio.VirtualAudioController: void onRecordingConfigChanged(List<AudioRecordingConfiguration>)>|android.permission.MODIFY_AUDIO_ROUTING
<android.telecom.TelecomManager: boolean handleMmi(String)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: boolean setNetworkSelectionModeManual(String,boolean,int)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.ims.ImsMmTelManager: boolean isAdvancedCallingSettingEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.telephony.euicc.EuiccManager: void deleteSubscription(int,PendingIntent)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.telephony.SubscriptionManager: String getPhoneNumber(int,int)>|android.permission.READ_PHONE_NUMBERS|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission."carrier privileges"
<android.telephony.PhoneStateListener: void onCellInfoChanged(List<CellInfo>)>|android.permission.READ_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<android.location.LocationManager: boolean registerGnssMeasurementsCallback(Callback,Handler)>|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyManager: void rebootModem()>|android.permission.MODIFY_PHONE_STATE
<android.app.WallpaperManager: void setStream(InputStream)>|android.permission.SET_WALLPAPER
<android.telephony.TelephonyManager: int getVoiceNetworkType()>|android.permission.READ_PHONE_STATE|android.permission.READ_BASIC_PHONE_STATE
<android.location.LocationManager: void getCurrentLocation(String,LocationRequest,CancellationSignal,Executor,Consumer<Location>)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyManager: String getNai()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: String getGroupIdLevel1()>|android.permission.READ_PHONE_STATE
<android.telephony.PhoneStateListener: void onRegistrationFailed(CellIdentity,String,int,int,int)>|android.permission.READ_PRECISE_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<android.content.pm.CrossProfileApps: void startActivity(Intent,UserHandle,Activity,Bundle)>|android.permission.INTERACT_ACROSS_PROFILES|android.permission.INTERACT_ACROSS_USERS
<android.hardware.fingerprint.FingerprintManager: void authenticate(CryptoObject,CancellationSignal,int,AuthenticationCallback,Handler)>|android.permission.USE_BIOMETRIC|android.permission.USE_FINGERPRINT
<android.telecom.TelecomManager: void acceptRingingCall()>|android.permission.ANSWER_PHONE_CALLS|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: void setDataEnabledForReason(int,boolean)>|android.permission.MODIFY_PHONE_STATE
<android.content.Context: void sendStickyBroadcast(Intent,Bundle)>|android.permission.BROADCAST_STICKY
<android.os.UserManager: boolean isUserRunningOrStopping(UserHandle)>|android.permission.MANAGE_USERS|android.permission.INTERACT_ACROSS_USERS
<android.os.UserManager: String getUserName()>|android.permission.MANAGE_USERS|android.permission.CREATE_USERS|android.permission.QUERY_USERS|android.permission.GET_ACCOUNTS_PRIVILEGED
<android.telephony.ims.RegistrationManager: void unregisterImsRegistrationCallback(RegistrationCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.ServiceState: String getOperatorAlphaShort()>|android.permission.ACCESS_FINE_LOCATION|android.permission.ACCESS_COARSE_LOCATION
<android.telephony.TelephonyManager: boolean isDataConnectionAllowed()>|android.permission.ACCESS_NETWORK_STATE|android.permission.READ_PHONE_STATE|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_BASIC_PHONE_STATE
<android.content.Context: void sendStickyOrderedBroadcast(Intent,BroadcastReceiver,Handler,int,String,Bundle)>|android.permission.BROADCAST_STICKY
<com.android.server.graphics.fonts.FontManagerService: FontConfig getFontConfig()>|android.permission.UPDATE_FONTS
<android.view.Window: void setHideOverlayWindows(boolean)>|android.permission.HIDE_OVERLAY_WINDOWS
<android.app.WallpaperManager: void setBitmap(Bitmap)>|android.permission.SET_WALLPAPER
<android.telephony.euicc.EuiccManager: void switchToSubscription(int,int,PendingIntent)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.telephony.TelephonyManager: boolean isDataRoamingEnabled()>|android.permission.ACCESS_NETWORK_STATE|android.permission.READ_PHONE_STATE|android.permission.READ_BASIC_PHONE_STATE
<android.content.Context: void removeStickyBroadcastAsUser(Intent,UserHandle)>|android.permission.INTERACT_ACROSS_USERS|android.permission.BROADCAST_STICKY
<com.android.server.companion.virtual.VirtualDeviceImpl: void onAudioSessionStarting(int,IAudioRoutingCallback,IAudioConfigChangedCallback)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.telephony.TelephonyCallback.PhysicalChannelConfigListener: void onPhysicalChannelConfigChanged(List<PhysicalChannelConfig>)>|android.permission.READ_PRECISE_PHONE_STATE
<android.os.DropBoxManager: Entry getNextEntry(String,long)>|android.permission.READ_LOGS|android.permission.PACKAGE_USAGE_STATS
<android.hardware.lights.SystemLightsManager.SystemLightsSession: void close()>|android.permission.CONTROL_DEVICE_LIGHTS
<android.telecom.TelecomManager: boolean handleMmi(String,PhoneAccountHandle)>|android.permission.MODIFY_PHONE_STATE
<android.os.Build: String getSerial()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.view.inputmethod.InputMethodManager: boolean setCurrentInputMethodSubtype(InputMethodSubtype)>|android.permission.WRITE_SECURE_SETTINGS
<android.app.ActivityManager: void killBackgroundProcesses(String)>|android.permission.KILL_BACKGROUND_PROCESSES
<android.telephony.PhoneStateListener: void onBarringInfoChanged(BarringInfo)>|android.permission.READ_PRECISE_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<android.telephony.ims.RegistrationManager: void getRegistrationTransportType(Executor,Consumer<Integer>)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.telephony.TelephonyManager: void requestCellInfoUpdate(Executor,CellInfoCallback)>|android.permission.ACCESS_FINE_LOCATION
<android.location.LocationManager: void requestLocationUpdates(String,LocationRequest,Executor,LocationListener)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.content.pm.PackageManager: void setComponentEnabledSetting(ComponentName,int,int)>|android.permission.CHANGE_COMPONENT_ENABLED_STATE
<android.telephony.TelephonyManager: String getLine1Number()>|android.permission.READ_PHONE_STATE|android.permission.READ_SMS|android.permission.READ_PHONE_NUMBERS
<android.telephony.ims.ImsMmTelManager: void registerImsStateCallback(Executor,ImsStateCallback)>|android.permission.READ_PRECISE_PHONE_STATE|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.foo.IColorService: void redOrBlue()>|android.permission.RED|android.permission.BLUE
<android.hardware.biometrics.BiometricManager: Strings getStrings(int)>|android.permission.USE_BIOMETRIC
<android.telephony.SubscriptionManager: void setDeviceToDeviceStatusSharingPreference(int,int)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.PhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>|android.permission.READ_PHONE_STATE
<android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,PendingIntent)>|android.permission.SCHEDULE_EXACT_ALARM
<android.os.Vibrator: void vibrate(long)>|android.permission.VIBRATE
<android.companion.AssociationRequest.Builder: Builder setSelfManaged(boolean)>|android.permission.REQUEST_COMPANION_SELF_MANAGED
<android.location.LocationManager: boolean registerGnssMeasurementsCallback(Executor,Callback)>|android.permission.ACCESS_FINE_LOCATION
<android.telephony.ims.ImsRcsManager: void registerImsRegistrationCallback(Executor,RegistrationCallback)>|android.permission.READ_PRECISE_PHONE_STATE
<android.net.vcn.VcnManager: void setVcnConfig(ParcelUuid,VcnConfig)>|android.permission."carrier privileges"
<android.telephony.TelephonyManager: int getCallState()>|android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: String getDeviceSoftwareVersion()>|android.permission.READ_PHONE_STATE|android.permission.READ_BASIC_PHONE_STATE
<com.android.server.accessibility.AccessibilityManagerService: void setSystemAudioCaptioningEnabled(boolean,int)>|android.permission.SET_SYSTEM_AUDIO_CAPTION
<android.content.Context: void sendBroadcastAsUser(Intent,UserHandle,String)>|android.permission.INTERACT_ACROSS_USERS
<android.accessibilityservice.AccessibilityService: FingerprintGestureController getFingerprintGestureController()>|android.permission.USE_FINGERPRINT
<android.app.KeyguardManager: void addKeyguardLockedStateListener(Executor,KeyguardLockedStateListener)>|android.permission.SUBSCRIBE_TO_KEYGUARD_LOCKED_STATE
<android.os.Vibrator: void vibrate(long[],int,AudioAttributes)>|android.permission.VIBRATE
<android.telephony.TelephonyManager: boolean setNetworkSelectionModeManual(String,boolean)>|android.permission.MODIFY_PHONE_STATE
<android.content.pm.PackageManager: void updatePermissionFlags(String,String,int,int,UserHandle)>|android.permission.GRANT_RUNTIME_PERMISSIONS|android.permission.REVOKE_RUNTIME_PERMISSIONS
<com.android.server.graphics.fonts.FontManagerService: int updateFontFamily(List<FontUpdateRequest>,int)>|android.permission.UPDATE_FONTS
<android.telephony.SubscriptionManager: void removeSubscriptionsFromGroup(List<Integer>,ParcelUuid)>|android.permission.MODIFY_PHONE_STATE
<android.app.KeyguardManager.KeyguardLock: void reenableKeyguard()>|android.permission.DISABLE_KEYGUARD
<android.telephony.ims.ImsMmTelManager: boolean isTtyOverVolteEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.telecom.TelecomManager: void cancelMissedCallsNotification()>|android.permission.MODIFY_PHONE_STATE
<android.telephony.PhoneStateListener: void onPreciseDataConnectionStateChanged(PreciseDataConnectionState)>|android.permission.READ_PRECISE_PHONE_STATE
<android.telephony.CarrierConfigManager: PersistableBundle getConfigForSubId(int)>|android.permission.READ_PHONE_STATE
<android.telephony.ims.ImsRcsManager: void registerImsStateCallback(Executor,ImsStateCallback)>|android.permission.READ_PRECISE_PHONE_STATE|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.ACCESS_RCS_USER_CAPABILITY_EXCHANGE
<android.app.job.JobInfo.Builder: Builder setPersisted(boolean)>|android.permission.RECEIVE_BOOT_COMPLETED
<android.telephony.TelephonyCallback.PreciseDataConnectionStateListener: void onPreciseDataConnectionStateChanged(PreciseDataConnectionState)>|android.permission.READ_PRECISE_PHONE_STATE
<android.content.pm.PackageManager: boolean setAutoRevokeWhitelisted(String,boolean)>|android.permission.WHITELIST_AUTO_REVOKE_PERMISSIONS
<android.telephony.TelephonyManager: void sendUssdRequest(String,UssdResponseCallback,Handler)>|android.permission.CALL_PHONE
<android.telephony.TelephonyManager: boolean isDataEnabledForReason(int)>|android.permission.ACCESS_NETWORK_STATE|android.permission.READ_PHONE_STATE|android.permission.MODIFY_PHONE_STATE|android.permission.READ_BASIC_PHONE_STATE
<android.location.LocationManager: void requestSingleUpdate(Criteria,PendingIntent)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.location.LocationManager: void requestSingleUpdate(Criteria,LocationListener,Looper)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyManager: boolean isDataEnabled()>|android.permission.ACCESS_NETWORK_STATE|android.permission.MODIFY_PHONE_STATE|android.permission.READ_PHONE_STATE|android.permission.READ_BASIC_PHONE_STATE
<android.location.LocationManager: void requestSingleUpdate(String,PendingIntent)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyCallback.CallForwardingIndicatorListener: void onCallForwardingIndicatorChanged(boolean)>|android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: String getMeid()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.image.DynamicSystemManager.Session: boolean commit()>|android.permission.MANAGE_DYNAMIC_SYSTEM
<android.os.VibratorManager: void vibrate(CombinedVibration)>|android.permission.VIBRATE
<android.telephony.SubscriptionManager: void setDeviceToDeviceStatusSharingContacts(int,List<Uri>)>|android.permission.MODIFY_PHONE_STATE
<android.hardware.biometrics.BiometricPrompt: void authenticate(CryptoObject,CancellationSignal,Executor,AuthenticationCallback)>|android.permission.USE_BIOMETRIC
<android.location.LocationManager: boolean addGpsStatusListener(Listener)>|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyManager: int getPreferredOpportunisticDataSubscription()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PHONE_STATE
<android.content.pm.PackageManager: void revokeRuntimePermission(String,String,UserHandle,String)>|android.permission.REVOKE_RUNTIME_PERMISSIONS
<android.content.pm.PackageManager: Set<String> getWhitelistedRestrictedPermissions(String,int)>|android.permission.WHITELIST_RESTRICTED_PERMISSIONS
<android.telephony.TelephonyManager: ServiceState getServiceState(int)>|android.permission.READ_PHONE_STATE|android.permission.ACCESS_COARSE_LOCATION
<android.telephony.PhoneStateListener: void onCallStateChanged(int,String)>|android.permission.READ_PHONE_STATE
<android.app.WallpaperManager: void clear(int)>|android.permission.SET_WALLPAPER
<android.companion.virtual.VirtualDeviceManager.VirtualDevice: VirtualMouse createVirtualMouse(VirtualDisplay,String,int,int)>|android.permission.CREATE_VIRTUAL_DEVICE
<android.telephony.ims.ProvisioningManager: boolean getRcsProvisioningStatusForCapability(int,int)>|android.permission.READ_PRECISE_PHONE_STATE
<android.os.VibratorManager: void vibrate(CombinedVibration,VibrationAttributes)>|android.permission.VIBRATE
<android.os.Vibrator: void vibrate(VibrationEffect)>|android.permission.VIBRATE
<android.os.Vibrator: void vibrate(long,AudioAttributes)>|android.permission.VIBRATE
<android.telephony.SmsManager: int getSmsCapacityOnIcc()>|android.permission.READ_PHONE_STATE|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.ActivityManager: void moveTaskToFront(int,int,Bundle)>|android.permission.REORDER_TASKS
<android.telecom.TelecomManager: boolean isInManagedCall()>|android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: String getVoiceMailNumber()>|android.permission.READ_PHONE_STATE
<android.foo.IColorService: void redAndBlue()>|android.permission.RED|android.permission.BLUE
<android.telephony.TelephonyManager: int getCallStateForSubscription()>|android.permission.READ_PHONE_STATE
<android.telephony.SmsManager: void getSmsMessagesForFinancialApp(Bundle,Executor,FinancialSmsCallback)>|android.permission.SMS_FINANCIAL_TRANSACTIONS
<android.location.LocationManager: void requestLocationUpdates(long,float,Criteria,PendingIntent)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyManager: List<String> getEquivalentHomePlmns()>|android.permission.READ_PHONE_STATE
<android.location.LocationManager: void requestLocationUpdates(String,long,float,LocationListener)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<com.android.server.power.PowerManagerService.BinderService: void setLowPowerStandbyEnabled(boolean)>|android.permission.MANAGE_LOW_POWER_STANDBY|android.permission.DEVICE_POWER
<android.net.vcn.VcnManager: void clearVcnConfig(ParcelUuid)>|android.permission."carrier privileges"
<android.telephony.SubscriptionManager: List<SubscriptionInfo> getSubscriptionsInGroup(ParcelUuid)>|android.permission.READ_PHONE_STATE
<android.app.AlarmManager: void setExact(int,long,String,OnAlarmListener,Handler)>|android.permission.SCHEDULE_EXACT_ALARM
<android.telephony.TelephonyManager: Map<Integer, List<EmergencyNumber>> getEmergencyNumberList()>|android.permission.READ_PHONE_STATE
<com.android.server.timedetector.GnssTimeUpdateService: boolean startGnssListening()>|android.permission.SET_TIME
<android.content.pm.PackageInstaller: void uninstall(VersionedPackage,IntentSender)>|android.permission.DELETE_PACKAGES|android.permission.REQUEST_DELETE_PACKAGES
<android.app.KeyguardManager: void removeKeyguardLockedStateListener(KeyguardLockedStateListener)>|android.permission.SUBSCRIBE_TO_KEYGUARD_LOCKED_STATE
<android.telephony.CarrierConfigManager: void notifyConfigChangedForSubId(int)>|android.permission.MODIFY_PHONE_STATE
<android.app.ActivityManager: void moveTaskToFront(int,int)>|android.permission.REORDER_TASKS
<android.content.pm.PackageInstaller: void uninstallExistingPackage(String,IntentSender)>|android.permission.DELETE_PACKAGES
<android.telephony.PhoneStateListener: void onCellLocationChanged(CellLocation)>|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyCallback.BarringInfoListener: void onBarringInfoChanged(BarringInfo)>|android.permission.READ_PRECISE_PHONE_STATE|android.permission.ACCESS_FINE_LOCATION
<android.app.AlarmManager: void setTimeZone(String)>|android.permission.SET_TIME_ZONE
<android.content.Context: void sendStickyOrderedBroadcastAsUser(Intent,UserHandle,BroadcastReceiver,Handler,int,String,Bundle)>|android.permission.INTERACT_ACROSS_USERS|android.permission.BROADCAST_STICKY
<android.telephony.TelephonyManager: ServiceState getServiceState()>|android.permission.READ_PHONE_STATE|android.permission.ACCESS_COARSE_LOCATION
<android.telephony.TelephonyManager: PersistableBundle getCarrierConfig()>|android.permission.READ_PHONE_STATE
<android.content.pm.PackageManager: void revokeRuntimePermission(String,String,UserHandle)>|android.permission.REVOKE_RUNTIME_PERMISSIONS
<android.telecom.TelecomManager: Uri getAdnUriForPhoneAccount(PhoneAccountHandle)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.TelephonyManager: int getCallComposerStatus()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.content.pm.PackageManager: void removeOnPermissionsChangeListener(OnPermissionsChangedListener)>|android.permission.OBSERVE_GRANT_REVOKE_PERMISSIONS
<com.android.server.pm.verify.domain.DomainVerificationManagerInternal: DomainVerificationInfo getDomainVerificationInfo(String)>|android.permission.DOMAIN_VERIFICATION_AGENT|android.permission.UPDATE_DOMAIN_VERIFICATION_USER_SELECTION
<android.os.UserManager: void setUserRestriction(String,boolean)>|android.permission.MANAGE_USERS
<android.telecom.TelecomManager: List<PhoneAccountHandle> getSelfManagedPhoneAccounts()>|android.permission.READ_PHONE_STATE
<android.location.LocationManager: boolean registerGnssMeasurementsCallback(GnssMeasurementRequest,Executor,Callback)>|android.permission.ACCESS_FINE_LOCATION
<android.telephony.PhoneStateListener: void onCallDisconnectCauseChanged(int,int)>|android.permission.READ_PRECISE_PHONE_STATE
<android.telecom.TelecomManager: boolean isVoiceMailNumber(PhoneAccountHandle,String)>|android.permission.READ_PHONE_STATE
<android.nfc.cardemulation.CardEmulation: CharSequence getDescriptionForPreferredPaymentService()>|android.permission.NFC_PREFERRED_PAYMENT_INFO
<android.telephony.CarrierConfigManager: PersistableBundle getConfigByComponentForSubId(String,int)>|android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: boolean isManualNetworkSelectionAllowed()>|android.permission.READ_PRECISE_PHONE_STATE|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.KeyguardManager.KeyguardLock: void disableKeyguard()>|android.permission.DISABLE_KEYGUARD
<android.app.ActivityManager: void dumpPackageState(FileDescriptor,String)>|android.permission.DUMP
<android.content.pm.PackageManager: void setApplicationEnabledSetting(String,int,int)>|android.permission.CHANGE_COMPONENT_ENABLED_STATE
<android.telephony.SmsManager: void sendTextMessageWithoutPersisting(String,String,String,PendingIntent,PendingIntent)>|android.permission.MODIFY_PHONE_STATE|android.permission.SEND_SMS
<android.content.pm.PackageManager: void grantRuntimePermission(String,String,UserHandle)>|android.permission.GRANT_RUNTIME_PERMISSIONS
<com.android.server.location.LocationManagerService: void setAutomotiveGnssSuspended(boolean)>|android.permission.CONTROL_AUTOMOTIVE_GNSS
<android.telephony.TelephonyManager: void clearSignalStrengthUpdateRequest(SignalStrengthUpdateRequest)>|android.permission.MODIFY_PHONE_STATE
<android.location.LocationManager: void requestLocationUpdates(String,long,float,PendingIntent)>|android.permission.ACCESS_COARSE_LOCATION|android.permission.ACCESS_FINE_LOCATION
<android.telephony.TelephonyManager: String getManualNetworkSelectionPlmn()>|android.permission.READ_PRECISE_PHONE_STATE
<android.telephony.euicc.EuiccManager: void updateSubscriptionNickname(int,String,PendingIntent)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.telephony.ims.ImsMmTelManager: void unregisterMmTelCapabilityCallback(CapabilityCallback)>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.app.WallpaperManager: void clear()>|android.permission.SET_WALLPAPER
<android.app.WallpaperManager: int setBitmap(Bitmap,Rect,boolean,int)>|android.permission.SET_WALLPAPER
<android.companion.virtual.VirtualDeviceManager.VirtualDevice: void close()>|android.permission.CREATE_VIRTUAL_DEVICE
<android.app.WallpaperManager: void setResource(int)>|android.permission.SET_WALLPAPER
<android.telephony.ims.RegistrationManager: void getRegistrationState(Executor,Consumer<Integer>)>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.KeyguardManager: void exitKeyguardSecurely(OnKeyguardExitResult)>|android.permission.DISABLE_KEYGUARD
<android.content.Context: boolean bindServiceAsUser(Intent,ServiceConnection,int,UserHandle)>|android.permission.INTERACT_ACROSS_USERS|android.permission.INTERACT_ACROSS_USERS_FULL|android.permission.INTERACT_ACROSS_PROFILES
<android.telephony.TelephonyManager: void setCallComposerStatus(int)>|android.permission.MODIFY_PHONE_STATE
<android.telephony.ServiceState: int getCdmaNetworkId()>|android.permission.ACCESS_FINE_LOCATION|android.permission.ACCESS_COARSE_LOCATION
<android.telephony.SubscriptionManager: SubscriptionInfo getActiveSubscriptionInfo(int)>|android.permission.READ_PHONE_STATE
<android.telephony.SmsManager: boolean setSmscAddress(String)>|android.permission.MODIFY_PHONE_STATE
<android.content.Context: void sendBroadcastAsUser(Intent,UserHandle)>|android.permission.INTERACT_ACROSS_USERS
<android.telephony.ims.ProvisioningManager: void setProvisioningStatusForCapability(int,int,boolean)>|android.permission.MODIFY_PHONE_STATE
<android.location.LocationManager: GpsStatus getGpsStatus(GpsStatus)>|android.permission.ACCESS_FINE_LOCATION
<android.telephony.SubscriptionManager: void switchToSubscription(int,PendingIntent)>|android.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
<android.telephony.TelephonyManager: void setNetworkSelectionModeAutomatic()>|android.permission.MODIFY_PHONE_STATE
<android.telephony.ims.ProvisioningManager: void setRcsProvisioningStatusForCapability(int,int,boolean)>|android.permission.MODIFY_PHONE_STATE
<android.telecom.TelecomManager: String getLine1Number(PhoneAccountHandle)>|android.permission.READ_PHONE_STATE|android.permission.READ_SMS|android.permission.READ_PHONE_NUMBERS
<android.telephony.PhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>|android.permission.READ_PHONE_STATE
<android.telephony.PhoneStateListener: void onImsCallDisconnectCauseChanged(ImsReasonInfo)>|android.permission.READ_PRECISE_PHONE_STATE
<android.content.pm.PackageManager: boolean addWhitelistedRestrictedPermission(String,String,int)>|android.permission.WHITELIST_RESTRICTED_PERMISSIONS
<android.telephony.ims.ImsMmTelManager: boolean isCrossSimCallingEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.os.RecoverySystem: void installPackage(Context,File)>|android.permission.RECOVERY
<android.app.WallpaperManager: void setDisplayPadding(Rect)>|android.permission.SET_WALLPAPER_HINTS
<android.content.pm.PackageManager: void addOnPermissionsChangeListener(OnPermissionsChangedListener)>|android.permission.OBSERVE_GRANT_REVOKE_PERMISSIONS
<android.telecom.TelecomManager: boolean endCall()>|android.permission.ANSWER_PHONE_CALLS
<android.telephony.TelephonyManager: String getImei()>|android.permission.READ_PRIVILEGED_PHONE_STATE
<android.content.pm.PackageManager: int getPermissionFlags(String,String,UserHandle)>|android.permission.GRANT_RUNTIME_PERMISSIONS|android.permission.REVOKE_RUNTIME_PERMISSIONS|android.permission.GET_RUNTIME_PERMISSIONS
<android.telephony.ims.ImsMmTelManager: boolean isVoWiFiSettingEnabled()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
<android.telephony.TelephonyCallback.CallStateListener: void onCallStateChanged(int)>|android.permission.READ_PHONE_STATE
<android.media.AudioManager: boolean setEncodedSurroundMode(int)>|android.permission.WRITE_SETTINGS
<android.telecom.TelecomManager: void acceptRingingCall(int)>|android.permission.ANSWER_PHONE_CALLS|android.permission.MODIFY_PHONE_STATE
<android.app.WallpaperManager: int setStream(InputStream,Rect,boolean)>|android.permission.SET_WALLPAPER
<android.media.AudioManager: boolean setSurroundFormatEnabled(int,boolean)>|android.permission.WRITE_SETTINGS
<android.telephony.TelephonyCallback.EmergencyNumberListListener: void onEmergencyNumberListChanged(Map<Integer, List<EmergencyNumber>>)>|android.permission.READ_PHONE_STATE
<android.telephony.ServiceState: int getCdmaSystemId()>|android.permission.ACCESS_FINE_LOCATION|android.permission.ACCESS_COARSE_LOCATION
<android.telephony.ims.RcsUceAdapter: boolean isUceSettingEnabled()>|android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: int getSubscriptionId(PhoneAccountHandle)>|android.permission.READ_PHONE_STATE
<android.telecom.TelecomManager: void startConference(List<Uri>,Bundle)>|android.permission.CALL_PHONE
<android.telecom.TelecomManager: boolean isTtySupported()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PHONE_STATE
<android.app.WallpaperManager: Drawable getFastDrawable()>|android.permission.READ_EXTERNAL_STORAGE
<android.telephony.TelephonyManager: List<NeighboringCellInfo> getNeighboringCellInfo()>|android.permission.ACCESS_COARSE_LOCATION
<android.telephony.TelephonyManager: int getNetworkType()>|android.permission.READ_PHONE_STATE
<android.location.LocationManager: boolean registerGnssNavigationMessageCallback(Callback,Handler)>|android.permission.ACCESS_FINE_LOCATION
<com.android.server.accessibility.AccessibilityManagerService: void setSystemAudioCaptioningUiEnabled(boolean,int)>|android.permission.SET_SYSTEM_AUDIO_CAPTION
<android.app.AlarmManager: void setAlarmClock(AlarmClockInfo,PendingIntent)>|android.permission.SCHEDULE_EXACT_ALARM
<android.telephony.SubscriptionManager: boolean setOpportunistic(boolean,int)>|android.permission.MODIFY_PHONE_STATE
<android.telecom.TelecomManager: String getVoiceMailNumber(PhoneAccountHandle)>|android.permission.READ_PHONE_STATE
<android.telecom.TelecomManager: boolean isInCall()>|android.permission.READ_PHONE_STATE
<android.telephony.ims.ImsRcsManager: void unregisterImsRegistrationCallback(RegistrationCallback)>|android.permission.READ_PRECISE_PHONE_STATE
<android.security.KeyChain: boolean removeCredentialManagementApp(Context)>|android.permission.MANAGE_CREDENTIAL_MANAGEMENT_APP
<android.telephony.TelephonyManager: String getVisualVoicemailPackageName()>|android.permission.READ_PHONE_STATE
<android.telephony.TelephonyManager: int getNetworkSelectionMode()>|android.permission.READ_PRIVILEGED_PHONE_STATE|android.permission.READ_PRECISE_PHONE_STATE
